(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    216143,       4400]
NotebookOptionsPosition[    206363,       4268]
NotebookOutlinePosition[    206995,       4290]
CellTagsIndexPosition[    206952,       4287]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Plot", ",", " ", "ListPlot", ",", "LogLogPlot", ",", "LogLinearPlot", 
      ",", "LogPlot"}], "}"}], ",", 
    RowBox[{"GridLines", "->", "Automatic"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8836448083974648`*^9, 3.88364482728001*^9}, {
  3.8837284426212807`*^9, 3.883728443369268*^9}, {3.883728549683343*^9, 
  3.883728556784124*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"14eef8f1-fbb0-4156-b457-e5e0efcea88a"],

Cell["\<\
\[Pi][x] \[Dash] number of primes numbers \[LessEqual] x, aka prime counting \
function.\
\>", "Text",
 CellChangeTimes->{{3.883736898182987*^9, 3.883736966756977*^9}, {
  3.883737065122068*^9, 3.883737074500359*^9}, {3.883815632567401*^9, 
  3.883815634574924*^9}},ExpressionUUID->"caff141d-4d47-4a0c-b6d6-\
0bd7ee3ad78a"],

Cell[CellGroupData[{

Cell["Prime numbers", "Subsection",
 CellChangeTimes->{{3.883644836826107*^9, 
  3.8836448441890097`*^9}},ExpressionUUID->"9a279c80-4e6b-4f64-bf0b-\
08e811ef49d0"],

Cell[BoxData[
 RowBox[{"Prime", "[", " ", 
  RowBox[{"Range", "[", "30", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8835402349119797`*^9, 3.883540241453404*^9}, {
  3.883642185574444*^9, 3.883642197915801*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6d7489d2-eedb-4820-94f1-37cf403848b5"],

Cell[BoxData[
 RowBox[{"Accumulate", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"cf299a75-e7e8-4297-9986-9f1b5fe10848"],

Cell[BoxData[
 RowBox[{"Accumulate", "[", 
  RowBox[{"Prime", "[", " ", 
   RowBox[{"Range", "[", "30", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8835402500128527`*^9, 3.883540256201606*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bade8a74-fd9e-4870-a021-00052005a540"],

Cell[BoxData[
 RowBox[{
  RowBox[{"primes1K", "=", 
   RowBox[{"Prime", "[", " ", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883642202254614*^9, 3.883642241585896*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"43341a82-526d-4bf6-b388-9e32bb8aa9d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"primes1K", ",", " ", 
    RowBox[{"Accumulate", "[", 
     SuperscriptBox["primes1K", "1"], "]"}]}], "}"}], 
  "\[Transpose]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"401bf8e5-0242-4dcb-a2f5-8fa0148cac0c"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"primes1K", ",", " ", 
     RowBox[{"Accumulate", "[", 
      SuperscriptBox["primes1K", "1"], "]"}]}], "}"}], "\[Transpose]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883642226848465*^9, 3.883642290592518*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e00133e1-da97-4485-8fec-31cc6d57b5cf"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"primes1K", ",", " ", 
     RowBox[{"Accumulate", "[", 
      SuperscriptBox["primes1K", 
       RowBox[{"-", "1"}]], "]"}]}], "}"}], "\[Transpose]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.883642281883665*^9, 3.883642293929983*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2efe29fc-fe1f-4a61-83ac-6eb309f49c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"primes1K", ",", " ", 
    RowBox[{"Accumulate", "[", 
     SuperscriptBox["primes1K", "0"], "]"}]}], "}"}], 
  "\[Transpose]"}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"88e11c56-3402-4c04-85d9-ae646d69ab2f"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"primes1K", ",", " ", 
     RowBox[{"Accumulate", "[", 
      SuperscriptBox["primes1K", "0"], "]"}]}], "}"}], "\[Transpose]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883642305585085*^9, 3.883642306508322*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b728b110-a793-47b1-8ece-b3ae34370256"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Accumulate", "[", 
   SuperscriptBox["primes1K", "0"], "]"}], "\[Equal]", 
  RowBox[{"Range", "[", 
   RowBox[{"Length", "[", "primes1K", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.883802001604061*^9, 3.883802022389181*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5a55e75d-2698-4850-b7c1-422a0b7632fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Let\[CloseCurlyQuote]s crack primes counting \[Pi]  function", \
"Subsection",
 CellChangeTimes->{{3.883644855136323*^9, 3.883644887017728*^9}, 
   3.883806707036977*^9},ExpressionUUID->"74b37c91-21ad-4d7e-b314-\
38d0de826c66"],

Cell["Number of prime numbers \[LessEqual] x", "Text",
 CellChangeTimes->{{3.883642863840376*^9, 3.883642914215807*^9}, {
  3.883815638982276*^9, 
  3.883815639063506*^9}},ExpressionUUID->"77182b41-cfbb-42e4-8002-\
1837de77f9e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"primes30", "=", 
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", "30", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838036363805437`*^9, 3.883803650088279*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"9530998e-99f2-470f-83b1-3ed410306ea3"],

Cell[BoxData[
 RowBox[{"gl", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"primes30", ",", " ", 
       RowBox[{"Accumulate", "[", 
        SuperscriptBox["primes30", "0"], "]"}]}], "}"}], "\[Transpose]"}], 
    ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.883642968337062*^9, 3.883642977253913*^9}, {
  3.883738449845381*^9, 3.8837384754298067`*^9}, {3.883803522237906*^9, 
  3.883803657212471*^9}, {3.883817039931072*^9, 3.883817041135604*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"08d711f9-e9ad-4f00-8fc9-6026efb20e07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"primes", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Prime", "[", " ", 
     RowBox[{"Range", "[", "3002195", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"primePi", " ", "=", " ", 
   RowBox[{"Accumulate", "[", 
    SuperscriptBox["primes", "0"], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.88353879286164*^9, 3.883538806620569*^9}, {
   3.8835402024138613`*^9, 3.883540205245534*^9}, 3.8835419229502907`*^9, {
   3.88364490808601*^9, 3.883644915724042*^9}, {3.8836456152777367`*^9, 
   3.883645617014722*^9}, {3.883806750098082*^9, 3.883806754990918*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e8a0fab8-7874-43c4-b854-4d960a0f6548"],

Cell["But we have already PrimePi function in Mathematica", "Text",
 CellChangeTimes->{{3.883806760400567*^9, 
  3.8838067828385677`*^9}},ExpressionUUID->"3ff8c933-6cf0-49f8-ab70-\
f2467ca3f2a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimePi", "[", "2", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"{", "2", "}"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8836428763262444`*^9, 3.883642881458413*^9}, {
  3.883642931990615*^9, 3.883642939350707*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"bed177d1-25fa-4def-b4a2-fb7296fc0a94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimePi", "[", "10", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.883642928228505*^9, 3.883642951614813*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f5b41c9a-7e63-441d-9dd5-3a79c27e02a2"],

Cell[BoxData[
 RowBox[{"PrimePi", "[", "600000000000", "]"}]], "Input",
 CellChangeTimes->{{3.883642848380568*^9, 3.883642853727503*^9}, {
  3.883738427755975*^9, 3.8837384312890882`*^9}, {3.883814689386519*^9, 
  3.883814689683353*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"490fecf6-a815-4334-b052-237644fa8f81"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"PrimePi", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "70"}], "}"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "200"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8836430064966793`*^9, 3.8836430327619343`*^9}, {
   3.883737465044362*^9, 3.8837374653793077`*^9}, 3.883802717909618*^9, {
   3.883803543610641*^9, 3.88380354577472*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2a8d0dc0-f7bf-4cb6-af1e-650a2df8b65c"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"g", ",", "gl"}], "]"}]], "Input",
 CellChangeTimes->{{3.883803582402019*^9, 3.883803587491878*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"09e7127c-5632-4883-af17-095cf2a9c03b"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PrimePi", "[", "x", "]"}], "/", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2", ",", "1000000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883546475974359*^9, 3.8835464801099033`*^9}, {
  3.8836423240736847`*^9, 3.883642434553935*^9}, {3.883642485847661*^9, 
  3.883642523956663*^9}, {3.88364257070846*^9, 3.883642580425872*^9}, {
  3.883737468801581*^9, 3.883737502858382*^9}, {3.883738494296095*^9, 
  3.883738638010531*^9}, {3.883802693605146*^9, 3.8838027948917007`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d1e33a72-aad4-42ab-a393-da4cb0089cf0"],

Cell["8 % of numbers are prime in [1, 1 000 000]", "Text",
 CellChangeTimes->{{3.883806818655698*^9, 
  3.883806847905631*^9}},ExpressionUUID->"9356bffa-c434-4b89-b311-\
fa51b2a2409c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   FractionBox[
    RowBox[{"PrimePi", "[", "x", "]"}], "x"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Exp", "[", "lx", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"lx", ",", "2", ",", "30"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883802953837708*^9, 3.883803116518729*^9}, {
  3.883803151105626*^9, 3.8838032143522797`*^9}, {3.8838033008899603`*^9, 
  3.8838034313068132`*^9}, {3.883803714390881*^9, 3.883803727628525*^9}, {
  3.883806868489147*^9, 3.883806877981594*^9}, {3.883817193987969*^9, 
  3.8838171941460533`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e5419a7a-7ea2-4ce2-9abc-baf909e2bf2e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   FractionBox[
    RowBox[{"PrimePi", "[", "x", "]"}], 
    RowBox[{"x", " ", "/", 
     RowBox[{"Log", "[", "x", "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"Exp", "[", "lx", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"lx", ",", "2", ",", "30"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883802953837708*^9, 3.883803116518729*^9}, {
   3.883803151105626*^9, 3.8838032143522797`*^9}, {3.8838033008899603`*^9, 
   3.8838034313068132`*^9}, {3.883803714390881*^9, 3.883803752179845*^9}, {
   3.883803832144286*^9, 3.8838038401990547`*^9}, 3.883805841391428*^9, {
   3.883806901312449*^9, 3.883806910947537*^9}, {3.883814796635282*^9, 
   3.88381491159824*^9}, {3.883814963315146*^9, 3.883814970614585*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"4c6e63dd-5771-4de6-9644-0094fdb67084"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Theorem", ":", " ", 
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"x", "\[Rule]", " ", "\[Infinity]"}]], 
    FractionBox[
     RowBox[{"PrimePi", "[", "x", "]"}], 
     RowBox[{"x", " ", "/", 
      RowBox[{"Log", "[", "x", "]"}]}]]}]}], " ", "=", " ", "1"}]], "Text",
 CellChangeTimes->{{3.883806913078229*^9, 3.8838069700506973`*^9}, {
  3.88381498579706*^9, 
  3.8838149874433613`*^9}},ExpressionUUID->"4e1012ad-90cb-4475-990e-\
99bbdc8f0ab1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "a_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"PrimePi", "[", "x", "]"}], "-", 
    FractionBox["x", 
     SuperscriptBox[
      RowBox[{"Log", "[", "x", "]"}], "a"]]}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"<", 
    RowBox[{
     RowBox[{"-", " ", "wrong"}], " ", "idea"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8838069971958942`*^9, 
  3.883807025469149*^9}},ExpressionUUID->"9b8436fa-3aa7-4cf3-a80a-\
7875104c96f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "a_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"PrimePi", "[", "x", "]"}], "-", 
    FractionBox["x", 
     RowBox[{
      RowBox[{"Log", "[", "x", "]"}], "-", "a"}]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "a"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2", ",", "50000000"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.086"}], "}"}], ",", "0.5", ",", "1.5"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8838037591362467`*^9, 3.883803816999522*^9}, 
   3.8838039071451063`*^9, {3.883803998425818*^9, 3.88380402831044*^9}, {
   3.8838057429963512`*^9, 3.883805746954001*^9}, {3.883805805760154*^9, 
   3.8838058305043783`*^9}, {3.88380588774675*^9, 3.883805896143734*^9}, {
   3.883806934002894*^9, 3.883806938034648*^9}, 3.883806982244782*^9, 
   3.883815074323543*^9, {3.883817322683424*^9, 3.88381732451682*^9}, {
   3.883817399151013*^9, 3.8838174030780354`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"01627fb6-af97-4af8-b561-a66f5dd0f4f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "a_"}], "]"}], ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"PrimePi", "[", "x", "]"}], "-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "-", "a"}]]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "a"}], "]"}], ",", 
       RowBox[{"0.01", "b", " ", 
        SuperscriptBox["x", "c"]}]}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2", ",", "10000000"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.05"}], "}"}], ",", "0.9", ",", "1.2"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "2.1"}], "}"}], ",", "0.001", ",", "4"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.67"}], "}"}], ",", "0.1", ",", "0.8"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8838037591362467`*^9, 3.883803816999522*^9}, 
   3.8838039071451063`*^9, {3.883803998425818*^9, 3.88380402831044*^9}, {
   3.8838057429963512`*^9, 3.883805746954001*^9}, {3.883805805760154*^9, 
   3.8838058305043783`*^9}, {3.88380588774675*^9, 3.883805896143734*^9}, {
   3.8838059931698523`*^9, 3.883806065585825*^9}, {3.8838061003180027`*^9, 
   3.883806167807719*^9}, {3.8838061998850813`*^9, 3.883806382070429*^9}, {
   3.883806424286585*^9, 3.883806495292597*^9}, {3.8838065521141167`*^9, 
   3.883806561618903*^9}, {3.883806630836828*^9, 3.883806657576598*^9}, {
   3.8838070517556667`*^9, 3.88380705191741*^9}, {3.883807193126142*^9, 
   3.883807236444584*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"d88722cd-6ea0-41e3-8984-70888a7241ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "a_", ",", "b_", ",", "c_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PrimePi", "[", "x", "]"}], "-", 
      FractionBox["x", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "-", "a"}]], "-", 
      RowBox[{"0.01", "b", " ", 
       SuperscriptBox["x", "c"]}]}], " ", ")"}], "/", 
    RowBox[{"Sqrt", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "a", ",", "b", ",", "c"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2", ",", "10000000"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.05"}], "}"}], ",", "0.9", ",", "1.2"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "2.1"}], "}"}], ",", "0.001", ",", "4"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.67"}], "}"}], ",", "0.1", ",", "0.8"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8838072760450087`*^9, 3.883807302033312*^9}, {
  3.8838175964203997`*^9, 3.8838175997889557`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"bfd0a284-7d5f-42fd-ae45-10b44e1bb64b"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.883833387180377*^9},ExpressionUUID->"30a6fb02-f317-4c60-83c8-\
8a202176e48c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "a_", ",", "b_", ",", "c_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PrimePi", "[", "x", "]"}], "-", 
      FractionBox["x", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "-", "a"}]], "-", 
      RowBox[{"0.01", "b", " ", 
       SuperscriptBox["x", "c"]}], " ", "+", "40"}], ")"}], "/", 
    RowBox[{"Sqrt", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "a", ",", "b", ",", "c"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2", ",", "10000000"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", "  ", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "4"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "1.05"}], "}"}], ",", "0.9", ",", "1.2"}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "2.1"}], "}"}], ",", "0.001", ",", "4"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.67"}], "}"}], ",", "0.1", ",", "0.8"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.88380733754569*^9, 3.8838073637050343`*^9}, {
  3.883807418632928*^9, 3.883807419464013*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"61805677-9554-4567-8e1a-507f9d135558"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"x", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "x", "]"}], "-", "1.05"}], ")"}]}], "-", 
      RowBox[{"0.021", " ", 
       SuperscriptBox["x", "0.67"]}], "+", "40"}], ")"}], " "}], 
   RowBox[{"Sqrt", "[", "x", "]"}]], "==", "noise"}]], "Input",
 CellChangeTimes->{{3.883644249051126*^9, 3.883644273865878*^9}, {
  3.883733352814643*^9, 3.8837333800443068`*^9}, {3.883733437500999*^9, 
  3.883733455291778*^9}, {3.883807440174564*^9, 
  3.883807463666617*^9}},ExpressionUUID->"bb5224e1-ac47-4c54-ba1e-\
30743726c81a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"pi", "-", 
        RowBox[{"n", " ", "/", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "n", "]"}], "-", "1.05"}], ")"}]}], "-", 
        RowBox[{"0.021", " ", 
         SuperscriptBox["n", "0.67"]}], " ", "+", " ", "40"}], ")"}], " ", 
      "/", " ", 
      RowBox[{"Sqrt", "[", "n", "]"}]}], "\[Equal]", "noise"}], ",", 
    "\[IndentingNewLine]", "pi"}], "\[IndentingNewLine]", "]"}], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.883644264711977*^9, 3.8836443256696463`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"0ee35c42-d396-4f13-92ba-94bb03a687af"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Q7fRkHMdcRi+9nsT+tzEyr+MJ42WfyffjJ7fWcu75rc757Zduo2vfW4un5u8
9rmp1tHqNQ68VOr0hJbfav9Y8dwVt4898szSaEzA5W9Xr9VdzXG2HF/72lR7
peo1DvR01+pPGr67L97F317NbVc9i02t22jIZ3u0k1K3iW9cm6K9d18j4Q/s
qNWfNLy6TVfo+H1gam2dfV3Fc07RkM/m8Lmr76m7PcZmcH3ccm2EH/jRt76F
Vl9p+E77y8zvFRnVx+zv/ergb6MhY6Y8S0B847Mp9krkuPfkTr71zFjdYZ+5
k7+tzJNH9wNK3UZDxk01P4lvjBm6/X0culWtnx2ss353z28rn0mqLFut22jI
mKnOSnGOfNwUa2D1OgefQa/30e/dzpNHtXr0PZmf30a3x02Z466+l11MsVfK
zB2+e8bH2Tr3/PdvfYbHwbfFw2etW/67i789o7nqz3RV+9toyLgpdJu8xJx1
1m3355Hu8rmhM477qtbEnaxLzseV3149y93RnPnt0ueRK9qnoN7R8Vqq2xu1
88NEOW5ZrLHyfHM3vysCcfEe43mx79L87WjseuX1rs9+K3U7TUOM+5hMfYmO
17S8hHgsV+l4B91++NXV6/XLPW2r4cTFNf2/c/8pdHDk/c48+ep3h7fXbVN7
DZlRt6NtbtPtivZO0O6qM+U7fHZ4l88OPejenrtZRd9XfR9Y9+ePj5bVUrcX
22PkM/fLfxPeXzTfajlLvji+os8ccLbz614puLZN6faunx3urt87tukOlu17
dzyXtrIGZvriat2W+X7i+7b01910W9xOspjVprq9g389eL/t9Ltjux5zcdaq
63xlO/VldM2S5v2S6tJKt43tZGv33XU7qc3D5W+k2x11JXrPXfLf1WcDrrT3
mM8PO9bCV3v++2iZlZbR5878ttvnVb0/Et8s1e3F+rufNztVzm66vdBOlc/1
i7Rzlm5Xa4rbqn3vivZ91dNnXVbtJV91/d1179rn3eLkFb73Stnlur1YX2V7
zubDT1+7g26Lx9unvZPlWftB3Y60+Zlu383HvrIq3zvr/l51+qGrKp2e0fLn
+lRpuFO7K8+TO/yUlc+QR9bddN1OuDe3ndY9Sbd/P2aNeyRH/0jPvC3qdnAN
+5luf+vzPrJ9b/e+6J1WZ+r0iI4/1osK/XadV8s8T+7MS6+8d8ZfPHtvqm4n
tZOqD12+d6pui9pQ3Sfh6xbq9t3j4lVr+Zu13dbOzzrYTauvNPy17rv2d5fP
b+/mP6br9kkbqdq8ak+1oikpur1wb5ltuHImIaLfj7EaXbu+KS6evZa/4qj3
Q/M6+tYz+p3tg6v7u1t+O7wOJVmqbidpgUo7JGVW6rawDSJn/hz9MNvWz7od
XbfQ7F+aK+ft8LV31+tq/VZqt0u3I+tSeB26+Lfid8+/t+q2YR3fKq5RodsF
7eXW56FyzLqNnZtDu5X12y0evqLfz/fpNJV2V3yPp3t9yzC7bk+2hattZq8z
Enuf2ldk6rZoDLo/V6eq5y9e+0G3qz9bo9Cfb/jMr9LXLv3eo5vqt0K7s/Pb
Hda0T9eduY8M3e6iyQqNWHp/hm43GIuz17f46Re6vYt90uauz/BQabeyHb/x
+24V68sni36uoHN+e9Qvc58ZutJ2i24nr/8ZFs6xO3VbcE+yc2KL7SYd3xvq
tuIZH8/P8XgtM8uimq36fN03+dlnY+G5HRwW0e7K56W5dWXLz2+b1vWoDmTF
5S/NodtP91I5XjNz3ENlvNHtTnHlR32cnx2u0vCIbitj5NXa2cHcvvdqjKWb
vx2No69q3ar+KXU7qhtVce6zchQ5kV/4tGLddpzhq84Fyer9ottdrOKzw5ln
jyP5T1X73vUM2mrfO/t8B93uFLtVrMEy3Ta3Ted2H815PP4m0+3G7VKa435+
fTPdrj7bnKXfKzFURYz8W3PaI/3+PP7EfT29T6v6/u2R14z+PuKHdjiXdpQx
u7a68qYjbbsSM1fGdxW6PRobv7oP9ZkJZ9stj5En3a6Mk1frdeY6/rDZGKoi
Ri75rrwbm6vPZ/dpjvx2Vx/Gse5l6fZOberSmSzdXs3lX70v4wyaqt6/sL+u
9bc7+4CPGKpLvzPX8s7t3MkebaXu65l9WkV+e0WfVGuQKvdX7W9ntlm07VbK
udLTSn97Z5tt9+d/Z2n069w4fnbxsSvW8pkYqkK3d2jrDuY4r5bZ14dlrvmK
9V/x+gzdVp5vcvh+Cr2fqdcddbvqLOKsuXTpk2ZXr8/Va/lho36Y4lrVbbiT
mbR7KF5efZ68ct1U5MU7+Nsd2tN93cw4+dk9ne0xRs9IRPdC0TjFbHlV/vbO
8dpKP+xb27zSHm2n7O+RfVrl57dX9KBLDrhLflt5z8q2dcZX7uRv72Jo9rg5
Pjf0yQ+LniW/Q7vfSbu7+dtZuqs8c371+m7+9uh9ZevVSjz89XdV59IU7T1y
fxnXmbl+tr89rB2KMbmhdrt1m9x2H+3+FGPp8v3bznUy+r6rNa1Ct7O0WJWX
VvVHlb8dvT/FGM2o55Wp16Upzc643w20+8rnjn4GDN3u1deHXcXLKz+/3SXm
vXLtLN1W7kuqY+3RcjvEySv2K1X9kuVvvz2DltAmp20jXM/V+W50u69lxlh2
8bdH10t13PPTdarj5FU+tqLM1X7smN8eyctk5kFUdX6YU7d/0uy/Gpvn0fk/
nKcRrefPe5OonfncxMl7mHqfdtbfmfntDv616uxchW7v4Bc7+22H/LazT2Zj
5cr7cOm1+3yHxATrudvnRrf72KM9Vf39Ll7u1O3OMcCZsrrlt1fawnHW6koj
VL7Su79X+NtVvnJmPOXK1GvRo7zf57RN41NeVmAtV8ZQ363jnCfvY4ZzDb84
o1b1+e2Z9dtx1lY1v6vy28o1v5PPeVXHLnFy59gdfV+GVmXktxVtsfqe5T1k
sR92dtY4qtu/748GuncHc59J3CW/HZ3Ls9o0um528Lc7t/tqO3fIbzt8cece
yRFreZhar9+N+2g7po/fhfVctZardfuntbyB5t3FnvdD6j7PPE/uXFdca96n
1++W33Zfw9WXnfztHcbnalln81Wt2Z/WjZV7dq8vb9tmci1XnVt6d16J55P3
M5fP3dnfXj4Hapyvr7/r4G9H1ir1WajINTvkt5X7Gld8V9GWs/astwrdXvG1
3XusUH8lr+WOnCexcr2p4+WPsw3d8tvOddGhi5Wf31acBXOuberrVvjbqlz2
yp5S3Z+RGL1q3Rn1td1jzLIHGFzLVT73G92WfP82PrfWlJ8Ne+zXuj+f3G1R
36+rv93NZtu5Q357N3Pei1K3I3nt7DaZPv+Q6IO9xsqjZ8of/fP7Nb2B3t3J
1D53h+/xVMbIIvN0xZe8Q3579QxC5j7tzvltV4w4Go9y5bcj9Zgdoyvvk4yJ
D+v4s0aqdFvlh+Fz600ZLz/6uPp7PBXrjjvv3T2/7YqPO8+YRfqx2/d4zo61
6hz6ynsVOvPu89od9k3qsTuS81as4yc5bkms/PfregO9u5Mp5pDSnOuF4/3K
+dvt89sZcYmK8jv72x3G46f6RP11xTrhyAmpfW+5Xazjjhy3Ilb+6Ct8bq05
nl+u0G3FeuGez6prdvK3M9v1rDxVjHJkLO34nNNInigjH/GpTPVasVKfqr1m
+LpG/8v1DMyf+itT28Tt29HUzy/PmIurcyJTy2dzabvlt1fuuYM/WelvZ+SW
I+/PeG10jXiOkZ/Vw9Vm7j3r0N9Na/hJjjscK/9Zn3XR59W+baDXz1at12e6
HfEtIv2WlRd8fv/xs9rfVsTXM+dSNLYZ3Su9G7OO+1T1mauOmflt1bPIo201
uy+XtvPL+i3Kcb/9vijV2n7Ur1qj5Wc4inW7S7y861qT5SdG17Tq+kf7Jmuf
ptgrRfWj835IUY+z9yvW/5X9qXIvm20jZ9UcZ9NKfW5BXzjP6PziPYU+d7V2
f2rHzFi4Yo6N/P/z71b9v4iGKHzsDvHx1bqtxhhH9GM1hjN7D872U5ti/T/L
TWTmFCLlSOotjpme6bYyz/3xjFqjORHaE36Zz53atsVz+6y8x/iebbvRPGv1
vkZRJ2V8dGWv9JpjrTb3vmGkrNFYiWKdGBnrrthNxRmFUxP7XWe6rTxb/tbn
fmmnLjEndR/d1eeuat+rvVuWj/88Zkf74XiN+xy5I57r3m/NxsdmtPv1+Zqv
a40qJ58R183KSzybYo1x1KtinH4qZ6jMH9duxdm0M912+dyutXV1LjnivGd5
jTv53Mo5VrEmrV7j3dr/rMtnen38eyZW626LWT9MUZ+VOfnuPQ/tPhv/j799
OsvsHiOuvnP2ucrfPtszRdo52/eOvPe0XRN0W+lzv671kX6smgMhf8ag3ZWf
C5tpk+o1K6Ivo+vIoSXPmvGsK2f6oVijHD62qjxnvx9lH+362uaP8fnYIz3X
Iysek9HmGeuias13jVGlxrtzsD+VmaDbap+76rsURvskJXZ5E587q69mX5Ox
Nl9p7/H/xzg/rCKeqmozd11n28bZ5s57rdorKMqMrvfRz4C5dSJrL/q6b8zQ
7QPHej+baxptxw5+xsf33cDnVrR39/yeatypx2jmvjPjflbrkNHmGbmAmfcr
7+NTWQ/9zdLtzFyGylbWgSzdln8ubGF87hK/mrKNfe6VtnGtgZH3q9eUh56o
9iRtx67xmiuvn233bnH/1Ws6/BSFvjifubLSx5FxoWrjbN1W+9xRH3t1zI/u
cV1789NxtOHZ8pV7jrafY0wM91GSzV4/2v6j65RSezvvyZX36tQAZZ3OXhPV
7ZG8aLSNusbgXe06q9sVPrerr5Vjo4PvXeFzK8fx6nu6r/9Ky4o1RurjuHZ0
H6WMuTjuc6YdHevQ1fWPn9/wTMCoFsz+LlO3lT732V6scn9aPSZ+el3A5+6g
2464nuI9zvj9rDZkaNHK+zNihNmvc/S3qm0z2nP1tRGNebe+Z/SXI1bm2KNl
67b8WSyC9lHOE9XePDynNvC51WM+Oz7t8MOy6j56Tbf/26mdsnJdqvtw5Scc
dZ7RmdXn0zn3a649/OpYydbtg+rPhbl8Ddf1lsts7nM72yejX1fKceuT0icf
rYuz/6JrcYaPWpVfc7e1wr99LuOhNTPPuonUxbWvruiL199X6HaHZ7Gstpe6
32fW1uVx2PQzYdG+WV3TI21eGatUW8aYXilPve+5em+HPUdmmY5Y88wcOvys
s2fdHL9/ftZNdts623RkzZkpp0K33T539vzsPq5+bxPana3bCh/RkUNSvcfh
K2S2k7ttu+2FVPvD1b9F9jkrZbnWqk/ljjznRhn7XnlNpG+c+7Yq3T7o5Lsp
2n10biqvPbV3a+Zzq8e0c74or7Oy33bfU2Q9qqqbuv2z3t/leqPtOrPX+vTa
499X71Xca8cYlqq8Drrt/lzYXfJOkev94n2Nzqcpxu9Ku2Ws99Xxlsg8cNWj
qm+cPmfkHhwxa9f1XOPgnVbP5q4U46JiDxiJK1TqttrnvoqTu8ZdRbnhujQ5
n+ZoT+XcyYi9r6xRUb2bvWaGDkXu3VEX1ViYKcd1TbdVxoKy1uXMPdbI/Vbr
ttPnjsSBlH3s9PtH3zvrd2fEyt/VLZrbyp7jDq3fZd3tGO/v3M7O+s72hSNG
Xm2Z+8vVmIBKa6p1W+lzH/dxptldYpxqDQ/VtThW7m67yn67ep/bj3deUx0f
Uu9RI+vl6rqv3ve73+cqZ6Zt3Pe80kfV/TBzHx102+FzK9s0a89p1eizMgpj
5ZH7UuytI3qSERN2XjcrFrVaJ9ecy8pLRWNwFevLyvvd86BTDD4jJj86Ljro
9o/anf4sluoxl5Wb+WhFsXLLvSS+J9L3M+Vl5tZU5VfnK0avU+UPOsrs6H/v
1tbK+4vu3a6u0UW3Oz2LxZGbcMfHw/mtgli5qq1m31O1Tjj278q1IPrazPW+
as12+mCz+wzVvkTVp27/dLSeDr2Mto2q7G66fZDhcys1udt+LzxGkmPlWe2t
3jO5+r8yJlh1XxVzyLEvH71Wxv1W6MnOY2JG86uto24fdPG5I+9bXR+dcfXh
9ybGylPvK1BGB59jpVzl2qjyeR17h5G6ZYwxxxoT7eeZ13Xpz5H3Verpyngb
GY8zfd1NtzO/o1s5lpTza/T1lvhhYqx85J7C8X91+wTLcMV/1DH8lXIjWpnR
b6r7dvucHXy81b7sErd0xMor4wCvv+um2wfVPl12zirbPo7hpFh5RhtlxFk6
9nH3+nXYZ7jvQx17uYrnzvwuq70y/CXnvXTMaXTW7Uyfu7r/VH6V3PdOiJVX
9oMzR+HwVWbKdMZdXXmADv2sGAMd90jq+mXlgrLa+tN+aLUdVtppdAx21O0D
lTa8exaLUuMce9yMtXHo+uZYeXQMz8y9jutp1XqX0TYzfRDd1zhjKtXx+Yx4
kasOq+PBfe2q/YHCuuu281ks7rGW1ffRWO7H95u/2zNyT5UxkMg60OH+Zq5R
mS/oNNdWr+fUJvX8d+lzRntm+TquvfZs3qOrbv+o3dbPhTnjcZVjQlrWU45b
rd0zdd0lRr76XleMfHa8Z+1BonvilT5RrvnK66vKqNjrKepT7c9m+PRqve+s
29nPYsnWTaVfp9x7/yKfYMpxO9u6Yi2oXn/ufG+re6vs/XSn/Xu3/Ik6ruDe
Yzr389E27KzbBxXPPx3tp+q1TD1mT99rynF/qp9yLVbM8dH+j/qX7vxbZE/p
8J1Vfdyp/Jlrq/vDVQdlezr3WdE2Vb1+pd0/7Rt20e2q55+6fO8ue+np6xhy
3Nb6Nmm/7PtyvlZZ/6huqOfuSH1c8S9l/7j0sMu9Z/rezjaKXqO7bh84fW7H
GFPsgZ3r2ujrfvY3w+e4Z+rj3p+flZUVK1y5tnqt6uwjK3Si0odX1jFjr5UZ
I+8UW+kylj5ddwfdPnDoxWrMr5vP7J7ryrHi9rdX+i0yrzP2E6NlV+4xHPVx
xCWz+ijj3lb7KcMvrCw7O0axsv6uriO76bbzWSy7jVvnOHPnVEb3T8rfZ1nH
+qp0y7VGzmqIMgaxUkdHvLjreF7pM5XWOWJfme9X+ElXf9tFtw9UevHuWSxd
+7LDWH2UceQYdvK3o3ND1YaROmXGKzuMt4xrZbSzum2icZ4u8XfXtVU+dnfb
Ubezfe7V9Tuqz9ljanQtP36qNPvM33b53plxD/V7Pr0/eq/u8dZhjazce3Ws
56drue5DNWdca3EknrIyN1frt5Nu/6jdbT4X5poz0THlvJ9H2+3ub6+2l9pf
7eBjR+vmjJWvrs9O/azIL3S7hmrOdIiHZ8W/FW28q24rPxf2+vzTSP+544+q
8bTq2yrHy6huO2KB0X5eeU0n3yXL3PGNDN3L6uPZstXXUrVl1XjsFl/KuNfd
dPsgw+eujnd1mktHGRW6nX3vWX6ua92YjdtF4jfVbatuF/V9ZcZ2le28sg66
80XR/Vr3WPlK3XbU7Ts8i2VmTKr3FCv39vi78mxapA1m22JmHa3wb0fXps6+
gmJNrSpjV3PpqqK81X7J3Ld0GSuze+gddfugS567S27EfQ2nbu9w/6vzbMf+
dsd6MtZvxb06+3h0H+moQxetitZHnbtQ7oFcY3x33T5QaMc7DYnEZSrWc0fM
6ew+jp/qNu/k96qupVyDVftJRXtW7ldW5qWrvqochKNtVq736f2r+wxHO2eW
2UWnX/9/Z912fi7MPY5WYqFdYkCOvZKjLWfXok5+iHt8uOKrK3Xr4kPeKWai
6BfHdSPra2QMVe4nHHGanXX7QOlzP/uUGWM60reV+1DV2bSZ63bQ1FXdr44L
K66/U/7B0d5K3VPFCjrMiWg9HDFyR4w0c0888rfddbvC556dR1nj2rmnPspQ
jpkzfzu65mbEQyrK7pAzuLquKy6vaMOqPbFT01f75NM1FHuFLvuJLIve78pY
3l23D1T+9tX3hSnnfuW4npmHztzKmW672inbd6mKo630a0Z9stt0poxZfVPm
MLq2tbPfVvJaqvj5aJkz96N+/Uj976DbzmexdBnT0TmgrKvqTLlqvmT73m4f
ZFVXHf6d0/dU7aWicc3O5myjaDvdpY2jbats79G/30G3DzK/o7trnskxdp9/
79Ltbu2XUZ8KfzxrH9OxT91t1yWfpSxrNTaXMbaz45mu/MCq734X3XY+iyVr
7Kv61DVfMvztUQ1w5O4q+7vD+tU9fv5JG1biryPlVrSVUwOy91mqdSn7b87+
jbblXXT7INPnVvepKj6+co3Z+X78vJu/rVjzK+rjuMbqtWZj4d3jWBltHVlX
HHtC9z7TVR/19V37t+jr76jbB9k+d/Xa4qjXpzVGrduuudOtb9x+TsfYYae2
dpXZuR2q2nHHWLliH5vl391Nt7O/ozvSR6p1IGvdeL6Ooo2VbaksQ7WOqPpF
kRNwXSfLVLGBTJ8+K5ejzBm4+mAHHzurLor7uJtuHyg05WFnmp2dI1q9hque
Lt1WxfKV96te66v10RnjVMcFFfV3jB3lOKvWtNXrVMTKu/o66nXrU3l31O0u
PrfKx86a1zP1Vep2h1yZc83N8H1X702xDmbq6MhruvlIWXVy7Hl3tCzfOvL6
aB3vqNsHKn/7aBtFnLzD+Iyuca9x8ui4cc0/Rft1nfs7W5d7XY33VsWU1fEZ
x/s+1Xl2rqn2w6uxMmc+IWJ3122Hz63o08hYzrKRayt1W6V16ni2o18yfG/1
e1bb1rGH6VCmqwylqXxsR05n17Zy1H92v3N33T6o+I5uZ9xOva5Gru/0t92x
T2UMOvI+9T1m5exU1474pO9eoyivom8zfLkdYuUjbe3YR7jq7ajXN+i281ks
HX25mXKj11KMG0VdqtYjt4+mXJ8q1hXldTLX5Io9tqo+Vdq1GiPPiCfP1mn2
tSv3pJgLd9btgwqf+6p/VGOgwv98/n+lbjvnq+req8pT329kXDljOtlrY6Xv
raqTMg6UubfL6uPq+q2WNdIXd9ftLJ/bHb/KKm/0/c9t4tbtVb3olkdbracj
Bl19Xx1iAJ/+3i2m0inusMu+tvKeHfvcb9Htg0qfO2NMZe1N3f726j5IpeMr
+TV1rDvSl2qd3GFPqdg7K++lS6zaVd+V2Jzy3lavv1I/t3+w0mffpNsHGT53
dI6o1yCnH9clv+1sn+ryutrVGpgV63X10y6x8Ip2U99zl71PVb5n5b3fptvK
z4XN+NyOsZkxrs/2Iw7dXqmPKneX1caKOqzc2+x7VO238t4u66f6Wpk5gUh9
nT5zRbs7yq2OlX+bbh8odPud5nQf38oxWaXble3iasvX11X4dDuN3Xf1Vdyr
wx907HWyYuHR8h3xjEg/R7Wzat9FnPwHqnxuxXyIvMYxjly6vXI/mb53Rv6i
s0ViADPtqNxHdWtvVT0rx2LmWjPyN5Uf66579D6+UbcPVGfUPvncndYQR9yn
Mr+d7T9UlDfrM0T3ONFyHf3grsPqniOzrbLHouOeOq2Fruu7YzCvZXybbis/
F/b6nSOd+t8Vp6uKk6t06VvM7duOluPYk2WtkRl9ULVndd5rZRlnZUXzKasx
N/VY/VbdPsjyuVd/33mOdfC3lfMx+rezv6/8LnM8OGIAlebY13W6v0h9VfG2
2bGq3sddjb+d+ioyBr9Zt7v73JG5ocwLusfN7Dx1zo/R91ZqqypW7my30XJV
fmbmGFHFykfuZaRcdQxd1ffd90ajfZa1/s68/5t1+8Dhc0djIs54pnpNrzxP
3iXm6Fg3u1nEj1VrYqTe35ZnydzDqdtMPS87xzVX16xv1W23z73D/J9dK4+/
Vel2hsZWrxeu/N6sH5dVR2dfqsqI7CdG1oMsfXX6BLN167rfHfWp1DHNmfd8
u24fVPncjjGs9lc+Xbd7frsqb+GqZ8cY+ew9uX3e6j1FRn5Bea3IWqWedyvl
zWrpzJxxarMiLv/Nup2V515dC6vjT1fjfIf8dmTuVsZVq/Wn2z0697Yzr1PV
baQeVTkcV39nW9Y9ZLcVuv0D2WfLI31dGSdyjJvV+5rRWsf6F425Z+wJZq6v
aLfo/Ua0MnPtzNhvdGnnaJmrMSLH2qloE4f/tRqz+nbdVvrcFd8VtrqGRf2E
3fLbGddw78cy+1pd18y+UOqXO/+Q4Rdn62CFRfepK6+tvM9v1+2DCp/73Wuc
Y0S9/nR5Pvkd/bQdrqO4VqbvmrWfdfRBlz4dWasce9dVnzS7raJjbCTuhW7/
gQyfOxqfWilP7ccdv3frdnQfkxVHc+mIIy4fGVcqbe0cK7+j793Fx+4QI+pg
Hf2mat1VoPC5R7+fe2dz6LYj5zb7WtX6kuXT77r+dfAdVW3n7oMs7c3cb0Xf
p/Z/Rl7j3Hus3g+6/QOZeW53HE05351xGtV8zYq3Kvptxp/upLmza1dGzLCb
uXUoSx8z8x+Z7dep31fLQrd/SbXPvbI3VI6Rmf1hl89vR+ZRhzkfva/V36nj
BFVtOZPjWf3dyn2u7sUU2uXy06tyWK6xWBULU+SD0O0/UHG23L3eqXXe7W/P
rA3q+dkhVr7bXmL1flQ6WlX/rPo5y8/wE1fbb2Xvoc6LZMXLV9YHdPvnqHzu
x3NYnPMv6iNF5lPVefLqdVxdj27ljJavXG9d99plv+RoE5dP6VxTMtq687UV
dUS339Pt89yZuZOZ93f5HNjZvSnzplV9EPE/FbHyXSxLxzPiP46/ZbSNoi4r
5Wbe90w5Ud//03XQ7V+i9rkfbT0aA1bMz5XXjbzH4W9XxyJHrzfTPit1d+Xx
HG3x6TVqP6+jj50RW1DWa3aud7jXKl3O3OPOtC26fY7S536n2ZnjXj2H3HHy
VZ1YeX31Xt25B4vWUdlmjjWvo46vlq2Oq3Syq72Cuu7RNnO1pUPj0e33ZPjc
7nkRnS9X60mn8+TV8d4M/XXXuWr979pXM23kvgd3DMe5R3P20Uy9M/dkzv0D
un2Nyuc+bFWzO+6l3f52dC6o5kokPpLtt1XtBzL86JFrdG6T7PHhrH8kzh5p
D9d1Z+5XdW2Vj4Jun1PhcztyUzPjaHQOVZ9Ly16X3fFmhy9XHSPP9nsyTeXz
qtpoNu6WobtV8YlO/R8dJ2frBLp9zu90+zcqn1vVt+qxMltuF91W3PMu7T5z
vawYatd2m1n7Vl+XfV+V+5/sfa8qJrnSZhV75NXroNvXKDT73WfCsjVjZa99
NfYd+e2rOir0aHbeqnXNmfdSjo9Iuco49mrZLlO0YST/4qjz62uy9yrKOea4
tuO1irUN3b5G4XO/e/apo//d8+35NZFxs9oernuvumZVvLCzX9EhZtGlrtX7
lKtr7zJ2nXG4iv0Euj2Oy+fuOGZHy+wWJ4/MAec1XT52JB48U4+uuchVv97p
C628xxGHHhkzWX7uzN4jY+xF6uOq00r90e3PqHzuT88+3cHXUIyb17aIzmPV
Ohm5nmvv3dmu2ksV4+7WXoq9s2ov2a1tMuulyqk57zm6j7x6P7o9hsrnfrR7
hq+3OqdG5sQRO1DodlVOr7MpfO+ZsjvtObI1zeHvVrRN5D2zvrqy7p3GXgcb
Xb/R7TFcnwmLjvNMn+W1nMc9Kfcvjnkc3cu41pysvVuH/IqjLdQ6Ho2pr742
e3w4+rDr/scRE1LtLSP3g26PoXwOy2w/d9vLR3zuVV9buYZmzD1VfZxremTs
OXIYWW2+WqcuMexPWjLSF5XrjnO/m73XUewHV8YVuj2Oyuc+O5+WvWdVrF8z
4+ddjt9RP9f8VawX1WthRt0UbaGYGzv5q93rPFPXzP1B1jyv2n+ezQN0exyF
z/3uM1DVvlP0PY8xdDaOHn97dxbtLF5edS9Vc3Xkuop7rlwjs/dSivaZjfO4
4qqrWjL7mq57CufY7zguP5WLbs+hiJOvfiZsdh/rGm9na8gxlp51+jGujt8/
7tdRd0XcwBmzd60XinK7+DqqeIV7be4Y9+9QB0W8OHrPVeM+M1aObq+h/kzY
J3+zo4/z6RqHRj9stW4q/yIjluG8RsXardzPRO9rJ18oem2Vlqji19VtmDHv
RsqtzoG9uwa6PY/C5z5sNUYcHTsr8/fTmnz8u2uMLdI+Fddfef9M23fxsaPl
q9b1VV/o6nW77jfUe9CKmExmezmuPzKX0e153J8J6zI+o+v7is/s8Nky20ah
kdU+dlbbzF63yv9ytm1kr6vag0b9SdUYd8cAorFq1f53ppyz16Lb81ScT4uM
mU5xHtd1V+bkjF9Q6T/NrpdZPk4n33ulrKo91Q5xKUddlO3dNfbgri+6HcP9
mTDXmNshr9WlDur9TvV6vRr/jdTfsb9UX3eljSr6b/R+I69R9FW0zytj69U2
6j+g22u4zqdFxpzy9bPxNee17zb3ImW4YtA7tI3aZ8nsI1esPKtfVv9ekX+J
rC3KWLmjX9HtOFHdftijL1ZyURlrWbbvor7OzDqa4WPfQU+d/pa6TqocSLd+
W1kvXOPhzuYeHyv7DHR7nQyfO2vM7TAvKtpoNKbgXB8dMWiVllX0mXtMV/jj
WfemukY0p6H2eyvHi7oOI+MD3Y6h0O3jZ2QMj/b7bA4sOrayx3tFeQ6rWlez
+ny2nJXrquK27ryEKi77aW5HfXNlH6yYOw62suZW7L/QbQ0V59OyYq8ra4az
HMfci9Rj9D6Ua45rjVT7hjv4Q5nX7bhfdMRcKu6z075htpzVNQ/djqH6TNjo
89Myx32VZczDqnsfjbs76qfa13QbF5/+7owFnP0+0rZq3zKzD2bet7rvdu/H
lePD5Yug23Giuv2wlfFSnSuLXLPb3uTTvNulrV2+9+rfZvcL2fuZ7P5ztMdo
2coxs9u+T9VWlW2AbutQnU9zfZb73RhbXWNnxrbCv1PVUz3XMmLfqnp3Xl8d
sVpluW4fXnFfHeJQo/XK6s+dxvzKWEK3NShj5Z/6MzOOXDWWd7aMGGnkfao9
jnpv5Lx39/hy5T871NlZp1UNc433aNs5fZXnv6HbGlTn0x79krkOVKw5Xdb1
zFjZaMx9pOwKP1Wh05mxjtWynD62M0YevZZ7jFT2s6K9OvgW6LYW1/m0T2Mm
I0amiOs4Xp89rzrM2x3rrtpDrOyhMn3F7LZU3mtGbk49HhTtkLWPXFlTr36H
butQ6PbxMzquRsa3c+89s8fo5jeq71upNY57qoyRK8ajan5k+tiOe3K022j/
7JQjyNprufdB6LaOrPNpGT52V6uIlXc1t652vK9qc+z5HHvX1TGteJ1yXxRd
A6N7pm5rA7qtxx0rd47v1XHsHJvu97jKVsY7qnN8kb+pYqSrbeXWrl36rVM9
3XXKjJGvxLpn/p84eR6K82mKWHlkvCp0KjJeR+sTuQ/VOpcdI3S0U3YbZrRT
Rps7NMKVN3K3V4ZeOn3vjvuXq3qi21oyP8s9M47VY7brON9Vj7PbNjuOMjr+
qnLBVT52VKcVe+aZsqratuK63WLkz3VAt/UoY+XdxkvW/FT7jt3i++4ciHrN
UveNazytxC6z77HDfI6aw/dWxOAq22DmXlb3Uui2D1Ws/NFHI/6IY1/s8mWq
97FVPrnzPlVxWOX7XPfbYc121iUzVp6ZA4jUPTK+I/paYSP7FXRbj+p8WuS5
p5/Grzv+pZyfI2vL6vxz7SlU11e0a5VfrrxW9B46+9jqWLlDi+4S54qWXa3r
6LaXjFh5xRiqHrddrZNvmanFkffO+EGuenzjeM6M2Tnq0rHPZuob2Qug215U
59Pexcpnxs7K+xzx32w/Vn3dyPuz8g/R987GGN11zLz30dfMtEeF7+1uY6e2
O+dFRFcr7uNT2ei2h8rPcmfNYeXrV+abY8641+XINWfr4o7xVWuIqz8y20Ol
06s+nUtjsvbLmfF79ziaGePotg+Fbh8/Z+fIyLhw7Skz50NlPBi7bkvFWt5F
byvzw9lts3N+wREfyPQDRspAt/1UxMqVY8Q1n5wx/5XrRny52bIVfejWgIxr
rrbzarsr+3rkdeq9qLL9u6wL78qtHouuNUZ9PXTbR0WsvGJOVu+9s30ZVx5O
0XeVMUt3mR181h18b1VcY6aeFXkadTtV9N1s+eh2DtHPcn+Klbv2dw5fQlVO
Rt0q7qubKeMiyjU8I3ez8t7V62feT9a46FAnVy4wWrdIvdDtHHaMlUfKuNpT
zOht9pxRr7nRe8mKv3Vcgyvq1bUdsu81I48zGx/o4Le78mCz70G388iMlWfH
firznhXx3uo9ePT9kfGz8jfFvsZx3Yh2reQmovWO7HkVOt1xjXDEerrv39Dt
PByx8ug4d/qXleNZUU9V/L5LW3Vac6vapLoNdmzHLuO3m63sRaNxv9e/o9t+
3LFyZ35Gkd87+1t2PKxDeZH2dPlGqn2Kqp3Vvmr2uOjSjrNlZsTIr15bFR+v
yoVF2gjdzkGh25HnlWdb9poTLS9z7RyZl872yI6pKNpWuUdSxtCvxlDmPjFD
47JyOaprZO17M9sV3c5FESt/fl75WX9H82aK3F7mvOjgs1f5CZF+V7ax4jqr
ZWbvq3bor5kyVfXYwZdQ3+PqmqrI2aDbOVSfK18ZN6q5GN0LKHViNy1wzPmM
++0Svxi9bqc+d7djB02OxMir4uUZNjpO0e08smPlVeOww/jf9X4c/nHXe62u
ozPum5HvUJen1PMuMadoPdw+zqpPg27noYyVZ/hhM+O/cp1ard/qHl4ZK6/S
WEefO3I0kf1pln4pxs/q/XSLnWWbIz+jeL1r34Ju56OIlR9WMe6y5kZGLnUX
U/p339Jms22qfn2ntlfE5BztpdoPutq7m4/97m/odh6q55V/ipVn+HoKq77+
aL06+HPOa3TLb0fine413pGfUsTbVf2tbo8OOYDdY+XvXotu5+KMlTvnhWKP
HF1rFfHp1dh4pA3VGprhT7h9IuX9KMt3x8g/vaciHtapr6rq4rwv5dxAt2vo
ECvvbhX3E9XLipiZot5d2jazfNXru+aWV/ZUinzU7FhV7gXV+bSZPl+5dnS9
QLdzyYqVz4wphx6prPL6FTqd3WZKv3mmjJm2VelQVj9V63RWPTNj5I5xmb22
KPoT3a5DoduOc+Uz40b1/9Ex7YzfZszRmXpn5xIz27fKJ3f76hltV1H3SnP5
GbNjpGLso9t1RGPln76Te4e5V1mfqxy3Qy/VMbxon2e1u1un1OWr1/yV8iJx
WGV7qH14136725qmrtNZu6Db+ahi5Y8+VM2xLvHySp2LltFxHVGOA+W9R+I6
kfI7akK1762Kd3WyyN7G+fvIOotu15KV43bOq+qYddcYueueqnXoDu3r7J+M
ttvlfY7x8Q175tHXo9s1VH0erJOvodQk5dxRt9FsXF55L9HXZml9pN6RXIc6
tpOd89xpL6Xc52eueY4xG21DdLsG9+fBlDFLx/hTzf3V9yg0t7KdXP2laN/K
vUh1ezv6SO0rK/Wy476hw1qm6rOz/0e368iKlZ/9XeFvOWLlSt8rw1w+luNe
1P6zuqyK+MrKtZ06ntkHVW2tLOebfG90u56Oz07baU1w3FvkNW7fdtV/yrof
5f0qfcWs3K5q7XbsCTrt11b70Vnvat97tp7odh1VnwfrOHcd+Uf3Wqa4vwxT
XHukHzrEPpxts7K/qRirKzox23eZ+ydXOa5+d44pdLuezM+DOeLVjhh5p/ns
0F1VH7n8p6w1MeNeu8Xh1eXssC9yt8NoH8+Mhc6+D7rdA2eOu0OMSDW2nbFp
dVwyK9d1Vc4OfdrtXt17iYp9hKKtXHXsPmZn2iJ7v4tu1+LIcUfGUOYev8q3
c9RpBz9udc2piJFn9EPF/so9BhS63CFG7spJOGPeM9ccvd7Z/6PbtTg+D+ac
04o5HK2bM36c1X6Ke8jygzKu4dovVu2nFHshZ7tUWsf9urJ81R7l6rXodj3O
WHn12M4e17PviayLWW0d2dOo/Yhu+uny4zJi5E5Tx0Oc/Z45B1fGQlUfXtUB
3a7H/XmwjBiVcu474pfPr+vm23XYa6li6K64ovLvTnPef2YsqaLfR8tZ0fEO
vrdi/UO3+6D+PJgqRhed65U6rZp3VWW69y4ZpvBtR+vtXsuVeqDSPJd2uvq9
Ux2j/Zu5T3n3enS7HsXnwQ579KlyblTPs6gmqf2fzvHGrDarHhMuU99XRuxh
5r0Z+2rlvUVzPt1875X3nbUBut2Dyhy322b8e2UsqYvN1LWjdoyWo+yT6lzN
1etX6latkco2WhmzqtdU3r8z5jL7PnS7B64c94yvGJ2vXebdSP0/rceZc3G2
zEi7q/WwMsar6MOdfDLn/NstRrej762Mv6DbPVB/HqxbjE4xp2bKzLBV/6r7
/kZVz6ocYIc2qtxLjZTVIb9TGYdy9Y0zRv78O3S7B6pnnnaNlVfMMUf8LsOn
zvJhs9ZuZ9ut9vPsHrB6H5x9HUes3NUGu/jeyntFt/uQ8f1gq7E2dYwue+5U
xz0da6lDdxUa6IgBZ/blahsp4kEreZHoXKpuz13qu9LOK38beQ+63QfHs9O6
xpFXy3D6Eq5cVKRtqtdUVzu4fH1VH1bv86qu6Yr7K/Zykfdk+t5OnwTd7ke3
WLl6rrnGc1UuTLU+ZbdFl9yhqw8y+22n+LnrmhljvltsW33d2Tgnut0LhW5H
Y+WjY6tTvnL1dcprqeZmdR9kx8q73JOibrvGyivvRVnnSJtE2tAVPzp7H7rd
i2iO+zVW/ujnqrisaj1xz+WKunS5Tvc+UGjn6Osy2rxrDD4aC69uv27zRd22
z39Dt3uxa6y8W3w4WobKX8zct8z6ZCsx9aq+qSx/5doZfmm0rh10rnoPHP19
9t4P3e6LI1au3qOO7Amj13LElR3lOOZlpzrN1mOlXi5NWd2LuesVKasir6Ca
7zPlRPa/XefGbPuevQ7d7ocrVq4ea64xHS2ja6yz+xqT0WedtCqq6aP1yY5Z
rLTVTmPQ1ZY7zE90uy/uWLlS61S5xqy5o66ve45H9+Wr/6+6F3d7V/Xhqk5n
5Z2q2kjle7uv7WpDxXgfGT/odk+UsfLI+FXHbTvtXUfnyKfXrqwX3dphpZ3c
PvBome7cQka+MnofHfc/O1wzYw+gXAfQ7d4oYuVHvz76ubNOrM6RGR+y+v5V
cYdIma66ZpfvaEtXXbJj5FfvU+y9ZnzMaGxhZP528L2dubqz/kG3e6KKlV99
ljsyZ6OaqpofVWVl12XlNSuxcdc9ZcUeVn3W0bU3eh+dxl32dav3zqv166T1
6HZ/orr9sNUx6Iw/ZueiZusU1Th3/tN57yN/c+8BojmK3W3VV61uj6iPHXlv
B9/bdc+vZaDbfVE8r3z37wgbnXMrMcFO83Gm7G5r9Q7t5s6Br1w/I4/jiJXP
1DdDxzPabaTPlGvOp+uj231Rx8pXx150DmbkANXzc/U9Xfb8ihj5yjoUuW5k
jVf34+y9ZYzhjrEYZ71G2ndX33v1+uj2HlSfT1OP88he3nnNTvO44tqZbVtZ
9g7rucJHrtwrz7RlZlxMfT+rr1fkCNDt3qhi5aPPT8sa285rr84bpR999ffV
tUrhQ3fvS3WdOuputp8+ch1HXCT7Xqp8b+XYHB076HZ/orr9MNW8VY3lSH6o
eu1wzGN1WSqdj+6LZnRLUSfn2N0tvpBRN8d+t6tlafpZWej2Pqhi5a/n05T5
vewxrLqmas3ZdR3KaudOptqjuv3m1VhNxxh59P3dfr9y/4p2R7f3QXU+7ZPP
XT1n3XOiSluU/qYrVt5xL6KqkzJmoejz6jacqadSh9ya2aldI+WMtDm6vQdZ
PrdjvVn1ESpymp3WEGe8XaF/qlxIZX9X9vOov95pTHZoywofW9k/kXGObu+F
6nxa1OceXYcrfe+q9zvjppl+Ztb7Zl6/mvf+9HdXuVllZZSrer+rrDvY6DqK
bu9HVLdVee6KMexec7LixM64Ywd/VVWeSoOcbeKuQ7SsrJzLyH41Wu8KH1vR
puoxgG7vh/ozYavzeWVMu/J9GXH+q7Ii63v2fskRG1fpW7e942o9d+jTbtfs
2PfuMbsad0e390NxPu3M566eb919lyrLjutmtUmm3zj6OmXMZdVndMd9OuRb
omO4m4+tft9Imej2XqjOp119T5hiLHbKpY2WG/XVR+KF6mt39mWz8ww73aNj
v6yIhXRr3x36crWtR957tqag23uh9Lkf4+D158pYdq4RSv9JOa+7xCqiZUb2
MrNtMjrGXHmULmV1vN5qvUb2q9G9RraPXdU3o+Wi2/tR7XNnrQd3ua6ifPwi
TZuo9nrZ+49I+c5Yzu6mjF3MvDear3is4ej2PijOp5353DPjzDHmV+eZYi5F
r7fiazrba8Uvqu6zGd8/w9wxm9l+cdZZ3fauvHKVj501RkYsuvYfvl+1jn0j
Kt2u8LmV+1G15qn0bLfYwex9R/zWjDasjk90j8e6x0unexy9XtXcXskVoNt7
4vS5V9Zc59zrsLaor6Pcl+wez1S0X6bGK/pAvb9UxnIi93JHH7tDjPz5fcfP
aIwc3a5D7XMrx/8dYuWZMVuX9q6sa466uOMgzrIy6373PEHVvXSLrc/W+fXf
At3+TbV+fStKn3vlGWquXFyVf+2I7a7kLl3xutU1ShkjX71m5D6zY0HZ+4LV
8tzzzDUfK7V2tb9H3jc6J461Gt3emwyfu8N8VmlOJ6vW8R3vUX2vyhhMdntk
l5Wtw+q+zaqHK16Fbt+HbJ/blcvN8ruj+SdlPd1rgtJnrTaVnnaOkUfKctz/
Spnf4mM7r/3peorPbh/PAanWrm9HpdvHz+5jOmuuZs9zZfxt5vWK+P9qXZ1j
J2uMRDTL2R5d5kg3zXPWbyUWPjP/0O174fS51XOsy3qino9d7jcaD9ipr1V9
MLOWdohhOPtodPzc0c/NbvvVa/OstPug0O2Hrc4bh78xs+Zelbey73XpXUQX
OuwDMt/j0NSMWHlWfF09jp11dulwNx9bdR9nZSvW+Gq9gh9Q+tyvz2LZJce3
o0Vi4attsRqrW31/pZZU952rDyrqPtuPzv1b97Ya6eOVvf7xM7rG89ntXqj8
7bPnn2bNs65zNJKPzI4Z79r+s9eP9oGq3VyxdXV/KOIa2X0c7Xfl71ffE73X
R9mis+TodiMcPvfrmFSMTYW/ppqP1Rq1cs8V5UXiAqt95W6TlWsq2kH1/k4x
ckebdKl7h3YS6zafAWuG4rvCHtr97oxah3mWkbeafV/E78vQAkUdZl6vqq8i
ptFp/VfESrvV+fn/nfpc6WOf/X3VP1idb4ozaeh2P1Tfz/2w13ETmaPd9D9y
XUcd1XnmTvHZ0bIz+t61pqrvR/3e7BiUMgZdZdW+yOvf+AzYfVH63KvfF6by
ITvqY1adK+MHyvp0iG8ry3LmMbPq1E0fZ+uZ5WNXtelZWYp1vVqf4D1Kn1vx
HDWlPs/6Ss7Yl7ruFdbBR5/to8553JlxUh3fUYyPSAytU5+p7snZdpxJuz9K
n/s5Xq6Yc13WoI7XVMQWlVoc2ausrtXqflLv9Zx1ddxzVpu714QqHzuSG1S0
Abr9XSh97pl4udpn67g2VuZnXXXf0bL9OGc8embcO/ca7jxP1vuzr+XOn3Am
7TtQfS7sod1XcfLMMa32LzPX/sja7KrbaJ3c+fZueyGH391tz7SyD1f1t7JO
q7939ZNijXp9zXP8c9U4k7YHSt1+jpe/aviK9lXGn5R7jy5rxer60LnNI+2k
io/P3kumT664vrIvVvqm6p7c+01FXZ7X16hmH1atRzCG+oza6vnyDnMjOncq
1oir90f1weHXuPuioi6uexn9fWSPsLI3dsbGOrSvuxzlfZHb/l5UZ9TO4uUV
a6zSd6paK1Q+W6d1dnR/MbuH6BqH7r5nUN9HdlxMXYdOsYiZfTO57e/EFS8f
mRfdYnsj1915PXbVvVNbdYiVz15L2VaRsp155uq9aIaPfXXPqj3FaznPa++q
kdveD/UZNcV3hmXt8Stjuop1LZozqI5NdOyzSB2y9kXqfl+9D6eGRuvQ2SdQ
jQdFjPywag2CNdTx8k/PL3douTL2tPJ79Trhjtu715TZPlL219Xfd1irK2O2
kfrs0LYr9Xfs0yJ7ZnGMnNz2pqjPqD3Hy0f97m9ZG1xri/v9lb53tv8X9Wdn
y3K0ofIenH230j5Rfb1Le5PbBle8fHUsO8d9ZC1V5vYUc90dK1e2c5VVrNOu
eEmmPozOi9333Or577jvV//n+KlYq8lt749Kt53x8pFyuvgaznUlY71wxg1X
8vmvf8vObarHkcP3jvaBUmMyrDIOpKrzzHpFbhteUX/X5+yz1GbmYLe1Qe1z
rOra6lpR0X4Vdalqny5x6i7xlFntUu9nFHvMzHXpdR0ltw3PqOPlx8+zsVdh
2fnGzBiich0d/bs7xjj6PpePvVI/t+Y7ruduv4w55YrfdSlTHSMnt30v1D73
u1y3em5m+ZPK9S2ai+68xlRf29lPbt8vM1auKqNjbsoxD1W+98oYUMfIyW3f
C0e8/F2ueyXOnD1/q+OKCh+1oy6sljU7ZrrmsStsZRw4fFtljNzdvx377jmW
SYwcnlHGy0e1O2vtcPh01XFu1zVX+udTu1TqrXssdYuRd9CozHEd7V9ne6n2
4Apfmxj5fVE/j+X4OZLjzvQH3evayjpSFb9VlaG+bqe4/TfEyGfLzo6RV8V7
ZveF0T3v8/8/firOoxEjvzeOePnxMzL/VvfTrpyze11ZWQuy7ivL33D1aYfc
TLZ1yUMr9y8V/VtlinWYGPn9ccTLZ57JosyjqctQ6VZlfLIyd7jy/oz9l8JP
crbJ6LVVcdmMNnL36WpfjeR53PvXx+tV59GIkX8Hynj5q3ZHfEml79nRd3Pk
gTvkGtX35vbNuuWs1X3RvfyZPuvke4+ubZ/qTIwcVlHq9kO7Z8+p7Rj3ml1H
quP0K/7FDn5UdX93u/5KH2bFhao1trKcq/y2yNcmRv5FqHPdD+1+3VOujv2r
98/uBbrlcUfbp2KPkNUeDp1Z+XtkbCnyDh007tO1u9Q54gNU71VdvjYx8u/D
kes+fr7T7ui4V79PUWa1fmaZIke9S95BXacOMfLoHtpZ79X9eXY9leUeP1Vr
brWGQA2OXPfx891Y7TAns+bo6jUUsYCRtnb6H8o27TJOqizqR66W32kfPXsd
5/mFlTiZ0dcmRv7FOOLlz2fMZ/f7q2tJJA468l7lOtd9XXTWI7JnUOVBZuqg
3OOsltW13xVzcuW6kTpU+xCqdZbzaN+NK9e98hzz0TnZZR1T1DvrHp0+tGp9
zuyLu1xvth6q339j26229eOn8LNf+Nogz3Vf+d0Za3xGrLY6JqjyIzrmZDPb
cddrR+MUXe7VsY9Q+/QqU62tnEeDBxna7Zgniriooj4Kfa/eC4y8TlFHZZx6
9DWR96jj2yvlZe6nIm2RNYZcfX313pmcn8vXPqxaK6AX6nNqD+1+fLZ7ZZ5X
5KO6xq675sWrc4aZY2AH27nuO9/PVT3xtcGJWrevtNutgyu+gGKeVun+Lrpe
WeZO97rqr6/Uyx0vUsbxVTGXyPtGynz8VJ0hx9eGK9zaPRNviqxF0der5nHk
mmp9UsbIM2LmjnpH+loVc3W152h5jr5Tlu+ad+o149N4PX4KfW3Oo8EpjjPm
7/zu6nVtpWyVj72qzdm5wUh50dymUm9X3tdJezL3j1U5adc+QFX3mX2dw9fm
s1/wCcc5tauYuXpORdbkXfJpjvtxr9nue3XUO/t6kWuujAP3+Oh+vkLtHzxr
t0qz8bVhlGzt7hIbi653yvx2x/2FK69emXt2xzyUsaRu+yjXfSjnUcb7X3+P
rw1VOM6YX8XMZ+aqO0fXbe1TrYkZeqnur9HyFL6xop27xMije8us++i6Z5+t
9+P/lZ/7wteGFbK1e3XOzeSf1O/Pym9nrF/ZfrCi793lVLVDx3pVnDtQ7DOc
PsHr6x/rG742VJKl3SMx88yYYte1emXdqrr2yLpY1U/K3GwkxhFpy9U2V7T9
yv6z+5yKjhVlfBxfG6I4dPuh3Y7vInHO0ZV1cKVM9ZmbaLkdfO/VvlFqdIe2
yootO+9DfeYjWsbq/HLEx/G1QUVX7R6Zf1frUdX+oLu5/Nid23mnHEdFG6vP
Hay+191P78pUxsfxtUGF67PdK9rdaX2vyG/P+kWONV2xpjraPfo+R7nqWIqz
fzL7sKL/R8qYbTtlfPyw6rUe7kUn7c6aw45ruddJ9b0421997ki9p8nWqIj+
q+7BPZ9W2jxzjl+97zU+fvxUajbPIQcHbu0+fr7Ojej8zFq3lPltl0Wv0+le
Ki2iS67+qth7Rq9ZHX+Zeb87Po6vDU4qtVs5P7usOYp1Rr1ncK7tqvikoi6K
/o5oa5c9jjruUVHXd393zF1XfJyzaODGrd1Xz0XtnvMeXS8cMdFu91tRZpec
R0WufPZ1ne5/pc5Z4+7Vj1CfH+csGmTh1O6Hfs9od2ReR33CTrq6WsdZX6rT
uQJFnjp6jzvkSVT1VdTZkQPIuN/jp3qtq17L4bvI0O7Z82qdNHS0PtmxVqeW
ROrn3o9l9KWzrzPvVVmHbnMycj/q+Dhn0aCCSu2OrCuu/HYnregUv3bW6Rvv
ZWXv5fCxHbo+Gz85m9eKufv8O4NmEx+HMjK0+/gZjZtXr8Ed8/TV2rW6hp79
LnJ2KhrLiOpEF3+143zKbIN381Sd0z6Ms2hQTYZ2r+a8s9ff6FoT0TJHrjfj
jNEuVhWjV/V/lz7Jzvuv7AOfc9pqzSY+Dl1wa/dI3LxiTehslfnl2fdn7X+U
/a/aEzrqpujTkX1BhX/unr/P5T/H/FRWvVYDvJKh3cfPs72xa/5Gfp/5nqq1
rzqe64yRO+8tq92yc0Gv/++6/mx++1M5bs0mPg5dcX0H6LN2z8TNq3KHWdd1
+EXRMiPv75LrnelXh9avXEftY7v6IZr3V13v7G/qc2iHER+H7ri1+6HfqvPm
q+tZtY/vXM92tW65ki77SGd77liXs7JMms35cdiCLO0+fp753qNztSrn2ek6
lfF3ZR5h5bWVsXJXu66cx4pew92PjrZ6fr3j7Phh1WsxwAxHbChDuzv43pH1
TbWeqmO4ivJc55myr7Hat7P1Hi3DubdQjP3VMlb2ArPt9e7fLs0mpw07kqHd
D/0+tHt0Prt97N1j6FXWPSYSPSvQqU3vbp/2c27NJqcNO5PxObFn3/sqbq70
vTvb6hmlbF+rum2zY+SRtomeO1P2u6qdlPmOlesaNZucNmxPlnYrfO+V2G/0
GjN16LD3yNDbFS3LzE1X58Gr9zyr9XOP7Wo/+7Dq9RZAScZ5tYd2Hz/Vvnen
9S+y5q34ZOo1WrFmO9vT/T53Tlrtr0fGTJe2y9BsctpwR7Jy3qO+96p/nbUm
q+umXpNV9a0y9X5OqVEV588q+tIxLs7mvFOzyWnDncnW7ndnzmfPpKrWl+wY
ucvcPnY0Ju462xApt1P/qftSdU3F689ei2YDxMjMeT/0+/jpip13OXcV1ZpK
/zOzvapy9LN9FemnrL5cqUu0X8723UV+NufQ4KvIynmf+d6r60yWHrlj2Nnx
7918zuwyqtutU/+oxrXjOWhoNnw7mXHzK9+7am3cRfeyz8g5YuMr+yCV3+qM
Dbv6yHFOzdEeZ362U7MPq147ASrJjptf6ffIeuBY1x1rnitG3skvq7RIG7ly
8Op6KuuirsdVGz7PcTQbwEdm3PwxrxXnzt3r64wGdMmrz7ajq94V564y70Pd
np3aa8XHPvbhbs3m814APyc7bv48xz/lvtVrV7V2uPPninIV8fHVOq2Urdib
rJRR0ZeO9pgt8935MzQbIJ+KuPmzfj/HzkfX79E1Xrl2qtdqRXw+KzbRoeyK
2HCXulfcz9Ucc+ey0WyAMSp876h+K9fQVX8kc33NOONUVbfMNl1pH3WbqrTc
sVc587GPfz/PWZfxGW2AcSp9b5V+K33e2XVtdZ3v6HsrY+SqM3qK8p3m7ieX
jj9+f9UXGblsNBtgnewza6/6fcThsvzvynU+Y/3v7Ht36BO3j90t/j16ney4
OJoNEKfK91bqt9uXq1pz72Bu39FZr8x2cMfKO/jYh5HPBtBR5Xt38b9V6/pV
fdXnlqOx+5UYuSJGkOVXu2PxrrMS7vLe+dhoNsCeVPrez/p9/Pudfq+syZ/e
0+388m6+vKO+irMEqro68tRZ5xxex36Vj41mA/ipOnM+ot/v1qzdtC5SZ5em
uep79f4u/VZdD/fe57X8TB/7sOr1DOBbOPbHlbHzZw0/fr4+f+2xHq3GRR3n
vZXrb+Z5vJV9kFqHd/KxVe2lqtPZHKj2sfmOEIAaqn3vVx/8LAf+bu1yn11a
iVVG12Wlprmtqh4OHc0+Lx65XrVeo9kAPejgez/rt8MHv4NmzdQlw09cKavC
987sr2ieZ9S/Pv6dHRP/UbP5nBdAE7rEzt/p91keXHWeW1nG1XtWffysPPYn
zVnZC3Ta4yjbIuv+uug1mg3Qly6x81Ef/HVtu4qjdz4/pdCc7HtxxYtnfGel
n52hwWf//863fnfm7DEnsuchZ8YB+tNVv5/Pop/F0RU+36qfrtKKKh87U7ey
zdmmq3vCkRhHpV6TywbYjy6x8zMNf8TRP/nh0bV7VZsd14+Up4gPZ54NU+Q5
Iq937DU+ndt4/K5Sr3/UbOLiAJvSKfd9puHHv2c0/CqeXmVZPnaH+ivq6LpP
Z/tdnTU77Bi/VfnrZyMuDnAPOuv3Ow3/lA93nqFS+HJVPrZazxT1VeYtXDHt
T685G3eHPX+eq1KviYsD3JNuue8rDf90Lv1sPV2JiyvPSFVo42qZrvNpu9q7
M5JnWv0cC6/U6x81m7g4wM3ZQb/PNHxUx0fPAGdpgVsL3XsUtca7Y/Oz+5vd
tPpHvf4tcXGA72IX/b7S8WM9PdPx53X4SstV/qnLz93Rr+12j2d9fabTh73T
6g56/aNm42MDfDHHGtA5/z2j41dn3F7X6lc9P/vZVVNV+4joe9VtED0/cJU3
ucpVd9fqH/UaHxsAfqL7+bUZHZ/V8itNXznPvqOPXKXTirpc6fNVfR863Vmr
nzQbHxsA3rK7fp/p+DstH9XzT7o+qvN3+Vl17ZE2v+q7nXT6Sa85Kw4AQ/yo
31vlwFf0/PlvEU2f9Q+xaw1ebfuHPl9pdGedftZrYuIAsMod9fuTnl/p+rO2
P2v8qO+HrWvysy4/a/OZPu+g0W80m5g4AEi4Swxdqesz+vDQlmetwX5uz+00
2w/VYwS9BoDOfIMPHrGHjjz/xObstS3vaug1AGTyzT44hkWMM2cAUM2unwXH
sExDrwGgG4+z6Gg4hv3BiIcDwA7c9fNkGDZq6DUA7Ap+OPYtxuevAeBuoOHY
He0Y0+g1AHwDaDi2q+FbA8C3gy+OdbdjbJK3BgB4DzqOdTC0GgBgDXQcyzK0
GgDAA1qOKeyh0+SrAQDyedZy9Bx7Z+g0AEBvjvUZPf9OQ6MBAO7Fi6b/pOto
+z721Ge/QaMBAODgjb7/QufRfKkG//ZVj591GW0GAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
gJ359a//+I9e/73yc+TfkZ+v/wYAAMjkTPuwPvaunwAAYA/QWUxh78YSAACc
87xmYthu9jyGAQB25HktwzDs5/Y8RwAAnFSvdxj2bfaYd9VzHwB6Ur1GYRi2
ZtVrBwDoqV5XMAyrscf8r16DAODnPM9PDMOwUateuwC+gep5jmHY/a16nQPY
kep5i2EY9mrV6yJAF6rnIoZh2KpVr58AbqrnGIZhmNuq11mACNXzB8MwrNqq
12GAK6rnB4ZhWHerXqcBqucAhmHYrla9fsP3UD3WMQzD7mbV6zrcj+oxjWEY
9i1Wvd7D3lSPXwzDsG+16vUf9qJ6vGIYhmE/WLUeQG+qxyeGYRj23qr1AfpR
PSYxDMOwa6vWCehD9VjEMAzDxqxaL6Ce6jGIYRiGzVm1bkAt1eMPwzAMm7Nq
3YBaqscfhmEYNm/V2gF1VI89DMMwbM6qdQNqqR5/GIZh2JxV6wbUUz0GMQzD
sDGr1gvoQ/VYxDAMw66tWiegJ9XjEsMwDPulVWsD9KZ6fGIYhmE/WLUewF5U
j1cMw7Bvter1H/anegxjGIZ9g1Wv9XA/qsc0hmHY3ax6XYfvoXqsYxiG7WrV
6zfAQfU8wDAM62zVazTAFdXzA8MwrNqq12GAKNVzCMMwzGnVayyAm+o5hmEY
tmLVaydAN6rnJIZh2LNVr4kAO1I9bzEMu7dVr3EA38JjvlXPeQzD+tvzmgEA
PaleJzAMy7XHvK9eewDAR/U6g2HYnFWvGQDQm8c6Ub1WYdid7XmuAQBk8bz+
YBiGHgPAfXhd06rXVwz7ZM/jFQAA5nleSzHsk72OmcqxCwAA65yt6dU68432
3O7PfQEAALATz/r16d+ffl79G+Bb+d8KS1UD
     "], {{0, 710.}, {494., 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{29.940104166667112`, Automatic},
   ImageSizeRaw->{494., 710.},
   PlotRange->{{0, 494.}, {0, 710.}}]],ExpressionUUID->
  "aecd245c-91d2-48b3-88c9-da48dde3715c"],
 "  This is bad approximation. It' s just for illustration"
}], "Text",
 CellChangeTimes->{{3.883644343786537*^9, 3.883644365530542*^9}, 
   3.883644395965157*^9, {3.883644458224248*^9, 3.8836444674821997`*^9}, 
   3.883644573758099*^9, {3.883644619985252*^9, 
   3.8836446291546297`*^9}},ExpressionUUID->"607b4c38-642a-4192-8125-\
f0c293f56603"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Library", "Subsection",
 CellChangeTimes->{{3.883616600889913*^9, 
  3.883616605389134*^9}},ExpressionUUID->"9b72f3bd-4309-46ff-a24d-\
92c32fd2185d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"QRange", "[", 
    RowBox[{"k_", ",", "nSteps_", ",", "prefix_"}], "]"}], ":=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Sort", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Range", "[", "prefix", "]"}], ",", " ", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"#", " ", 
            RowBox[{
             RowBox[{"Log", "[", "k", "]"}], "/", "nSteps"}]}], "]"}], "&"}], 
         "/@", 
         RowBox[{"Range", "[", "nSteps", "]"}]}], "]"}]}], "]"}], "]"}], 
    "\[IndentingNewLine]", "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QRange", "[", 
    RowBox[{"k_", ",", "nSteps_"}], "]"}], ":=", 
   RowBox[{"QRange", "[", 
    RowBox[{"k", ",", "nSteps", ",", "100"}], "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.883539250407523*^9, 3.8835392846065693`*^9}, {
  3.883539347172345*^9, 3.883539380337377*^9}, {3.883539455673812*^9, 
  3.883539460327374*^9}, {3.883739342317917*^9, 3.8837393600723267`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"3e08dc37-26a3-4d00-9795-3d9eac333115"],

Cell[BoxData[
 RowBox[{"QRange", "[", 
  RowBox[{"1000", ",", "100", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.883539274445578*^9, 3.883539297911564*^9}, {
   3.8835393835494127`*^9, 3.883539385057962*^9}, 3.883539463504228*^9, 
   3.883739385644874*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"c7ac5e1e-46d2-49f6-98aa-10ba4c8195cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ListQPart", "[", 
    RowBox[{"l_", ",", "nSteps_", ",", "prefix_"}], "]"}], ":=", 
   RowBox[{"l", "\[LeftDoubleBracket]", 
    RowBox[{"QRange", "[", 
     RowBox[{
      RowBox[{"Length", "[", "l", "]"}], ",", "nSteps", ",", "prefix"}], 
     "]"}], "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ListQPart", "[", 
    RowBox[{"l_", ",", "nSteps_"}], "]"}], ":=", 
   RowBox[{"ListQPart", "[", 
    RowBox[{"l", ",", "nSteps", ",", "100"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.88353931333484*^9, 3.8835393417485027`*^9}, {
  3.88353940016952*^9, 3.883539493290524*^9}, {3.883646598482155*^9, 
  3.883646599543705*^9}, {3.8837393698160753`*^9, 3.883739374810317*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"e9759762-3e18-4507-99bb-fc3bee7a1ee5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CatXYs", "[", 
    RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l1", ",", "l2"}], "}"}], "\[Transpose]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CatXYs", "[", "ls_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sequence", "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "&"}],
           "/@", "#"}], ")"}]}], "}"}], "]"}], ")"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{"ls", "\[Transpose]"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.8835470900057783`*^9, 3.883547349159395*^9}, {
  3.883547541847137*^9, 3.8835476035207767`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"8d0fc5dc-cbf9-42d3-bf84-c0b7976878fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find coeffs by minimizing noise ATTEMPT0", "Subsection",
 CellChangeTimes->{{3.883649725041366*^9, 3.883649741403905*^9}, {
  3.883807791730645*^9, 
  3.883807793707069*^9}},ExpressionUUID->"e0e3b1bf-16f1-4bb9-8d02-\
45d48d371d64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    FractionBox[
     RowBox[{" ", "n"}], 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      RowBox[{"Log", "[", "n", "]"}]}]], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["n", 
      RowBox[{" ", "d"}]]}], " ", "+", "e", "+", 
    RowBox[{
     SqrtBox["n"], " ", 
     RowBox[{"(", 
      RowBox[{"noise", "-", "b"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838026419293613`*^9, 3.883802645644046*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"cbee257c-8d37-464a-aa2f-3aef81cbd772"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "n", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"pi", "\[Equal]", "expr"}], ",", "noise"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8836537155306053`*^9, 3.88365376919566*^9}, {
  3.883654253844005*^9, 3.883654255949175*^9}, {3.883654752690338*^9, 
  3.883654754397341*^9}, {3.883654899935755*^9, 3.883654900818659*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c57293c3-49eb-48d6-9f47-548e7a114a0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Noise", "[", "n_", "]"}], ":=", 
   FractionBox[
    RowBox[{"e", "-", 
     RowBox[{"b", " ", 
      SqrtBox["n"]}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox["n", "d"]}], "-", 
     RowBox[{"PrimePi", "[", "n", "]"}], "+", 
     FractionBox["n", 
      RowBox[{
       RowBox[{"-", "a"}], "+", 
       RowBox[{"Log", "[", "n", "]"}]}]]}], 
    SqrtBox["n"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.883653781122675*^9, 3.883653798007057*^9}, {
  3.883654093127776*^9, 3.88365413553483*^9}, {3.883654243556593*^9, 
  3.8836542437938643`*^9}, {3.883654804707725*^9, 3.883654828609561*^9}, {
  3.883655473037239*^9, 3.883655473900817*^9}, {3.883656183419506*^9, 
  3.883656184661089*^9}, {3.8836562215178328`*^9, 3.883656221630142*^9}, {
  3.8836592305874*^9, 3.8836592511495657`*^9}, {3.8836593558988657`*^9, 
  3.883659378927449*^9}, {3.883807560012329*^9, 3.883807560284237*^9}, {
  3.883807606929339*^9, 3.883807610250271*^9}, {3.8838078806397038`*^9, 
  3.883807880757842*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"5fb63ffe-73b2-4aef-ab68-e3ca021480b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"loss", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Noise", "[", "#", "]"}], "2"], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"10", "+", 
        RowBox[{"QRange", "[", 
         RowBox[{"500000000000", ",", "2000", ",", "5"}], "]"}]}], ")"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
   RowBox[{"loss", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "0.9", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "0.0002", ",", " ", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "0.2", ",", "0.76"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "->", "\"\<SimulatedAnnealing\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQHRrLH1r9/o2jjrZIGYhe3MLaCKIDNJ1bQfTVsx+n
g2irOKYZIPpkOMd8EK19z2c5iE4ovLAaRJ+5lLQeROuxhl4H0SmhS2+C6GM7
VrHVAGm7G+vAtMuPm2oguu+ChQaInrd4oh6IvnJeVh9EF/y3tQTR1z5tdwLR
RxZYuoPo98UHPUF0wB+5ADB9pSoKRN9/EBwHol8yrAPTh09wVoFoHo+wahDt
UT15Cog+9C5tAYguehv2txZINxQkg+m6LdaMdUDahmMxmA5L9hAA0QcC1oqA
6FM+MSXHgPSW55fBtERS/UQQfausFUwDAKxft+8=
  "],
 CellLabel->"In[50]:=",ExpressionUUID->"a71d5036-d874-4059-b3e2-1587fb790edf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrimePiMy", "[", "n_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"expr", "/.", 
      RowBox[{"solution", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"noise", "\[Rule]", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrimePiMy", "[", "n", "]"}]}], "Input",
 CellChangeTimes->{{3.883654537187786*^9, 3.883654573254409*^9}, {
  3.883654708430767*^9, 3.88365471459204*^9}, {3.883654883263096*^9, 
  3.8836549078742523`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b0c9238d-c4d7-43c9-8cdb-a36e8801a6a2"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "[", "#", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PrimePiMy", "[", "#", "]"}], "-", " ", 
          RowBox[{"PrimePi", "[", "#", "]"}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "#", "]"}]}], " ", 
       RowBox[{"Log", "[", "#", "]"}]}]}], " ", "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"QRange", "[", 
      RowBox[{"5000000000000", ",", "5000", ",", "100"}], "]"}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883654580367531*^9, 3.8836546810908623`*^9}, {
   3.8836549323536177`*^9, 3.883654942750305*^9}, {3.883655014583085*^9, 
   3.883655074762743*^9}, {3.883655164256707*^9, 3.883655171745203*^9}, {
   3.883655238560038*^9, 3.883655241807993*^9}, {3.883655332441998*^9, 
   3.883655335231642*^9}, {3.883655949831011*^9, 3.883655970746765*^9}, 
   3.883656053971171*^9, {3.8837402214449873`*^9, 3.8837402504534397`*^9}, 
   3.883807758891781*^9, {3.8838179778557673`*^9, 3.8838180095961742`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"a2f7b596-5a73-4b82-99e4-dee3a1f056ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find coeffs by minimizing noise ATTEMPT1", "Subsection",
 CellChangeTimes->{{3.883649725041366*^9, 3.883649741403905*^9}, {
  3.883807791730645*^9, 
  3.883807801811941*^9}},ExpressionUUID->"be37d909-f3d7-4d5d-97da-\
f91c92ecd9b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    FractionBox[
     RowBox[{" ", "n"}], 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      RowBox[{"Log", "[", "n", "]"}]}]], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["n", 
      RowBox[{" ", "d"}]]}], " ", "+", "e", "+", 
    RowBox[{
     SqrtBox["n"], " ", 
     RowBox[{"(", 
      RowBox[{"noise", "-", "b"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8838026419293613`*^9, 3.883802645644046*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"4bcb5b1f-4e33-4258-b521-62c7e0145787"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    FractionBox[
     RowBox[{" ", "n"}], 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      RowBox[{"Log", "[", "n", "]"}]}]], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["n", 
      RowBox[{" ", "d"}]]}], "+", "e", "+", 
    FractionBox[
     RowBox[{
      SqrtBox["n"], " ", 
      RowBox[{"(", 
       RowBox[{"noise", "-", "b"}], ")"}]}], 
     RowBox[{"Log", "[", "n", "]"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883654891985272*^9, 3.883654894943475*^9}, {
   3.8836554601575813`*^9, 3.883655461851153*^9}, {3.883659117108585*^9, 
   3.883659125024396*^9}, {3.883659166806822*^9, 3.883659202235051*^9}, 
   3.883807835656576*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"cc590864-5410-4afc-a0e9-2f655a47058a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "n", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"pi", "\[Equal]", "expr"}], ",", "noise"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8836537155306053`*^9, 3.88365376919566*^9}, {
  3.883654253844005*^9, 3.883654255949175*^9}, {3.883654752690338*^9, 
  3.883654754397341*^9}, {3.883654899935755*^9, 3.883654900818659*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"19153aaa-a73a-4189-a03a-44148d3cc663"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Noise", "[", "n_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"Log", "[", "n", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"e", "+", 
       RowBox[{"c", " ", 
        SuperscriptBox["n", "d"]}], "-", 
       RowBox[{"PrimePi", "[", "n", "]"}], "-", 
       FractionBox[
        RowBox[{"b", " ", 
         SqrtBox["n"]}], 
        RowBox[{"Log", "[", "n", "]"}]], "+", 
       FractionBox["n", 
        RowBox[{
         RowBox[{"-", "a"}], "+", 
         RowBox[{"Log", "[", "n", "]"}]}]]}], ")"}]}], 
    SqrtBox["n"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.883653781122675*^9, 3.883653798007057*^9}, {
  3.883654093127776*^9, 3.88365413553483*^9}, {3.883654243556593*^9, 
  3.8836542437938643`*^9}, {3.883654804707725*^9, 3.883654828609561*^9}, {
  3.883655473037239*^9, 3.883655473900817*^9}, {3.883656183419506*^9, 
  3.883656184661089*^9}, {3.8836562215178328`*^9, 3.883656221630142*^9}, {
  3.8836592305874*^9, 3.8836592511495657`*^9}, {3.8836593558988657`*^9, 
  3.883659378927449*^9}, {3.883807560012329*^9, 3.883807560284237*^9}, {
  3.883807606929339*^9, 3.883807610250271*^9}, {3.883807852812813*^9, 
  3.883807868252965*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c89bf456-8c8e-44a0-81dc-d435d2b99536"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"loss", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Noise", "[", "#", "]"}], "2"], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"10", "+", 
        RowBox[{"QRange", "[", 
         RowBox[{"500000000000", ",", "2000", ",", "5"}], "]"}]}], ")"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
   RowBox[{"loss", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "0.9", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "0.0002", ",", " ", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "0.2", ",", "0.76"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "->", "\"\<SimulatedAnnealing\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQHRrLH1r9/o2jjrZIGYhe3MLaCKIDNJ1bQfTVsx+n
g2irOKYZIPpkOMd8EK19z2c5iE4ovLAaRJ+5lLQeROuxhl4H0SmhS2+C6GM7
VrHVAGm7G+vAtMuPm2oguu+ChQaInrd4oh6IvnJeVh9EF/y3tQTR1z5tdwLR
RxZYuoPo98UHPUF0wB+5ADB9pSoKRN9/EBwHol8yrAPTh09wVoFoHo+wahDt
UT15Cog+9C5tAYguehv2txZINxQkg+m6LdaMdUDahmMxmA5L9hAA0QcC1oqA
6FM+MSXHgPSW55fB9Ky4F/0gukX6DZjWEo/uPg2kcxn29IBoAIOQwTM=
  
  "],ExpressionUUID->"0fe62716-4c35-4f24-ad8f-fd8c41384f9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrimePiMy", "[", "n_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"expr", "/.", 
      RowBox[{"solution", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"noise", "\[Rule]", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrimePiMy", "[", "n", "]"}]}], "Input",
 CellChangeTimes->{{3.883654537187786*^9, 3.883654573254409*^9}, {
  3.883654708430767*^9, 3.88365471459204*^9}, {3.883654883263096*^9, 
  3.8836549078742523`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"f8357aaa-c4e3-4ff5-a496-af7a093e1606"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "[", "#", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PrimePiMy", "[", "#", "]"}], "-", " ", 
          RowBox[{"PrimePi", "[", "#", "]"}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "#", "]"}]}], " ", 
       RowBox[{"Log", "[", "#", "]"}]}]}], " ", "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"QRange", "[", 
      RowBox[{"5000000000000", ",", "5000", ",", "100"}], "]"}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883654580367531*^9, 3.8836546810908623`*^9}, {
   3.8836549323536177`*^9, 3.883654942750305*^9}, {3.883655014583085*^9, 
   3.883655074762743*^9}, {3.883655164256707*^9, 3.883655171745203*^9}, {
   3.883655238560038*^9, 3.883655241807993*^9}, {3.883655332441998*^9, 
   3.883655335231642*^9}, {3.883655949831011*^9, 3.883655970746765*^9}, 
   3.883656053971171*^9, {3.8837402214449873`*^9, 3.8837402504534397`*^9}, 
   3.883807758891781*^9, {3.883807953217194*^9, 3.8838079572758904`*^9}, {
   3.8838181049840097`*^9, 3.883818112738393*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"348fdf11-826a-4765-8f8c-8e8b4af1e086"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find coeffs by minimizing noise ATTEMPT2", "Subsection",
 CellChangeTimes->{{3.883649725041366*^9, 3.883649741403905*^9}, {
  3.883656592275013*^9, 
  3.883656595159384*^9}},ExpressionUUID->"39712268-7638-4a96-88ca-\
a31403f8fa27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    FractionBox[
     RowBox[{" ", "n"}], 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      RowBox[{"Log", "[", "n", "]"}]}]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"b3", " ", "n"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Log", "[", "n", "]"}], ")"}], "3"]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"b4", " ", "n"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Log", "[", "n", "]"}], ")"}], "4"]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"b5", " ", "n"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Log", "[", "n", "]"}], ")"}], "5"]], "+", 
    FractionBox[
     RowBox[{
      SqrtBox["n"], " ", 
      RowBox[{"(", 
       RowBox[{"noise", "+", "d"}], ")"}]}], 
     RowBox[{"Log", "[", "n", "]"}]], "+", "e"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883654891985272*^9, 3.883654894943475*^9}, {
   3.8836554601575813`*^9, 3.883655461851153*^9}, 3.883656612442687*^9, {
   3.883656655097229*^9, 3.8836568802564287`*^9}, {3.8836569421067753`*^9, 
   3.883656955647105*^9}, {3.883656997376239*^9, 3.883657002535919*^9}, {
   3.883657206508193*^9, 3.88365722061308*^9}, {3.883657345913836*^9, 
   3.883657403395144*^9}, {3.883657471277809*^9, 3.883657475501131*^9}, {
   3.883657643194378*^9, 3.883657643770895*^9}, {3.8836577632131767`*^9, 
   3.883657763495441*^9}, 3.883657891377248*^9, {3.8836580001910133`*^9, 
   3.883658001461478*^9}, {3.883658079128912*^9, 3.883658092290822*^9}, {
   3.8836582403093576`*^9, 3.883658246785492*^9}, {3.883658371273437*^9, 
   3.883658371510582*^9}, {3.8836584338705893`*^9, 3.8836584601695232`*^9}, {
   3.88365878275904*^9, 3.883658793556118*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"1bad4099-dca2-4f8e-8d2a-3c624a19e4ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "n", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"pi", "\[Equal]", "expr"}], ",", "noise"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8836537155306053`*^9, 3.88365376919566*^9}, {
   3.883654253844005*^9, 3.883654255949175*^9}, {3.883654752690338*^9, 
   3.883654754397341*^9}, {3.883654899935755*^9, 3.883654900818659*^9}, 
   3.883656970850209*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"bef33e7a-33f3-445f-8c35-100b9d30fb88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Noise", "[", "n_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"Log", "[", "n", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"e", "-", 
       RowBox[{"PrimePi", "[", "n", "]"}], "+", 
       FractionBox[
        RowBox[{"b5", " ", "n"}], 
        SuperscriptBox[
         RowBox[{"Log", "[", "n", "]"}], "5"]], "+", 
       FractionBox[
        RowBox[{"b4", " ", "n"}], 
        SuperscriptBox[
         RowBox[{"Log", "[", "n", "]"}], "4"]], "+", 
       FractionBox[
        RowBox[{"b3", " ", "n"}], 
        SuperscriptBox[
         RowBox[{"Log", "[", "n", "]"}], "3"]], "+", 
       FractionBox[
        RowBox[{"d", " ", 
         SqrtBox["n"]}], 
        RowBox[{"Log", "[", "n", "]"}]], "+", 
       FractionBox["n", 
        RowBox[{
         RowBox[{"-", "a"}], "+", 
         RowBox[{"Log", "[", "n", "]"}]}]]}], ")"}]}], 
    SqrtBox["n"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.883653781122675*^9, 3.883653798007057*^9}, {
   3.883654093127776*^9, 3.88365413553483*^9}, {3.883654243556593*^9, 
   3.8836542437938643`*^9}, {3.883654804707725*^9, 3.883654828609561*^9}, {
   3.883655473037239*^9, 3.883655473900817*^9}, {3.883656183419506*^9, 
   3.883656184661089*^9}, {3.8836562215178328`*^9, 3.883656221630142*^9}, {
   3.88365689807839*^9, 3.883656898537904*^9}, {3.883656977815094*^9, 
   3.883656979470018*^9}, {3.883657014613784*^9, 3.883657014841873*^9}, {
   3.8836570791161833`*^9, 3.8836570823120537`*^9}, 3.883657243997839*^9, {
   3.883657416033578*^9, 3.883657416533893*^9}, {3.883657513986678*^9, 
   3.8836575214153137`*^9}, {3.883657653839077*^9, 3.8836576611687107`*^9}, {
   3.8836577695125*^9, 3.8836577698996353`*^9}, 3.8836578979087143`*^9, {
   3.883658010281268*^9, 3.883658010822044*^9}, {3.8836581017364187`*^9, 
   3.883658108896551*^9}, {3.8836582651329823`*^9, 3.88365827201921*^9}, 
   3.8836583780095387`*^9, 3.883658427294793*^9, {3.883658466663538*^9, 
   3.8836584708079033`*^9}, {3.883658543175071*^9, 3.883658543219716*^9}, {
   3.883658621768176*^9, 3.883658652174116*^9}, {3.883658806873303*^9, 
   3.8836588335101624`*^9}, {3.883736699829756*^9, 3.8837367181222*^9}, {
   3.883809446814857*^9, 3.883809446981243*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"229c39fb-7b25-4e33-abf6-4fff7bd4009f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"loss", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Noise", "[", "#", "]"}], "2"], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"QRange", "[", 
         RowBox[{"500000000000", ",", "2000", ",", "5"}], "]"}]}], ")"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
   RowBox[{"loss", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "0.95", ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b3", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b4", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b5", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", 
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "->", "\"\<SimulatedAnnealing\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.883653800480143*^9, 3.88365406463027*^9}, {
   3.883654152172441*^9, 3.883654186098793*^9}, {3.883654335556376*^9, 
   3.8836543360740023`*^9}, {3.883654392260716*^9, 3.88365445840212*^9}, {
   3.8836544945138397`*^9, 3.883654523088232*^9}, {3.8836548426568823`*^9, 
   3.8836548611666737`*^9}, {3.8836552213350554`*^9, 
   3.8836552214638968`*^9}, {3.883655478811556*^9, 3.8836554897754583`*^9}, {
   3.883655540551223*^9, 3.8836555449316196`*^9}, {3.8836556259374313`*^9, 
   3.883655701748393*^9}, {3.8836557378008747`*^9, 3.883655758045402*^9}, {
   3.8836558089683*^9, 3.883655891838417*^9}, {3.8836559226212*^9, 
   3.883655925437611*^9}, {3.883656144305757*^9, 3.883656154696295*^9}, {
   3.883656356608799*^9, 3.8836564512166452`*^9}, {3.883656904965537*^9, 
   3.883656933650949*^9}, {3.883656987749195*^9, 3.883656990645192*^9}, {
   3.8836570217837553`*^9, 3.883657065422844*^9}, {3.883657253006344*^9, 
   3.883657272966528*^9}, {3.88365742528401*^9, 3.88365745076475*^9}, {
   3.8836574871110783`*^9, 3.883657495878667*^9}, {3.883657534694096*^9, 
   3.883657540986209*^9}, {3.883657577117251*^9, 3.883657581046894*^9}, {
   3.8836576696683273`*^9, 3.883657673052229*^9}, 3.883657773928138*^9, {
   3.88365781646242*^9, 3.883657831583267*^9}, {3.8836579062862597`*^9, 
   3.883657983373567*^9}, {3.8836581198842087`*^9, 3.883658121367476*^9}, {
   3.883658278562437*^9, 3.883658280048572*^9}, {3.883658382307075*^9, 
   3.883658407733403*^9}, {3.883658478954121*^9, 3.8836584807237663`*^9}, {
   3.883658666936172*^9, 3.883658691316133*^9}, {3.883658818417633*^9, 
   3.883658820647951*^9}, 3.8836588846557627`*^9, 3.883658959794739*^9, {
   3.883809445191895*^9, 3.8838094453172503`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"2116f859-6cf6-435b-b3de-7c785dc7715d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrimePiMy", "[", "n_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"expr", "/.", 
      RowBox[{"solution", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"noise", "\[Rule]", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrimePiMy", "[", "n", "]"}]}], "Input",
 CellChangeTimes->{{3.883654537187786*^9, 3.883654573254409*^9}, {
  3.883654708430767*^9, 3.88365471459204*^9}, {3.883654883263096*^9, 
  3.8836549078742523`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"908cf7e9-a8aa-4198-b22e-23991ec3420d"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Log", "[", "#", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PrimePiMy", "[", "#", "]"}], "-", " ", 
           RowBox[{"PrimePi", "[", "#", "]"}]}], ")"}], "/", 
         RowBox[{"Sqrt", "[", "#", "]"}]}], " ", 
        RowBox[{"Log", "[", "#", "]"}]}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"QRange", "[", 
       RowBox[{"500000000000", ",", "5000", ",", "100"}], "]"}]}], ")"}]}], 
   ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Log[x]\>\"", ",", "\"\<noise\>\""}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.5"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883654580367531*^9, 3.8836546810908623`*^9}, {
   3.8836549323536177`*^9, 3.883654942750305*^9}, {3.883655014583085*^9, 
   3.883655074762743*^9}, {3.883655164256707*^9, 3.883655171745203*^9}, {
   3.883655238560038*^9, 3.883655241807993*^9}, {3.883655332441998*^9, 
   3.883655335231642*^9}, {3.883655949831011*^9, 3.883655970746765*^9}, 
   3.883656053971171*^9, 3.883656909417326*^9, 3.883658724884822*^9, {
   3.883658907451861*^9, 3.8836589213354063`*^9}, {3.883735981711712*^9, 
   3.883736025944673*^9}, {3.883736247349612*^9, 3.883736278866391*^9}, 
   3.8837404939327307`*^9, 3.883829541795768*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"a15cc90c-788a-481d-a9f0-216778f9b0a2"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Log", "[", "#", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PrimePiMy", "[", "#", "]"}], "-", " ", 
           RowBox[{"PrimePi", "[", "#", "]"}]}], ")"}], "/", 
         RowBox[{"Sqrt", "[", "#", "]"}]}], " ", 
        RowBox[{"Log", "[", "#", "]"}]}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"QRange", "[", 
       RowBox[{"500000000000", ",", "5000", ",", "100"}], "]"}]}], ")"}]}], 
   ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.5"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883829553826317*^9, 3.883829554584118*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"a9a1f153-1869-4c13-9d3b-68d69ff4983b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1.005182"}], "+", 
       RowBox[{"Log", "[", "n", "]"}]}]], "-", 
     FractionBox[
      RowBox[{"28.7385", " "}], 
      SuperscriptBox[
       RowBox[{"Log", "[", "n", "]"}], "5"]], "+", 
     FractionBox[
      RowBox[{"13.1891", " "}], 
      SuperscriptBox[
       RowBox[{"Log", "[", "n", "]"}], "4"]], "+", 
     FractionBox[
      RowBox[{"0.62466", " "}], 
      SuperscriptBox[
       RowBox[{"Log", "[", "n", "]"}], "3"]]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "[", "n", "]"}], ",", "\[Infinity]", ",", "6"}], "}"}]}],
    "]"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.883809490344551*^9, 3.883809669610704*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"e5437824-9330-4510-8a23-add3dc97c26b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find coeffs by minimizing noise ATTEMPT3", "Subsection",
 CellChangeTimes->{{3.883649725041366*^9, 3.883649741403905*^9}, {
  3.883656592275013*^9, 3.883656595159384*^9}, {3.88370141704536*^9, 
  3.883701417171232*^9}},ExpressionUUID->"44f7b482-8ac2-4e22-8d24-\
6721c7f1f707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    FractionBox[
     RowBox[{" ", "n"}], 
     RowBox[{
      RowBox[{"-", "a"}], "+", 
      RowBox[{"Log", "[", "n", "]"}]}]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"b3", " ", "n"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Log", "[", "n", "]"}], ")"}], "3"]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"b4", " ", "n"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Log", "[", "n", "]"}], ")"}], "4"]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"b5", " ", "n"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Log", "[", "n", "]"}], ")"}], "5"]], "+", 
    FractionBox[
     RowBox[{
      SqrtBox["n"], " ", 
      RowBox[{"(", 
       RowBox[{"noise", "+", "d"}], ")"}]}], 
     RowBox[{"Log", "[", "n", "]"}]], "+", "e"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883654891985272*^9, 3.883654894943475*^9}, {
   3.8836554601575813`*^9, 3.883655461851153*^9}, 3.883656612442687*^9, {
   3.883656655097229*^9, 3.8836568802564287`*^9}, {3.8836569421067753`*^9, 
   3.883656955647105*^9}, {3.883656997376239*^9, 3.883657002535919*^9}, {
   3.883657206508193*^9, 3.88365722061308*^9}, {3.883657345913836*^9, 
   3.883657403395144*^9}, {3.883657471277809*^9, 3.883657475501131*^9}, {
   3.883657643194378*^9, 3.883657643770895*^9}, {3.8836577632131767`*^9, 
   3.883657763495441*^9}, 3.883657891377248*^9, {3.8836580001910133`*^9, 
   3.883658001461478*^9}, {3.883658079128912*^9, 3.883658092290822*^9}, {
   3.8836582403093576`*^9, 3.883658246785492*^9}, {3.883658371273437*^9, 
   3.883658371510582*^9}, {3.8836584338705893`*^9, 3.8836584601695232`*^9}, {
   3.88365878275904*^9, 3.883658793556118*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"eed20764-27b7-4b47-bce5-74fa2e824cb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expr", "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{" ", "n"}], 
      RowBox[{"Log", "[", "n", "]"}]], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{" ", "b1", " "}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Log", "[", "n", "]"}], ")"}], "1"]], "+", 
       FractionBox[
        RowBox[{" ", "b2", " "}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Log", "[", "n", "]"}], ")"}], "2"]], "+", 
       FractionBox[
        RowBox[{" ", "b3", " "}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Log", "[", "n", "]"}], ")"}], "3"]], "+", 
       FractionBox[
        RowBox[{" ", "b4", " "}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Log", "[", "n", "]"}], ")"}], "4"]]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{
      SqrtBox["n"], " ", 
      RowBox[{"(", 
       RowBox[{"noise", "+", "d"}], ")"}]}], 
     RowBox[{"Log", "[", "n", "]"}]], "+", "e"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883701300929577*^9, 3.883701302687579*^9}, {
  3.883701333927742*^9, 3.883701387932067*^9}, {3.8837209392095346`*^9, 
  3.883720939349142*^9}, {3.883721080754696*^9, 3.883721082668006*^9}, {
  3.88372130007264*^9, 3.883721315375104*^9}, {3.8837213658132343`*^9, 
  3.883721373984747*^9}, {3.883721461306109*^9, 3.883721475350871*^9}, {
  3.883721778974367*^9, 3.883721787838563*^9}, {3.883740583093054*^9, 
  3.883740591926414*^9}, {3.883818337347063*^9, 3.8838183387444687`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"3f6ddb08-ce91-4fdc-ab3c-2d096d8745c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "n", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"pi", "\[Equal]", "expr"}], ",", "noise"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8836537155306053`*^9, 3.88365376919566*^9}, {
   3.883654253844005*^9, 3.883654255949175*^9}, {3.883654752690338*^9, 
   3.883654754397341*^9}, {3.883654899935755*^9, 3.883654900818659*^9}, 
   3.883656970850209*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"0d1b4285-d96c-4b2d-baea-7049f9b87ef3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Noise", "[", "n_", "]"}], ":=", 
   RowBox[{"d", "+", 
    RowBox[{
     FractionBox[
      RowBox[{"Log", "[", "n", "]"}], 
      SqrtBox["n"]], " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"e", "-", 
       RowBox[{"PrimePi", "[", "n", "]"}], "+", 
       RowBox[{
        FractionBox["n", 
         RowBox[{"Log", "[", "n", "]"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["b4", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Log", "[", "n", "]"}], ")"}], "4"]], "+", 
          FractionBox["b3", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Log", "[", "n", "]"}], ")"}], "3"]], "+", 
          FractionBox["b2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Log", "[", "n", "]"}], ")"}], "2"]], "+", 
          FractionBox["b1", 
           RowBox[{"Log", "[", "n", "]"}]]}], ")"}]}]}], 
      "\[IndentingNewLine]", ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883653781122675*^9, 3.883653798007057*^9}, {
   3.883654093127776*^9, 3.88365413553483*^9}, {3.883654243556593*^9, 
   3.8836542437938643`*^9}, {3.883654804707725*^9, 3.883654828609561*^9}, {
   3.883655473037239*^9, 3.883655473900817*^9}, {3.883656183419506*^9, 
   3.883656184661089*^9}, {3.8836562215178328`*^9, 3.883656221630142*^9}, {
   3.88365689807839*^9, 3.883656898537904*^9}, {3.883656977815094*^9, 
   3.883656979470018*^9}, {3.883657014613784*^9, 3.883657014841873*^9}, {
   3.8836570791161833`*^9, 3.8836570823120537`*^9}, 3.883657243997839*^9, {
   3.883657416033578*^9, 3.883657416533893*^9}, {3.883657513986678*^9, 
   3.8836575214153137`*^9}, {3.883657653839077*^9, 3.8836576611687107`*^9}, {
   3.8836577695125*^9, 3.8836577698996353`*^9}, 3.8836578979087143`*^9, {
   3.883658010281268*^9, 3.883658010822044*^9}, {3.8836581017364187`*^9, 
   3.883658108896551*^9}, {3.8836582651329823`*^9, 3.88365827201921*^9}, 
   3.8836583780095387`*^9, 3.883658427294793*^9, {3.883658466663538*^9, 
   3.8836584708079033`*^9}, {3.883658543175071*^9, 3.883658543219716*^9}, {
   3.883658621768176*^9, 3.883658652174116*^9}, {3.883658806873303*^9, 
   3.8836588335101624`*^9}, {3.883701457254072*^9, 3.883701457623075*^9}, {
   3.8837015044404707`*^9, 3.8837015095926123`*^9}, {3.883720897543417*^9, 
   3.883720957694851*^9}, {3.883721094567236*^9, 3.883721106447164*^9}, {
   3.8837213259424763`*^9, 3.883721334581599*^9}, {3.883721383673388*^9, 
   3.883721389964287*^9}, 3.883721435024362*^9, {3.883721507034848*^9, 
   3.883721516537265*^9}, {3.8837218018005943`*^9, 3.883721832640565*^9}, {
   3.883740738357419*^9, 3.88374074677791*^9}, {3.883808091441226*^9, 
   3.883808137046349*^9}, {3.883809723157113*^9, 3.88380974185744*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"aa6189c9-de1a-4da7-aad3-ef0878f83c19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"loss", "=", 
   RowBox[{"Mean", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Noise", "[", "#", "]"}], "2"], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"QRange", "[", 
         RowBox[{"500000000000", ",", "4000", ",", "5"}], "]"}]}], ")"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solution", "=", 
  RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
   RowBox[{"loss", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"b1", ",", "b2", ",", "b3", ",", "b4", ",", "d", ",", "e"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Method", "->", "\"\<SimulatedAnnealing\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.883653800480143*^9, 3.88365406463027*^9}, {
   3.883654152172441*^9, 3.883654186098793*^9}, {3.883654335556376*^9, 
   3.8836543360740023`*^9}, {3.883654392260716*^9, 3.88365445840212*^9}, {
   3.8836544945138397`*^9, 3.883654523088232*^9}, {3.8836548426568823`*^9, 
   3.8836548611666737`*^9}, {3.8836552213350554`*^9, 
   3.8836552214638968`*^9}, {3.883655478811556*^9, 3.8836554897754583`*^9}, {
   3.883655540551223*^9, 3.8836555449316196`*^9}, {3.8836556259374313`*^9, 
   3.883655701748393*^9}, {3.8836557378008747`*^9, 3.883655758045402*^9}, {
   3.8836558089683*^9, 3.883655891838417*^9}, {3.8836559226212*^9, 
   3.883655925437611*^9}, {3.883656144305757*^9, 3.883656154696295*^9}, {
   3.883656356608799*^9, 3.8836564512166452`*^9}, {3.883656904965537*^9, 
   3.883656933650949*^9}, {3.883656987749195*^9, 3.883656990645192*^9}, {
   3.8836570217837553`*^9, 3.883657065422844*^9}, {3.883657253006344*^9, 
   3.883657272966528*^9}, {3.88365742528401*^9, 3.88365745076475*^9}, {
   3.8836574871110783`*^9, 3.883657495878667*^9}, {3.883657534694096*^9, 
   3.883657540986209*^9}, {3.883657577117251*^9, 3.883657581046894*^9}, {
   3.8836576696683273`*^9, 3.883657673052229*^9}, 3.883657773928138*^9, {
   3.88365781646242*^9, 3.883657831583267*^9}, {3.8836579062862597`*^9, 
   3.883657983373567*^9}, {3.8836581198842087`*^9, 3.883658121367476*^9}, {
   3.883658278562437*^9, 3.883658280048572*^9}, {3.883658382307075*^9, 
   3.883658407733403*^9}, {3.883658478954121*^9, 3.8836584807237663`*^9}, {
   3.883658666936172*^9, 3.883658691316133*^9}, {3.883658818417633*^9, 
   3.883658820647951*^9}, 3.8836588846557627`*^9, 3.883658959794739*^9, {
   3.8837014635062523`*^9, 3.8837014944237432`*^9}, {3.883720812303357*^9, 
   3.883720866536529*^9}, {3.8837210037543497`*^9, 3.883721009094884*^9}, {
   3.883721131560791*^9, 3.8837211977523727`*^9}, {3.883721606069098*^9, 
   3.88372160618204*^9}, {3.883721646889475*^9, 3.8837217164827013`*^9}, {
   3.883721808811112*^9, 3.8837218186809*^9}, {3.8837218774835997`*^9, 
   3.883721950765132*^9}, {3.8837221653125267`*^9, 3.883722420909316*^9}, {
   3.883722488739044*^9, 3.883722491990947*^9}, {3.883722626344198*^9, 
   3.8837226327828608`*^9}, {3.883722670974128*^9, 3.8837227166976852`*^9}, {
   3.883722752835026*^9, 3.883722757675724*^9}, {3.8837228130944366`*^9, 
   3.883722859924258*^9}, {3.8837229243511257`*^9, 3.8837229299304028`*^9}, {
   3.8837229909419537`*^9, 3.8837230024766293`*^9}, {3.883740718759008*^9, 
   3.883740759008997*^9}, {3.883808138801464*^9, 3.8838081389403753`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"6ab68bcc-6f72-48d0-8c1f-036147d74939"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrimePiMy", "[", "n_", "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"expr", "/.", 
      RowBox[{"solution", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"noise", "\[Rule]", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PrimePiMy", "[", "n", "]"}]}], "Input",
 CellChangeTimes->{{3.883654537187786*^9, 3.883654573254409*^9}, {
  3.883654708430767*^9, 3.88365471459204*^9}, {3.883654883263096*^9, 
  3.8836549078742523`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"78ffa743-ab8d-4f83-a423-ce9e4c6ce935"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Log", "[", "#", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PrimePiMy", "[", "#", "]"}], "-", " ", 
           RowBox[{"PrimePi", "[", "#", "]"}]}], ")"}], "/", 
         RowBox[{"Sqrt", "[", "#", "]"}]}], " ", 
        RowBox[{"Log", "[", "#", "]"}]}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"QRange", "[", 
       RowBox[{"5000000000000", ",", "5000", ",", "100"}], "]"}]}], ")"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.883654580367531*^9, 3.8836546810908623`*^9}, {
   3.8836549323536177`*^9, 3.883654942750305*^9}, {3.883655014583085*^9, 
   3.883655074762743*^9}, {3.883655164256707*^9, 3.883655171745203*^9}, {
   3.883655238560038*^9, 3.883655241807993*^9}, {3.883655332441998*^9, 
   3.883655335231642*^9}, {3.883655949831011*^9, 3.883655970746765*^9}, 
   3.883656053971171*^9, 3.883656909417326*^9, 3.883658724884822*^9, {
   3.883658907451861*^9, 3.8836589213354063`*^9}, 3.88372155557959*^9, 
   3.8837215935889807`*^9, 3.883740815657567*^9, {3.883808290303629*^9, 
   3.88380830555219*^9}, 3.883818394807575*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"f71a6ea4-b64e-4a8b-a212-f23adfe8d3be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["P sum of 1, aka \[Pi](n) function \[Dash] approximating by Li(n)", \
"Subsection",
 CellChangeTimes->{{3.88354007587683*^9, 3.8835400860328608`*^9}, {
  3.8836162312935553`*^9, 3.88361624848726*^9}, {3.883630533610612*^9, 
  3.883630548258273*^9}, {3.88363249455044*^9, 3.883632519269113*^9}, {
  3.88363258368298*^9, 3.8836325918849382`*^9}, {3.883646335137268*^9, 
  3.883646338656157*^9}},ExpressionUUID->"ad6d7460-3df0-4ea7-acb5-\
6d9935bf6f2d"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "2", "y"], 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Log", "[", "x", "]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.883646366216576*^9, 3.883646415998109*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"d88ffdf0-3d10-4076-b114-5c2c6a1bb9e9"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "y"], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Log", "[", "x", "]"}]], "-", 
     FractionBox["1", 
      RowBox[{"x", "-", "1"}]]}], ")"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.883809116984805*^9, 3.8838091508102303`*^9}, {
  3.8838092356853657`*^9, 3.883809236035995*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"ab8ece0d-dd8a-4128-8a3c-5982cffcecc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ">", "0"}], "}"}], ",", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{"LogIntegral", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Infinity]", ",", "5"}], "}"}]}], "]"}]}], "]"}], 
   "//", "Normal"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.883808457325989*^9, 3.8838085075699043`*^9}, {
  3.88381850244897*^9, 3.883818503236314*^9}, {3.883818533668593*^9, 
  3.8838185379187117`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"46fa27e0-cd86-42c3-aeb4-916b07b5d866"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ">", "0"}], "}"}], ",", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LogIntegral", "[", "x", "]"}], "/", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Infinity]", ",", "5"}], "}"}]}], "]"}]}], "]"}], 
   "//", "Normal"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.8838085501836157`*^9, 3.883808578964897*^9}, {
  3.88380879784032*^9, 3.883808804268928*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"ff6bd80f-4bed-4b92-91bb-48cb120d3c22"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ">", "0"}], "}"}], ",", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LogIntegral", "[", 
         RowBox[{"Exp", "[", "x", "]"}], "]"}], "/", 
        RowBox[{"Exp", "[", "x", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "\[Infinity]", ",", "16"}], "}"}]}], "]"}]}], "]"}],
    "//", "Normal"}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.88380882914053*^9, 3.883808846348538*^9}, 
   3.883808896341956*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"d696d651-66c4-474c-9082-7009049b98d3"],

Cell[BoxData[
 RowBox[{"PrimePiMy", "[", "x", "]"}]], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"25fdb65a-d520-4890-ba49-933d7d69567d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Nn", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sqrt", "[", "x", "]"}], "/", 
    RowBox[{"Log", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f0", "[", "x_", "]"}], ":=", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Nn", "[", "x", "]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PrimePi", "[", "x", "]"}], "-", 
      FractionBox["x", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "-", "1.05"}]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], ":=", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Nn", "[", "x", "]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PrimePi", "[", "x", "]"}], "-", 
      RowBox[{"PrimePiMy", "[", "x", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Nn", "[", "x", "]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PrimePi", "[", "x", "]"}], "-", 
      RowBox[{"LogIntegral", "[", "x", "]"}], "+", 
      RowBox[{
       RowBox[{"1", "/", "2"}], 
       RowBox[{"LogIntegral", "[", 
        RowBox[{"Sqrt", "[", "x", "]"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f0", "[", "x", "]"}], ",", 
     RowBox[{"f1", "[", "x", "]"}], ",", " ", 
     RowBox[{"h", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2", ",", "500000000"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", "  ", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "3"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8838099045870543`*^9, 3.8838100854947653`*^9}, 
   3.883810115856183*^9, {3.883810178914894*^9, 3.883810288060966*^9}, {
   3.883810324312389*^9, 3.883810326316115*^9}, {3.88381036494246*^9, 
   3.883810390651595*^9}, {3.883810449233201*^9, 3.883810505673626*^9}, {
   3.883811362327536*^9, 3.883811384336812*^9}, {3.8838187780909777`*^9, 
   3.883818794310117*^9}, {3.883834176430477*^9, 3.88383418242325*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"557eeeb4-3bcb-4678-95ba-0bf11cca3852"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Riemann formula for \[Pi] (n) based on Li (n)", "Subsection",
 CellChangeTimes->{{3.8837281888232718`*^9, 3.883728199190754*^9}, {
  3.883728262700904*^9, 3.8837283030151463`*^9}, {3.883729450937334*^9, 
  3.883729476451861*^9}},ExpressionUUID->"c0ef21bc-5552-420e-88a7-\
33bc42b1b078"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     FractionBox[
      RowBox[{"MoebiusMu", "[", "i", "]"}], "i"], " ", 
     RowBox[{"LogIntegral", "[", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "/", "i"}], "]"}], "]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.883728674973748*^9, 3.883728731267352*^9}, {
  3.883728950140414*^9, 3.88372897788444*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"474a6624-6390-4488-97ca-f7bee72df1f9"],

Cell[BoxData[
 RowBox[{"R", "[", 
  RowBox[{"x", ",", "17"}], "]"}]], "Input",
 CellChangeTimes->{{3.883728733839275*^9, 3.8837287353379803`*^9}, {
  3.883729265087017*^9, 3.883729265523628*^9}, {3.883741146975082*^9, 
  3.883741148840499*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"d9eb5e62-c9c1-46fc-9274-352fd92c99b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimePiLIApprox", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"R", "[", 
    RowBox[{"x", ",", "n"}], "]"}], " ", "+", " ", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    RowBox[{"ArcTan", "[", 
     FractionBox["\[Pi]", 
      RowBox[{"Log", "[", "x", "]"}]], "]"}]}], "-", 
   FractionBox["1", 
    RowBox[{"Log", "[", "x", "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.883728643006174*^9, 3.883728652729919*^9}, {
  3.883728746482463*^9, 3.8837288116013536`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"3a70a301-3f86-4de9-8cf9-19e71c5fc7d6"],

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "\[Pi]"]}], 
     RowBox[{"ArcTan", "[", 
      FractionBox["\[Pi]", "x"], "]"}]}], "+", 
    FractionBox["1", "x"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883741286973589*^9, 3.88374137081698*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"021f34bf-810c-477a-b51f-afbab5f07643"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Nn", "[", "x_", "]"}], ":=", 
   FractionBox[
    RowBox[{"Log", "[", "x", "]"}], 
    RowBox[{"Sqrt", "[", "x", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Nn", "[", "x", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PrimePi", "[", "x", "]"}], "-", 
        FractionBox["x", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "-", "1.05"}]]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Nn", "[", "x", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PrimePi", "[", "x", "]"}], "-", 
        RowBox[{"PrimePiMy", "[", "x", "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Nn", "[", "x", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PrimePi", "[", "x", "]"}], "-", 
        RowBox[{"LogIntegral", "[", "x", "]"}], "+", 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"LogIntegral", "[", 
          RowBox[{"Sqrt", "[", "x", "]"}], "]"}]}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Nn", "[", "x", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PrimePi", "[", "x", "]"}], "-", 
        RowBox[{"PrimePiLIApprox", "[", 
         RowBox[{"x", ",", "3"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "1000000000"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.883741535922827*^9, 3.883741547034533*^9}, {
   3.883741597126244*^9, 3.883741626379507*^9}, {3.883741727679488*^9, 
   3.883741746283765*^9}, {3.8837417786090403`*^9, 3.883741821503015*^9}, {
   3.8838106344326982`*^9, 3.8838106385910807`*^9}, {3.883810680774391*^9, 
   3.883810697265349*^9}, {3.8838108542984657`*^9, 3.883810854922961*^9}, {
   3.883810892642*^9, 3.883810925222425*^9}, 3.883810964253175*^9, {
   3.883819086866988*^9, 3.883819102699628*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"0544e4a7-a1ac-41f1-b0ea-fef781e6730a"],

Cell[BoxData[
 RowBox[{"PrimePiMy", "[", "x", "]"}]], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"2e6f7d0e-4b05-438c-88ce-254232fa5aa7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Nn", "[", "x_", "]"}], ":=", 
   FractionBox[
    RowBox[{"Log", "[", "x", "]"}], 
    RowBox[{"Sqrt", "[", "x", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Nn", "[", "x", "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PrimePiMy", "[", "x", "]"}], "-", 
       RowBox[{"PrimePiLIApprox", "[", 
        RowBox[{"x", ",", "150"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10000000000000"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8838114078255863`*^9, 3.883811531154669*^9}, {
  3.883811580852296*^9, 3.883811582572542*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"4b47926e-f7cd-4635-8895-885bf21d8679"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Takeaways", "Subsection",
 CellChangeTimes->{{3.8838334466641006`*^9, 
  3.883833450980619*^9}},ExpressionUUID->"17fe2165-752a-4ad1-9645-\
e32f503fe464"],

Cell[TextData[{
 "Take aways\n1)  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"\[Pi]", "[", "x", "]"}], "InlineFormula"], " ", "~", 
     FractionBox["x", 
      RowBox[{"Log", "[", "x", "]"}]]}], ",", " "}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "abe9278c-8f65-4e82-b4a5-7faefd250334"],
 " and    ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox["lim", 
    RowBox[{"x", "\[Rule]", " ", "\[Infinity]"}]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "916a2f80-d88e-4be8-ac2c-5290159b3cd8"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"\[Pi]", "[", "x", "]"}], "InlineFormula"], " ", "/", 
     FractionBox["x", 
      RowBox[{"Log", "[", "x", "]"}]]}], "=", "1", " "}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "386c8f8d-425e-4981-bd2a-765abd3e8ebc"],
 " \n2) It is easy to get ",
 StyleBox["The Noise",
  FontWeight->"Bold"],
 " exploring PrimePi function\[NonBreakingSpace]: ",
 StyleBox[" ", "InlineFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"\[Pi]", "[", "x", "]"}], "DisplayFormula"], "-", 
     FractionBox[
      StyleBox["x", "DisplayFormula"], 
      RowBox[{"Log", "[", "x", "]"}]], "-", 
     FractionBox[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "DisplayFormula"], "1"], 
       StyleBox["x", "DisplayFormula"], 
       StyleBox[" ", "DisplayFormula"]}], 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"]], "-", 
     FractionBox[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "DisplayFormula"], "2"], 
       StyleBox["x", "DisplayFormula"]}], 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "3"]], "-"}], "..."}], 
   TraditionalForm]], "InlineFormula",ExpressionUUID->
  "509e9f6e-ddb4-4646-aa5c-faa727a79fb6"], "InlineFormula"],
 "\nWe came to\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"\[Pi]", "[", "x", "]"}], "DisplayFormula"], 
    StyleBox[" ", "DisplayFormula"], 
    StyleBox["=", "DisplayFormula"], 
    RowBox[{
     RowBox[{
      StyleBox[
       FractionBox["x", 
        RowBox[{"Log", "[", "x", "]"}]], "DisplayFormula"], 
      RowBox[{
       StyleBox["(", "DisplayFormula"], 
       RowBox[{
        RowBox[{
         StyleBox["1", "DisplayFormula"], 
         StyleBox["+", "DisplayFormula"], 
         FractionBox[
          SubscriptBox["b", "1"], 
          RowBox[{"Log", "[", "x", "]"}]], "+", 
         FractionBox[
          SubscriptBox["b", "2"], 
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"]], "+", 
         FractionBox[
          SubscriptBox["b", "3"], 
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "3"]], "+"}], "..."}], 
       StyleBox[")", "DisplayFormula"]}]}], 
     StyleBox["+", "DisplayFormula"], 
     RowBox[{
      FractionBox[
       SqrtBox["x"], 
       RowBox[{"Log", "[", "x", "]"}]], 
      RowBox[{
       SubscriptBox["noise", "1"], "[", "x", "]"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"bf21c40e-fcdf-4c6c-a730-c65e5b698a2d"],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["noise", "1"], "[", "x", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fb346f5e-0f98-437b-a0e4-0e64f1cb8dff"],
 " is (as function of Log[x])\n",
 Cell[BoxData[
  GraphicsBox[{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
JwXJoauObHy3BNyfqunE+0K3Cew5T4ejVk6OnJ1VuNzg0J6Vi2x+C9ZvfKeR
im+PX7V4c4kOF38pPyD29+Md/xIu+lyhQ2RoJu1FGcY7d5flaV2lQ7nOVv8l
i0q8/dKf0nXX6cC1M0yBJDqMd1JOzNbdpIOLotvGx+M9uJS0RfqONx0md3Cm
fFTowyZHuQ8c9qMDeNSM7piqxuk/ee0EAuggvM6qfUmvFpfq2z1tD6KDJUdG
ET8uxRk7r+U9ukuHrfLawyu7s/FQuOHQ8ft06JDZ4xK9qxhd2BjOueUhHQ4Y
bVC5EheHPcXX0Qce08Hv8GVFFb5szGtRf+HZEzqQJr9OiW6Kw8nz074WEXQo
e/HThcuvFpV+mUqWfU6H2hfC3Eo9bci/QKd/PJoOC31CvAEP+lHdZKpAYhwd
Om/8DRyU7kHdVAMFu0R2/TxnuIsba9DzBEETcjJ7f/XQto6RSJTDQ/L+9JIO
hy+dmJz8aI0ZN+5EvnpFh9t75/J6twWi0qfLFRde04GfSDsTPFqGL5jzf1PM
psPm21ynqp1ysG/nhW3fc9n1dLodllqIxd59Y/p5BXRgMoqSDuekouMjau7u
xXT44Pts7Q6ci1xeO4TsLqMDOSZxeseHTqSrJF3w+w0deDX2Cco1dSHv6x/f
l1Wy8fxy29hT+C0SyLm6xbuGDnETArp27PnSpu/O/n31dGhoWzfcvbcbXff5
eZ6ziQ5zabk0P9NGtOZlQlBtCx1OPpGz5gnuRXxOkBnUToc1o6q3t5V0oom9
Z94e7KLDWZ3nQ+tutqPyuBIh/l46/JLkcxeLrESjk1yabf10WG/j2UdwKsAv
P8uceThEBz3ZbLWV2Bzc+PPrzWOjbD/eW837zV2FtCK3x28ep8Ps7roq6e1J
qOzezea+CTZe1/39Vj2ScJBn4K+IKTocPLT+dA+xAJUObJEx/0iH53e1GjUk
2tGOEqkTMp/pYLWd3/rWUCs6tYfiNzZHZ9/v7hcQ15ShvP/2R8Z/Y+vZoTVh
+k8djjKp6rD9QYcXG57P3eIqwbWvOGaIv9jndy9HW/F24uebJ8U/LrHzzGiz
hZPvOA7OzFFP+8P2k6flgPCOCdx/1cnx/Cod1Pt98Uvft7hEMD2KtZYB4r/T
1pVrN2Bjnmt53zgZMDBUXBipXoXXdcpP5nAzIOj4zI2A591YezaHx20DA/7Z
s1qsBKvxSLPF7l38DHDxDC7Jvt6MpXbFGy0LMkAEV/xh6lYg+5+B90uFGfDs
48oem+Ai1He/LsVzMwMei8d2p/2XjHq5/nYjMQYoPnCT+q1SiD9sSufnkGRA
VL1/3KP6dCxD5VOukWaAc/1jbJfchUl2l8wCtzJAacP5nZ8yX+PstQmeuvIM
OLDidhqZ1WAfoXO5vEQGNDDf3hbSaMC7uW4Ot5AZUDL3I/b5wkMsmTv87QGN
AeMMJZ2YyhzMdyB/myGT3W8LsRK9jcBeOStHRbYzoCtsciqmqxw18t9z7VVm
QJXAi50JK1fRtZeuiU9VGDAR5Sl8xgQjn1+GFWa7GdC7bjbqSlg+NhxY+iWl
zgA/X4EbfrcaUI6syca3exlwQaKkoFb2LjZ1HN0dBwzICDv3YcEnA9E4pJ1s
/mOAf5DdvV/3MIrltb5DOMCA0EWdpQ/7U7DmnCL+oMuAyw+VlSZrnqL9rI6+
l4cZYMxXPvdepAAlzZ4UcTrKAI+LXouNSs24jf6EzDRkwOpOzveHBe/jgtQV
46/HGWDI/FshJ1qPmmi2vtkmDCA9czl9TKEbyV6Pe+FqxoAv+tXOy78LEceR
r50qFgxIO8SKlNlYglHxPOfSKQYs5+8PFDQqw0akY7Il1gzI2crBLdHZjF1A
4tDNMwxghOb9NCI34osbm301z7LxaKZHubbEoc0jx1LXnGPASMDdrLaWSpxh
crSr6jwDuMc410WLVWMlIf/FW84MmPO59m9iTQ/W2doionOZAeatN7RLLndg
DzOfoxvcGOz7+RnlpCfvMMfrGrfmqwzgcpegR4eM4m/lac/uX2eA4MEN2vqf
urDYKE+RvicDnu8+sCJQWY2tG33eCvswYKnn/MUBbkcskFu6vsePAQrcgz6Z
q3mY+eqKUngAA5KJmvGKMnX4zv63Dqa3GRDC934H9+cULP/zvzDJYAbsSNDJ
ua1cgV97Jbweuc+AJ0qPLAR2YhQwKjMa85ABqk5NHt0JjSi/WIvLOpTth+pg
nVqzLPSFp05VIZwBvxVDXpqbZqH/xiNPTEWw8UnAvYqL9ehyxZmrKc8ZEHNH
LWSPXixSiHVJcoxhwJUH1kfPiaUjlZBv9fR4BgTStP/jacNoXNOW40siAxYO
Dme/Z0SjsJgpUlYyA5iilLWdO7pRW2iK9uVUBkjdevHhOSpFp7S9z+1MZ8DQ
6rYpI9vHONh0JvnXawbs0Zo9k+5Vgs4cmG4pymbAmRD6efmPhdg/ZM/n63ls
v7WXXHqSFoH/HTTcuLeQAQFG4UfVVsoQ59Fh1X/FDMhUiFjxOlGFOsJnzleW
MSC2yc/pilsfKhwciPTHDPgvarmv27IDSf4NL9pfxdajnaNIiVIxqjlInOGp
ZUBr4qm537Yj6GmTOmdTPQMqu8onP+gMoLW/7Hbda2L397BB8OGDPiTmE29+
tJUBb9q2/aDv6UDB3x56buxggL7jHyvFqz2o0zggrauLXY/SqciFr/XId1J6
NKyXAZFT4Xrf/tajvUFVf00G2P7Q9klwnQrAhxo+0yWGGbBm5RbHqnMLCr4l
ajA8ys4Ll80H9ZYrUU6Y8tXocXa/Lfo73lqHo9dOHFGnJxmwbYnGL3vtBt45
Q2re9oEB7ie3unDq5eA1+ffmJj8yID/uV9T5m/VYpNxpW/JnBjjRdtwzo4Ug
Zlu1vsMXBrS8MDutsL0B71p1d6XNM8CuQKX98XQJDjPqiJj9wQDtrOW0l18a
cUpSWMnrXwwoBaL2ouMwFvSqeu+yzIA2XmH1KkoXjurh2LRjhQFHp/PqeU9U
4fBrm/curDLA1JSafXyqCrUONVsVrmUCVbjNWXXvK+RpN3j72jomFGaszqXe
K8czfb8y1XmYILs2+5lgYD3WZN1793cDE0zb/A9HXOrHJ7mKeCr4mdB6THBb
8qceHNc7xvQTYsLQk9dGh3kHMS5TOK29iQk5LfGMblIdrr0yGcAtyoTafdcV
xbK6sL/t3owGMSZMDUxeV3WuwaXRv9vvSjLB2k6kXOpVBU4UXlg6IsOEjzq6
vrtP5WDay7fyQnLs/XjaTBZuNWN+Pm/dTnkmbBaPvnvV/A3moV64Ekpkwq8H
0lGyc43YP/xkvDGFCWcfqpkeRD24I1WwSYzOBFZ/jnHdyU6MXceWBplMcBN5
eTD6Sjv+YCwlEbWdCenal+f94/qxjtVZ7VM7mLAk/aungr8NT34l28upMkHH
O17vVnsx/mIV+XRiNxOctDVfPloqxDhPteaFOhMUTqk7VTjn4knG2Ad7TSa8
+XYi6l15OSb6GolT9zGhfpQq5jyTjRREfFU+/8cEq0OJYhd4KvHoxnK7jANM
SP1yYbSndwy/LVYOdD7IBH+iUpJtcQ3+wS+RqXSECbf92hRFH7XiLzPiwz+O
MuE1r8GI4J5yrC44v67AkAlr3HrsFY4Xony1dhUPIyaQxeSMLvtmo6j/pE/u
OcGEBH+FYGJiNTrltOHGihkTQDm/6SduQBt0MzLfWDDBeKfF4m+/RvRr1anP
5zSbz887fUSXy1Dv/L4lLRsmXLHulwj+WYP+BvyQ4bJjAjGs5p9IWg3a+kPA
oP4sE3bHarZaq+ehCpLTjTvnmGDAuVwRJdiKFuH7s8MXmLB1W43339Bq9J9g
Z42ACxPurlVq6omqRQvPXv5ov8yEIDGTiBffOtCtS2WbH7sxoajhn8OxU52I
I7Frr5EHEwKeebqus2pD891PHLfcYILLUPtoxY1+FOFZ93jAkwnbP872vLLI
RWeLz1Q+82GCcndXwlWVbvS9SGDSwp8JXlb4xMbYZpRIb+PfGsgE17oY/vb4
ehRtbqD27jYbf8ss72eJr3GLg5FtYjATGiZNGmhBBWiNQFaA3QMmRD3dznk8
JhV18rbkkR+x8b938FptWBhqkXv89lMou5+JIKGWI3mIlj/591U4E15JSs6J
7q7Af9xbSBcjmRB+WLwntjkLqT/4dnx7FBMkFt2vdDedR84beH2+xzDhaUpx
f8Pdu6gm/mNSXjwTLvD4r9Xm78U8jwtb3F8wIUz0RIahaxI2rHT9szuFCR9c
41xL/4ShhheJcn9SmXDf1r9G0ykdOTpZ65enM0Fp60WrM/5ZKJJx1N07kwkX
6VzfzrfUoAMyulH7cpigufeTVOLOMnRiYE0DZz4TZlzm9pfYduPNmoyftYVM
6Ly05lLgvlFsOhMqdbuECXmGxy8fSevDtscbtA+Vs+tz71iaWW7HDpH3z/FX
sPmPMBu8rVqBbbKPhrZVMcHhdFb/E8ksLD3RVPywlgk1Xlc/fxt8iiee6r4/
1sAEsZ9ejk6shzh41E9AtJkJPwsvZe0SqkT5doe297cyYazqs22eewXadZn3
VGQHE3YMf7OnX2NfwQxYgebdTNA6FvTitdArdFKz7LVMHxPq8n8cDF+Hsa/D
49GxAfb++pV6arcy0VY9S46EYSaccU7wdNCrQF5pf5ln3jLhYOnA80CuTvRr
vYYB6R0TvgWrOzZqV6DHZiXXPk6y9XXkb0HJ8fvY2YKUlPaBCcl6olsUhHLQ
9+j/Ws9/YoLNip/3Hb9I5P48fJE1y4TqmxGy/Q01aAa/k53/woT8gVoPc88y
ZEsI1s2dZ8JVkV0Le039sNYjI2e3n0ywOMl71dQsC++7Exixa5EJSQ+DZ5ns
eZKUMfFmeZkJ3fLi+QfbBrFtTth06QoT+nlO9r/bNoYTu16Ief1jwsOccy9L
H4/ih1y3EXCw4AbJLP5S9ij+ftP4DAcXCz7bqygGj/Xg9GKZJzU8LNjx5n3m
Eqkf3/E8VRTIywLPr7mmegMt2KdAalRXgAUi59fQo03acFagwHq+jSzoTtZS
OKZXhw9+ndrRuokF5+JWfln7d2B6znnzEFEWNO64xQOn+3HDuK6/oTgLAmOn
Ms0ejmCzP2uyRKRYEOVqJntV8T1eCInu6pVhwRcltVt3hfqxcvQSR4QcCzr2
Z/2U98/BlSduUk4qsOC542GDedtqpKCmaChNYoGjXvog5VwVqs5vv/qWwgLn
68HlzxsGkP1cTFwcnQWT304uCb8YRJsCcbsNiwVXvEfCjPaPotKqkF8EJRaQ
tlm9sPs9jM4I3JWf3sGCdV+L7Q8/SEd3+en7U1VZ4OtQK7FUGoWWAj9fcVJj
QX5qhna4YDc6clbuGVODBZ8erXtv4F+PLPk+Vn7VZIFD4HMjB4FLKOUi53T2
PhbMVDUlVPYVoZ8dmluuaLOgYfeAgdzjTnz5tt4+VR0WWBvfd4zoacek7fy2
SwdZcKC2P8dubSUaiP3ysOQIC/Z+sFCSTG1E5rW/c2/qs8DE8zSsWufigiXr
d5rH2Od/Vzyc75CEz14Q4VtrzIIfnIWKpgs1+HFsyM7qEywo/BHUJ9h6A7l/
TjANOMmC/u9fkuyXsrGcymF/HUsWvAsa3z0aEYGLf+zO3GDFgjWvpL6qpNfg
o7bK/c02bL0491dXt6Rgjp1eq/ftWLB/xCLQVxGjiyKHKAYOLAiaOi4WGlaH
nDRP6G9yYsHR4LvB5L9VaO10jXvPBRZMC/+YGvvUgvXWP4sPd2HBmZdCan0P
s7GXQliTqSsLDmZXR62sb8Y2Jek/Jd1ZsK+MwbX/fQ02zU2THPVggeW6d8GL
bQ0oye+uTuwNFgxfP61lc9oHqzv9umDtxYLXVi097eevYIH9DREKvizQyg0X
ue/ahD/dLK6a8mfBT1cP6RtOpXiEHvkhJZAFh16Jy105mITrjvVvOXeHBduV
LXrQgWzs3uGsybjHgiOq7pddrDtR7NzA2S8PWKCjGB6kPtGITIv77mc9YgFt
ad5xurwTlbnFllwOY0F55BxrlTyEFL9qvtv5lAWxNjeSZQd6ULB3C99iJAsu
LFmcCvs8ivh8OVWKo1gwRNqcULKlBg39zDtxI5YFL/xJHSd5s/H0FZWAvQks
6OyrpPa6tGN3P+3Ufy/Yfmm2zCpsL8Q8Cly9lSksmBUf27uttQJdHaj/45/G
gt2NLXe01BrQeyUh8oEMFoTucTOu/+8S8pUKM1yfxQKZTAWjytXriK5IdG/K
YddzbUy2bVM2uiEHSffyWRDx1/Zhv3QbojorNx8tYkHq4G4xmWP3ULEKY35j
KQtEh9tv2o14o31AkOsuZ4F9qeawbGUp3rs9VftJBQtu/WgJ+vkrETeoFl08
Uc2CJznP7zpVVaIZUe5IiTq237IJHF6CtahE1/LNcAObL0eVv2crHyPzPIfp
6GYW8O512uuwWI04EytErdrY+xVePbRJpxSnbdfdK9/Jgm0bK/bLDGXgRaVr
9u+7Wex5+WblpXdtmMtU/F5yHztvRF4vXqT04MML5wscBllQJchv4S40gH8p
K47TRlgwGGWWfEW/D39d38k795atryO2r+aL2vArC0mlzHcsUH3kzmWxoRvL
2PGbX3rPgvcfrxSon2/ApVG2/jumWeDxVVLlKrEXd6y9/GrhEwvo/97u31nQ
hU/svtFTOMuC+OIr/GX732Cuprx/176y8yZHtLZOoxVXKr8ja3xnwR6+AxWp
uj045uPOo6s/2foau2p8ZWQEK1rTrlcssv0Ququ93asfX/v3P4arOx7LL4oT
kqSUrBIaPyPxTsnqnoyMioiQUjJSKiOKkk0ho1BGRMme2fPae+89G0pFkaTw
e/58Pu/z3nvO+a7zHI7zXCX8hy5z5+GXPjxt+qpBZU0KKljOC713GsRr7b4/
NjOQoGHp94N1q2H8dKBHsGkTCTL5N/+O/tSFy433qgSwkKBr3V2I42MPblRL
vX1mCwl2Xl3n5ZPuwy9uHo3cwU4CGUOS28HHA1heJ6Cii4MEl3V5LITzCb0s
xM6FcpLgQmvRbkf7UBwuL8h9nosEr+18q5iXYrDW4JA8Hw8Jqg951s2oZ6AA
qo/lMB8JGEzK2d9FNKM9MSPBL/eSYN/cK1N2tx7Ez/GkyESQBNoWWk8/ohB8
PFpuSng/CehGrQby79PQeKH71pmDJHieHNaoadiNmu6Jkt6KEPUy8hwImG1D
wrpqxtfESZB/lNepNn4AFa31e4kfIcGLWqv31UdHEX+/ScqcFAl+C73ad7ef
+P5NZ+rOoJAggcc3tepAGZ4fP7BuQyfB6eOx1/6CP5qNdBajypBgh/beJ1ZH
a9Czies6S7Ik8NiSrDwsnoMOeJ52LlAgwfwMz5kGySa0R9cuzgmRgFv0G9oq
W46uZ75olVMigQGt5LB5Uy26G8+y+E+FBGViT9O1qnJQqtGwIFYjwfbNZvIF
1rlIhXJd1UOTBEfW/PbaGrej2FvqN5XPkGA5mHvELKQFRaXMRrCcJYGGPcNm
ix8Y0yZzKht0SdDqO1M3eLkW2z/f9tlPn5i3iR872EZhG62NnacNSbCp2SXi
e1gbkpbxk99uTALD/dQeDfd+VKr32qLzEgnEmIQlW4L70O0hroBnV0hwJem7
6uC5bnTipWCBnhkJ3rXvm6d3dqJQ+0ujPJYkYI1SalzvbkcHgz+xDlmRwCLy
UukHlmhUuemaVLQ1CTgo1vsSlZuRHGo2unSbwGeiTgEuDKK3KY3eQnYkOCR/
45bT5jr005CUOnWHBIuOkc6Fpa/QVsWcnjd3ScATc0ukQbITff635Z+FMwl8
YrZlH2auRq93toqKuZAADstmd6VXY7VPhTpfXEngoLbX3la/HOcVOTinexB8
1vnFEZJfi8/zOry57U3w//Gx0DvcPfi8vFMz+REJDkgNnIjkasJicSM/f/qR
YPqi7psb6eP40B9BgfwnxDx+71EwezqKCx5WqN4LJoEQX8fKyFIPjmKl2sg+
I0GsQmhFy55BXEj+9uJvGAkYpdjP9xu3Ym/by7j8BQkeVf3Kdu1rx50DQZ/d
okiQ9Wy7bzK9C7smyu9UiiFB98jJjmaJHiyZbSDHHEcCa5r5ssq2TpypRTav
f03gE34kvep3Ic5x3hH0+C3R7zsFNeeTbfj4lHyhZjIJVo/xGQ7dq8MNrH/G
t6WRQNFypIRjsQoFGS9v6cgggfvxF99nqSnIT3CZ9DSb4JOsupPs8Xr8qyvc
4FwuCV5yBVzQ/ZeP/7IbenEXkOCUzbDGc5FaXP8gLmWgiARudjqhlXWVeIdX
WH9kKcH/xtXkv8S+fcdc659xBdHvghHHa0NHvNWwRUSwigQbxhxlj4NKsKpW
zdnJGhIM7uxaI61XYwaSovPrehKcEGnYeoL4Xo/kP/7KvIkEQYx8tSeim3DD
8KFmkVYSOO9TvjDKH4y/dyUvzbYT82pnm633KsKbNIv3pXWRwMlMJjZpZwMa
UFVRudVLnBf8xOepVDXqNzC3IQ2QQO+CX/BD7jKk+6ky/McQcX/0tr8vvybi
lV0XK3JHSbC0n0nENzQf2ausf3KcIEF8UTurjUwBCta32XlsmgRG8eGBS3YZ
iCv+ruzqexLU7uDQcPhRjGqSO6+WfSL03mak4kfqRuwJtCeuX4j+DzXnCT8v
RZtS9PPgGwnkVNXUskay0ead3WObFkhQFRYTOuPVioOatFjrfpJAFTfGp6+1
4PXfdqRHv0iQ8lDKKzi5BSdeLjTUWCH4pOoR+NqnCyt/z/dg/0sCncUsgaHK
Ybz8oyO9bY0EVqsTceVXu3GwoPkXNQYyiEhQl0GhEe/f/G8tmZEMOfNN7kvU
Hpy4TNq9lYkMtYzf9waUt2HLaTcxa2YytOuaJh+2eYxE9bcqtLKQIWNi+UZp
ZBLmpL3XlmQlw0YQvvC9NhWJT/FZBG0hw/V3xqd2VDkg6aAtzvNsZOg+Zjj/
racK5/v4BZ1lJ8PvNR5FJblafID77+ucbWS4eiul4PatKhysfaFw13Yy1Gcx
SCq01WNJjd7mOzvIEPw3fl/lbAIyoglP9nKSgffdvehLngnI5NzLJeldZGhz
iTNzlk9HitIUthdcxP/Xu5VuCLbilEeM+1Z2k+H2H6s9xxaS8DPGJKoRDxmS
ekT0y83q8LnTDaolvGQw+vxyU1tyPRZTTbuwl58MZ9KEWU1vFmIVJQtblz1k
UDxU1iWtkI08Qgy8x/aS4ZFLtu/0ShlyKPsXcXwfGbZeFTsZ092GXrqbZ7wS
JMMJd0bplxVDyD1Ts5pBmAxqCU/5nqR2og+Kpf2m+8kwDDFc8Vc7Eb2l5nP1
ATKcWmQqmDTtRpdyTDYOHiJDL33D2+rnEOpIV+Xy+Y8M86oHnBonBtAX/hrR
jyJk+CQqNHYb+tFTjQF5NTEyDH5JK4CHPchhoVgnWZwMs2kdj27cbUG4h2zB
JkGGabat52fUS1DGDpb7N46Q4b2NQ+/J6wno49Lh4BZJMpicUftvKbQasf6I
eHOERIbSb8oOMn/e4l3mA4WBZDKkj9NcLmQ0YWuaVet3ChnK5JXNMWcOEjWW
n9SmkWFnd1pWwsFEdHlB/1c2nQy6M/+d5F19hX7b8bHtOkoGviWGq5SHGfhf
48N9d2QIvHzs9CNti1Db+Xlq7zEyRLFlN30Trcc3A9pPSsuR4UOKwwdL9TC8
3ZfZ+Lk8GaQZ/UtLTlXhoHvzNr8VyPAxRff1dEQufst9y9vwOMHnkLiZu7wx
WNu/P6IYkYHFQ93vC082uuTjlrHnBBkSKxrDxKeTEVPgiaoHSsTztQzl5AtN
SPTueN+oMhkaRg/w+Du8w/2a4l8UVclw4Xyr7/WMCswa1LcRe5IM+vctlboX
m3D6WeXdDOpkWOlQ8IxpKMR/qbmiphpkuMKTxrT4pQafaqAqVmuSYXWPkIw6
XxUuPV909uBpMnAIdTgMNQ7gzSwnLbzPkOHi4NJSxtk6nOgS5/xBiwyn+365
BXFhLMeqG3zyLBkqdLSwJa0J802WvEnSIcPPAIMDcxWVmOUXQ+GWc2RQ+fWD
9XBSFW5lXGu5rkeGy5aHaSMVjfh0Jcdksz4ZpDas3N8Fj2Me1YQlCQMyPN4T
FLA7dhRrHulkCzQkQ0GDyd6uv5344Yq64HcjMuS+p7x8e7QLMy3vpWobk0FT
bFt5bE079hN6czL7Ihk27WXv9FWbxN/Lx413mpDB9a6L5HXnKWwc6mprf5nw
D+WpNK4LY9hc0MO75wpRvwK9Sk+jB1dmHY6kXyXDkUvOY94crTjw238Z4WZk
WHBV64DYCNQzkF61bE4GoZ7iYY+FeBSzK63fwJIMCYNGb7mFPLBnXf2Xomtk
iB/Z5DiqHo9O75HY4L9OhpGpn8VHOp/jTvMSrgc3yED7ZVhT0lyPPJj1xEat
yWCu8jN4b38n2nK3V0HxFhmcbYxWkq0xCjbn1om9TQbZ8FSHCQk/xNX6n+WG
DRmEXVX+VccVoS0usfev2JFhlG1za/emAvSq0ye4yp4McicjAk/4dmDWXvs3
BxzIEIjtEi+aR6HDgWaFXo5EPb6vEq+wV6B5pjOt7++SoaMz/WsReo4uCeFJ
VScyhGtqeAaItSAN/qRfic6Ef1xj8eg8EY8W8kLZtjwg+l2bLb0ekYdN50MF
r7uQ4Xyj+UZiTwOu7iDTmh8SeHVaRMckBGGm2X1qEm5kkPElmzbWNeDt3/Uv
PnEn/HOb3PJVVmNcrSNr+82DDHu5xLTKjyVhl5kiby0vMjyITSnBo4046tm9
yCxvQt/Wk8WDOs6InMuTyelL+Nu3CIYN8wrEwH602u4RGUKPuzQnLDSgSd7g
/u7HZDh8/oZGBFsJOtvaM0fzJ/ykXStkubEeLQpaboQFkMHQrN/TnlKKDskd
2r38hAwaGZ8GQ2wHkTh4ixkEEXqKtYktMBlFk4FiikXBZDgYKPgfn1EdkpSP
0uF/SobWHRzfm+QK0M/d9pb3nxF+zF7GprgnCwnVUx+MhJLBYKvyumlbMzq9
yyRYIZw4z2Tm+ExpDFo47vEm5jkZ3s7FSNkLJaGbqweK1l+QwTL8YBe8KkHx
f4tbL0cS/A8NOSsS3YGYzWunKqMI/s72DJwJKEXcOP3X/peE3yYxzfAJdKFu
659sXjHEsz6vst71WvRNikXofSyh99we5xsFbSjymwZNNY4M/23kuRccqUHr
XyTVE+PJwKR+56iCXRe6w7z7IusbMgg+PzridM8HFRy/bGuVQOTNamyXZUY9
euJ7w6fpLYGXe9Idm5JKbMkXFnk4icDfQ8N0gt6K/9ClMgOSCb2oeKsP1qfi
4qCg6q8pZGBfF3FqnahGNbabBs6kkeGGnfKfnMUKvH2uay4znQzr2Y93t3m3
4S9spxg4Mwl8JB4WM1sOYO23WbvtsshwV9b29yDbJDaMUhDvzib84l0h601y
Dy6bET9Oe0eGFk6Hf3NMPfjE5RadsFyC3/LO394sVeID5geu/coj+lErP9ki
MII30gIfnC8g6mfOUH/c2IBHWUVCCgsJ/7JsZPAfvIA3R/+XwFdM7A/3FKpz
CwfxtcbIIucSMgRkhX8MfNKJTz+NbRsuJc7TuJq9Mh6Ld0m5TsmXk2GZ7UNj
4zDGSUOCyy8ryMCzZjfQXVqG1ybStq5jMojKS8mRnOpwRSRd6HIVGUj7cqve
/83G4fdqaZXVhN8KnOXd31KNN/Gaqe+vJQO66rTRfdEDj5/ffcmzjgzu7zig
+mwSypdYtZ2pJ/zxz7FsQ/kCfPRDu49KI5F/CiIvXlY340tnOiPfNhH1q2Ub
tv59h6l/0zM3txB6k3PNf3w7E1WS79dcayX0fFJP3lY1G7nHaA00tpHBrnjs
/j+GcnxprmFOvIMM+2yu/TdU34zdNVsYAjoJvGzVA7pI3XgvkyX31y4iz7xa
Bt7otmOUf1/8TA+RhydsE3+1lOGA1FLFzF5Cb06U/k9/8jGlqUd3Rz8ZGOw7
T5o0lKLJd78sbQfIMMd4LCBg4y3Spb140DVIBg8cbnhepxlf1fYNoQ6T4RzL
r04bt0T016cqIXSEDGST17k+d2MR5pwqWhol8qrLTXWSWoM1DO626Y8T+vq1
uklePww9NlSaLpgg/Ontrx1bF+LwTbr8Mu8UsU8sDUoU2eSh/cb32J2nibxn
HzzX0/UKNRkbCA3PkOFreMLb9+5B2If5E03+A5HfQqef8tFysaFOv/rLj2Tw
LhHYeetEPb6yg/PS2icyOO5dLHP50I9lDzbamXwmw6VI6dyShUr8MuO9D/5C
hkbfB5b32rORfmVQlPBXMujY/n7BWVuLGOSvZXl8I4NT7APvhVM9qPKcds30
dzLcdyefvlmch76KCA0qL5ChS9FuXHtvGNo1kf014QeR95r9eTPUFvTSwYBx
8yLBJw7XlAVaAjrknMh9bYnQc8ShHJndmVhW87N44y8in0KvKztZViA6j+Vx
8d9kEAtyjBGYK8DWvy6d818hwxMWdY5ydV+cPhh3be4P4T/T59kc69+h7QvC
Lqf/kuHs39lduaHh6N61yyEZ/8iQt91WqyWnBpGnlN5uXyf2V1KCc4xiFeoY
f1Zss0H0N1Xif0q/FlkXSbZ3MlCg6Za2iImSPZ4eeTxN2UQBh6tf0/eGVOIq
u8blZ0wUuNllWv9E+h0ezS5hX2KmwKoGifekYz6+c32fsP5mCrQHp3hn9zXi
PfqF9AJWCvQWdrm+tK/Gnw8uqPOyUeA6D0Kil6owZ6j3JaetFEg8aRJp1RSI
W4/12w2xU6BNiKZxRaYH9ZAifOU4KPDDUKH9lnc/ElIWiY7eToGvW5fyDqn2
IFEZr6x/Oyhw2jULP9nThRL09Gov7aRAXe6QoPN/2egao/pgxS4KDFwbFLDk
TkLcwie/Ce2mwP5W3gR5aiyiJZ5j9OCmQEOxKKkuqwsV25zmmeahQH+rZ+y7
1Fz0/mvfYWU+ClT3NBQm3sjBantHjifwU+ApyyHpTtEobD7idY5lLwWSj20S
67tQg+SLOa0sBSjwYOv6/kRsgZe3mro07KNAuF0hNe1cLWYs+B4iJkSBzdaC
MlJBeYg8FPLWT5gC92drTlo65yDhsb0lX/ZT4M/bLHP/0rdowdu0/dRBCtQ7
8rC4sT9F8rtaptMPUcCUXVlgu2EaOvSz9DeHCAX+Kb86dHi+AT941shuI0qB
9PvrNK7EdOwW6ybcKUYBUrHjqvzRFmz5YIs05TAFDLplacPKDsg5pFDjmQQF
xhtbBTxu1WOr/JMmi0co8MrgL6tOZy6uy7hlrydFgdeTcRenjP1Rtgnbo3wS
gZ9Mrrrikyz0p7UxmodCgSibsku9al2o4kBD1j0qBQLizGR3KmWg0AKL2kEa
Bfa80j8as7MJVdlqDMlKE+9fiXkjsZCPO+d8vkUdJeoX+21vVfEcr70fZfwn
QwFUb8OmfrADK6re57kkSwHe/KceJlmD2HX3yuEKOQosMo6ZtYVM4BcBD5CQ
AgUEDZ2m8zcGcaDXf3ruihToQ4J53HbTWOfuI6up4xTgV65n59b+gH30Tj5U
Agq4u7mkSM2O4n5xs6dvThD8kJzjveDVjG9oMycyK1NAvIwr3JenG/+Yyiix
UCGezzgb25s/RM4cM+31qsT728L1Qq7mYjOukhlRNWJe0fUzY49q8Zk50ZXH
6hTgsg/f9k2pAlvr5277okEB1s9G3Y8tMV6K7hE+dYoCIrSd7VYWzZi52l86
/TQFDuy7kGfCMYSHbNU1ObQo0MzAsjgQ3I1x5wOT29oUOCPFqRw62YNnI/nu
dJylgNSgyt7R+iac1+j7iKxLgZq6Q4a5vL0474XUy6fnKBA8lRkWwjmJU9Cd
7J96FHj2nhb7QawfWzyk1507T4FCkr3iYMAU3lZzdijPgAKfsp2XXJu78fn3
At+5jQg8CsXIimdVUbmd/aZ7Fwj+6SRnDN7tQJW+gryDxhTwaMot6ImqQ2dS
7kjIXiKelXLd76xNoNf7pSHKhKg32D3rxVQX+t6Rpff3MgWWlEtJAsMjyOvn
wesXTSlgrxb5/NP2XqTw7dzD8qsUELKrc99cOoiiLBaeCpoT/GbeVRvuOIR6
rXMT3Swo4J9XuPvM7lF0nGG8ZNKSAnIjX+HKmx509Ld/xwkrCpT8uJ6pVtaE
2PDSzOvrFNinXeTmkNuALCLyV5isKbArWPeFVUov0nvBxGFxk5jPzJen6hJj
6OWK7f76WxSIfXDv9KmYSWTIw3NU1IYC3x4Kb+eRGEbPYsM0H9tS4JDi48Cy
mwNo9+t1k892BD8fTPLM4R4ULH/1juYdCrT+eMhpHDeOEkzkHqc5UCC+cuRN
TvMQOns97eW2uxR4FP/b5gWkoVpL8Zxb9yggwP4pX+tSHrpjlVvX7kQB/WzS
4yCrGvRrXmWYdJ8CHaJP2bQWanCYmtX3kAeEXgXqnwy5JeD3fN83/XQh+Lyh
HfD0Yh8e/lDHe86V8J8VjiJfwUG8zsB8JM+N8M+zCsWeXhOYXm8N3B4UyNi1
Zjf8qwP/Js3o3fWkwMjEBk4oaMHSNoXXB7woQB1qCP7ydxD3Oyw+POZD6OMg
X/SqfwNuuZzzLNKXAj46d96eK5rEuYy/E1cfEX79YzXj2UIXPjFkXWrsR4Gj
gl4bFTVt+PC1qY4yf8K/anjVJJea8KRd4Pt9Twi+BYXfznuchEPz5P64BlLg
2KNA9g2+NyjfKYdjMojwh7Y711sYHBHDqMCBEyEEPj93P6l3rcALLm+Ovn5K
+PvW4e5qxlq8047pFFMoBZz6W1K7LoYR30f4snkYgTdd9nJPQhnSFTniUBdO
gXsn7L/5m6aiTak1j0VeUKDqniZz35YEHHxFJuZRBAXICvcDdRLbkOH0i5zZ
SAr0WGSYPRTKRS+GftRpRFNgJYOLeuVEGTrklTmc+pICwpKrC/futqE/QTvn
2WMpIOYo+GOcxRcbaj5kuvWKAuxr7fHzugVot+M8b3scBeKsnJ6JpthiWkLl
EdJrCpT3kN/FfujBlEuHT4S8oYDOB5ZvPsmjmHfKVf9HAgV8U6dNhLYPYQ8B
9hu6iRRwZX6teTCU0L9liWtuEgVe0OUCX8a248s8/KG7UyhwZ3+NmUZfF/7i
VpvkmErkESfnX0uzATxgqVTWn0YBees4cTPlNnz9YmunTAbht8Vy2WZG3fiR
guKHiEwKzM1CTQJjPmbzqf/zJ4uYb/42uUebSnGMsMJ24xwKjKavnP/WWY5o
rQ0Hyt5RwPPgdpdUSj5i7Dwqsy+P4Mf9IxOG95vQNae0U675FMDHg0yqz3ah
2SrlKxMFRF7+FhS6sN6IlkarHaCIAjbTxWPnf1fjT23IL76YAk9WXB9l3KnB
Eo/aYjaVUiBtI+wpmV6BH3b8986sjAKdx67Atc6XOLU9pb62nMh70SWDSkIP
+523jfyHCb+55a99RaYWt9xLnPetpMCUrb7mlvREfE/hEPNsFZHnM5l+si4V
WNvIi0+jhgJMjy7MKUnX4gN6nJKptRQo87O64srej9/aV55gr6fAQV5mvqRX
ZXiJlX7+ZgPxf/t/FvLkZuwimX6jrZECOcZbWRX06rH1md1uUs0UsDQVq3fO
q8JjywmhwS2EP+GsO6NRxfjIbqXkhVYKVObEY1e5MMwQ1lqm004BK/GpRo+z
4Wj5/oGudx0U2Brxm99uqBKp85d94OqigGPBTNMn/iK0dmj/qkM3BT5wGLds
ut6NSJ5V2/t7iLxQOvSwWakB6R8ROijTR4HUD8JKW/n6EP+3eJmIfgpIs2hf
HTUsQc+ad53+M0DkSayUo1ylN/ryqPPKhSEKhG49dUuvqRXJauk4lg4TecDC
VHHStghfFov3Exgl/CV/a2Lu1nRsKMoV+3CMAlu2HOE+otaFCwJT342PU+Bh
BfeTFb1CbP9ZgPgoJ/gfJCro8a4cNfHnjMRNUcCIO3X4TXYeErzKs8A4Q4Gi
Fvc1N1I29q3uZTZ7T7yfczRxTbkViw+f4q/9QNRjG5KWzFCJPlzJlfzvE7Fv
fk5/2/mxBtVoHlfynaUAi5QjDtwSh56H9Jz/9Jnw44EWl1z1AjQnaGCtPkfk
3/3Ty1wMhejDpxS3lK8UaAnSqDzNXY9rNY6Gbf1OzPvl+uCnbY+QNa0v2Xqe
ApMs/jsTSipQUc/F8tYFIs/a++a4O9vQpdS4LsmfFIhx890r96kOrUShj0GL
FDC03dqYTq5H5kaVq/NLFIg8fFNLQa0NPb9P3qGzTOQJOf3cqeU2pKc2dvDd
b+K8k7szZXyrkKWk6jGuP8T8uVn5xq/F4oP6macdVimgyWD59Yt4InLvMTLt
+0uBHfpXDpr+KkRnr5Q7Hl2jQLQ6JUb/ewe6e0Tf/8U6BboXOlXHKL1o85fu
2JUNIl9+lkbX1vegrb5WuUaMVFgsqE/R6m5ERQNVDSWbqOAjKXqg+HgifrFN
c3QvMxVur7ZZM2hV4jWLjwsuLFSY+6yxnt37EIffkWUZ30yFxm1vGUWqa3He
kyl+tIUKgYW5K0e6WrH+LnmpODYqGFc88XxQ1IqPxo4oMbJTQTX2XtrMz2q8
tdDQ4Oo2KuS4yT++uy0PtwdXW9dwUCGtIaLr3rUSpM5r5n5oBxUmzJ5d38hr
wFv5G8J8OKmQXBmrK5RZgDmP3075uJMK2XeDZEdDGrEFfaJcjYsKfa+S9xhN
FOLlXL3u5N1UONTt1jkzlI71ohs/svFQQd0txT/pbCceZ7319wYvFb4eflY4
HliJBc+W72jlo8KeYlUlDf1R7H/O+JDkHipI3Na97zDYh70Wl48F7aXC8Cv1
EwNhg9iUevzMvAAVDuTs/O071IxvZtWZnhWkwmmpg+mMrYM4+/2tuzlCVLBh
83NMTcjFpz4O++/aT4WdXY/nyevx+ELuhVd3DlDh6oicHe1AFQbt2tzeg1S4
ohwSyRgxgP+IX2qU/o8Kf/qfZ3slD2L1fb9Gn4tQYVN/qBgptBMbOxr9+C1K
BcdbnKr+lYF4deUvi5E4Fb7lVa8f1enAf/7d2FNymArV1WuGUSvF+Pz4oNTe
I1T4gEgtq0z5uEv3jrKLJBVm85IWY8oKUWvwssGYFBV+aqhQXQbT0PN+3ZvH
ycR9Qo9Wb7oXIb0fk+6vKFRY+l0uqmNSiWbNz4Uz0KgQrb2yzXNbK8IFqymm
dCpUiMjcb1KoR4c5vCqqpamwMqJePq/ih+8cZ+g5KEPwrbW+VGCgG78T9vzk
fYwKT/Pv9aeoV+Ov9pN/P8hSweuZS1FPSil2YzHkVJOnAq+K7lUVnkrsdPjb
oWQFKpSW2koLRRbhfPItWbbjVLAwmF7U2x2H6jezad1AVDDzuP1GBWqws9Wj
qy1AhX2RrLzmCUWYKjdx94gSFS5zWP2WtK9FhfetAgKVqaDyMP/PKnMOIjdO
vPquQsx/dKtqXEE+imA2y9M+SYUHVXcDb6JqNDnE3pStRoV7Fx82DSZHoyGn
wLGdGlT4vvbdn1s+HwX+XP1hr0kFA5aNPNaKdnTrotnm3lNUOPyfhIUbqQxz
qW3aK32GCu/PSE645NejFjZX0nMtKnRnYyspsRIs/nmrym9tKrwQLpvouNmD
9pxwNjTUocJfifW1s8GdqOjpr5vFulQIS01Nm3ZpQkUlTh579KjQPzFuqtNd
g/5IroQ/0Cf0N4/9vu+IR6uRYamj56ngcEwgZdqhCjUWcGBFQyqc4XJMaTRr
QadlHvbEGlEh4uNVvc7aTnQkc+XTxgWCz6e/G7Up9CKTN0//XblIBe5x/wMH
rbrQ56VVzupLVPCvf+CkNNyJGJmi/jt4mQqkRYP2nQWZyH55j5z3FSr4lhdw
sYznocrbHlofTKnAJKlULGZci0Qa/lw9aUbwQfYE88+ToWgmw+1ekjlx/1KP
L30Yo9pz7E+2WFJB7ArTifdaZdjP7Wnc9WtUUBu5IqcyZ4ZY4pnym62o4De2
mW/uUjK6cyaxSeIGFdx9Lh3yEu1Gq6Ic40+sqVA2MrD/Y38TMlSP+/ntJhUu
sCyMBjLWI+kvvKzat6lwokpJ6wFLB3LiS9mbbUOFT81zd6LDKlDBKgt5px3h
Z9e+frwRjtHHA74q9vZU0GTPCGKkvMOGTmJGPXeocIRNuON9LQ3tDwq/RXek
gnn4YaMTxS5I7ROfZ/hdoh/Vtt03Fbsw31Li8+V7VHgzi13a9Zvwzg5ymoEz
FXrJRWtej1pwnXYCLrpPBbehx3vt2V/jDYvdvfwuVLDeK76+l1aC51hCZu8/
JPwWa4p+u1KExRQPrI24UoH5Wfny1m3d2DQhdaeiO3Gf7ymBDOjBbZckRWI9
qPD2klvLlcJh/GUyVW7Dk9DPwpTJkM4UdtourH3Fmwqvn34n1cvNYp4dGWZV
PlQ49TrcWFZgCBtGCzsdeESFj+TbM0vevXhgc8kTr8dU8GbbNH3xTDdu2bw3
/r0f4cei/8lzXenFX8Pi81UDCD5Gb47bVjKORVvozYlPqDBjMpIfmNeNdQuK
xlmDqMBXKDV9M7wbm9XQFq2CCX85vrjAYxiN5ZKTWZtDqECTNT3quu8Virop
LyDxjAo1Nu6mBu8b8KRsNflJKBVOXjVU3V9UjM/yS6t+C6OCjtZd5xhqIT7B
lmGk9ZwKxa9+MCpr5OO1L8dvZ72gQnzKpRnmhkrs/jbXkzOSCrkavZSBbZ2I
a6fiC7soKrTu2qug7pqL5GhVad3RVFhWepkZsqcBddmerKTFEPlnEh8cs7UZ
aSil94bFUkG2+V1yv2AHsj197POvV1Q4e7B0m4b4MPJKqF47H0/gd3DHxyfX
OlG7hvKuotcEH2wqt5kONCDNnkwR/gQqvLz2MYe/uBCVcMjL339LnM+XNchw
OQNpN7zTHkkk5nn255yNYQC251IxV0imQujTVJsEwVI8sqnPKSaFCiM/Uify
O3yR5Sv1wPVUKuQZpPxkepWPHxZUxV9OJ/KS1dGNfaEM+4YpFlRmUGGwlfuT
tUgvnmQYaN6fRfBHKMNShLsIjwkrTXhmE/55+Il31808HG/euziTQ4WFYlV2
C4c6/Oi78RbVXCr8kxdg/CTcjFtSagUS86hwfv/705ss0vCHMgMKawGRp/Gi
i47VESjCcEjVqpAKmYqzHBMTGSh2QfNCUxFR/2+J0RLZJnzjT9PtwyUEXrqL
fq9MqlADnPUKKCXmxxdno/rIFYXu733xtYwKYzLX7BTr89Hac/X0MxWEP81q
setfqUKypJHKTEwFyaPZR0IJv6FHGfbtqKKCrVTzgemYeqQ/9vGzbTUVbinf
L0ryfIdKTp5e76oh9JPJd4/56yCqIr3fRasj/PnOf8LqwsPoXpG2aFg9FVgv
ybD/N1iOuiSm5X81EPtAebCbKEcBtvLUO3u+iQr2ryOF8jIbsfORXvPCZipc
dL8vJVpQgyHspjNfKxWOhvzYLSeei9WzvgQ6t1EhKTn1eNR6JW66bft6uJ3g
34rOzD/edvzNcapAvpPQE/+M69WODnxLyLDlZRcVONL2zkRMtWP3+C8Ta93E
fDltWLPjq7HbTvslk14q1NPGNUZeZOM/IlNbKvuokL98arAw6TVir728b/8A
FfRNdorqc3Whw+q/KJ6DVIBb1kWMBp0o5v6tkzNDhJ8lcFgM769FXIwfLqiM
UMGSQ2a/+vka5HLWwebtKHF/ekJawf1OFNq24rV5nMBvUm+MdXsu6r1gFXFt
ggp2xZeyu/zeoa+jc+mNk1QI/nSAntb3Bhln21WJT1NB43DR9f8a+hHL9Eaf
/wxx/5zhn6S0PnSOzfXL3HsqDHjUdJat1qL59ywbpz9S4bN65vko5Xr04j8n
rsxPBL8WL4+VjPUibj9GsR2fqSDamMhlI9+LnpQ8ULD9QgVPf4bkKAc//Cn/
x9muOWJ/NK8/6vu1CpU+8bagfiPq7eLEbcUDqAYz3Q/9TuDpN9+fSGtCivv9
gpbmqSD0+/a0/JsylH7j92v9HwS/pM+MjUhVIUfr+4UFP6kwKZGxNVgsC6sw
sbbyLhF+rjzJ/62mFicVB006/aJCSIaYBDm0Df/o3FgaWib23xxrGe/2ZmxS
E8wmv0LsS28zUZVvK9aK3yb48g9x3uzri+lqvdj+eQB1bZXYP5Z0dZdFMN5q
wqJm8o/Qw/C+rhuaXTg28JExXqPCK6ft9VLFPdi0gMlWeIPANyNHK/XXEHY9
EuHtwUAD7k23q3LuD+GMy7yR04w0mFicd+zR/oBzrSMylJlokGb5aYRiP4b3
FPFUJzDTIPWhFVd5UQ+mUvz7WTbToE5d6IbnOVf0T4BnzpKVBs6ev/wPlhfh
qJTQjYYtNLgVmmIgLt6FDycJ7hbfSoOxyon1We4BrF8YJ+bPToPPnifusSkM
YgZlXsW5bTRwCrrU/82qD699f6ZzejsNDPxvfGDI6cCvbYUtM3YQvxsNzb66
1IvFX0bf376TBtaSv4wuz3dirwThYJtdNDD7Kah0SioTjWyKftPJRQM2rpJn
u04lYckLQkUUbhro2J2zOFZQikNQcuszHhpEOs78yUnuxJxdR6YWeWng5Riq
HDPdjn81xv3S46fBULnPslxqOq76KrS1YA8N5tIFJ90dOpG+arogrwAN0k8W
XP5zowOtNkrRnPbRIND9w+HrujE4N/212pAgDZIC9uPkwSpE2nv4opwwDfz2
u6x4ieQgm5Ii2+j9NFjca5r1gQWj3Clxn38HaKC849H9qxXV6OarlMhLh2ig
xSzj3RBWivqWpDMr/qOBbGQNoq6+Q+05edVCojRIGLpoGRv5Cu8opAy4i9Hg
Qbr+/OnUBnSQM39uSpwGF9hkkt0m/ZBjvhSDsgQNXpftRXFs+WhHZ+7uhCM0
gN0Hm0N3VqIWixPiLFI0eCkdfE9saxWaWilTtCTR4Hv99l+7iXqUc1V0G8g0
8MlFJ3YNl6KII4WWYlQacBlF6ityNqAHPccf+NFoMOMa9lrrfh7KnakP/kKn
wZ1duySs5TrR76+aCaeO0sDl6sj6ckY/+reppihdhgZTx0RGmt8OoF16mm0c
sjQI4VDQEtrTjJJtKqZuyxH9s3jyhg+Yono4udwhTwOxlbl4/sctaNm2ZStF
kQbh87qfBzLr0adrakLPjtNAmMmX9K+uF02OVNMWEQ123zyZvj5Sj9jM9dX1
TtCggPtp+ymmbhSl13gxX4kG4xnb+w31s5GCso4djwrR36n1jvWtFcg9dcDn
niqBB6srf/KrURQsrRs1eJIGm6SEj27XqUMh9wczZdVpUBFitDk9qBGtTBjV
RGnQIHf2yGZqVDBq8e0d+KtJzOdMfodmXzFOmtL7evE08TxQribC14dfNnQx
VJyhwb7nR57Zf23Edpuucgtp00Avzn56W9tzlBc6I+5+luD/939e5tVVqOK5
3vEpHRrMf1Y/l3CxAfvUzOgqnSP48zNZfV64AE82m197o0f0d89WWOZHNQ7R
HX3AfJ4GpfJLes+r63HsrYshFgY0uFFlIsgb34y96NMJ9YY0GAhdY9j0rxy/
l7tWLHqBmIcFMMkFFWKuN1Ntj40J/Zwbi9j43oCH0yymP1+kgUBp/6O6omR8
SGV6WdOE4FuUq262cT1OUDJnT79Mg1dl4myFZR247PB7IQ5TGvytzK+Kf1qJ
Ve5eo9++SoOY94MFDNz9OPbrvHqHGQ2uKwx/fvq3A/d5WF8iWxD8S75U5bRQ
jFP1ftk9taRBofdu5/+sOjE64eD78xoNVp0pvYKJVXh2bS7q3HUa/DEaaD62
qRun6rhk5d2ggZvvBWrVcT/MPvGjhvsmDfTjrM8b+zWikkWHwbu3CL77PMuZ
5qtE+6NWvw7cJs4bfGYQv8cGLXk5MMraEvfrW9dlK6Wjydsb3FF2NPhkzz9X
PFaLuZ3vHv5rT4MwuLj4+nYRLtZfP37RgQbXQvW+X3aqxwHh98+VO9IgI2sm
xNC9A8+d2GIleI8G0jsYP9Y/K8EXdnm7uDkR/nXCXeDO60rUWsD0dNKZBgoe
ZcccebPR119+b088oMHBmfF/K5FvUYYYa8lrF+K8OaHjd2LK0d1en3YmV+J9
zm2JJO04VJO9bcbcjQZRF2kWvmnpyFEq5HedOw2eyARO0+wfYPPpHdtEPWmQ
uHnuQ8GfOGzb8Uj4sReBn67BuG5uAmbbxyH92ZsGarK/7Yaib+HM22Eamr5E
Hvjku+fdr8YXdu4wSXtEnP8i2e1pRyK6rhtuv82PBrGFY2NzERGowXjno1v+
xLzLf9cKiJfiV1vDotsDaHDqiet+44p67HtbIJsUSINuiwTdko5+XKwYURsS
RAOqSCw9KrUeDx/YO/QjmKjnCud2UZM+HOoe+U33KQ2aw7kKNTq6MP8joU15
z2hwrODR7u/xXVjjWRQPdxgNmubiTQKS2nAB1z6Ju+E0EF8ManRWjkO+nVFo
4DkNROXdIq9dwiirWVDvWAThx5X6F+VyK5HX+muryEjCP0oV/ngXp6L8pX0P
V6MIvm4SC5/9F4JCWFOfGr+kQfDOb4HBf0pRqp14YlkMDY7uXKmr5m9FsUqv
S/a9osEJmYc841vaUX/WwQ7XOBpIGbrMr1xuQM8V02cm4mlwLlfTZnt5JaqW
OLwCbwh/cq58IPGmFX12ztz2OoEGZWnWZzfSO9GtbZL7mRJpUJI2+7G+vhbl
uWRJmyfR4Ij8I1KYXB7qFCNp1iUT/WeNFX0NjsQLlzNNRFIJ/tSKtZeV2WEH
4WN3HqXR4MXbFWWeV83oPH/po9l0Ar8H9heiLmSgWmH5lxqZNJD3FA23tHmH
MsyKslOzaMAcLfLivUQiwr7ydew5hB7eccpeTQxHl2+XD918R4PDt2LGX2hX
IO2H6HtbLg14flw3SBcdQLr38SZSPg2WjpOS5nh7kKSNMm9IAQ0s9G+KtT9q
QoK/qiR+FNLAXvDkzUDXSiQdpQq6xYS/GJH83ScS0D2vJr3cEhpsZGV8Yg3o
RsvGqtd3lxF5XPUmx0V2CO0zqX3oWE7U/y76lRBpEuk+UnrWX0GDt1KiXuk/
mtBNjo5EmUoalFOaQ7n5WnDrdvXSiCoaXDk6HExRacdbZFs7/lTT4B/vbcml
6W68pKHx/kItDXYkKPGKn+7HJqItK6V1BB6eSqsVAVVYv0eLY18D4Y8zDe4s
0124uKVtv2sjDeycXlzN0UnF9mvnjk400aCYl/PfZpt2/KO8RxNaaKBqQlH4
dDAPd5bpXI5vJfadND4LDaOXqKhi6M6mdoKfYq/0+jySUf7zc4/NOoj6Ck70
FplmIBnloZe1ncT+tHXjX11iNnYYuZLzXzeRjyOMgdqj+fgo31idbw+RL8Jf
v5ytz8O7ei8Of+qlgYhKRiDvs4fodcTkd/V+GpB0ng5Hv3+DfxtYMKUO0KDt
usphq79l+Lz7e172IYKvedy9Ty8W4cEQqyM3h4l+9jnvKapOxwV9M9A2QoNO
o9/p+Uv56AQ205caI/ye3Sbr1NF4dK7p0/XgcRo0zuU7Shh14NUxa9eFCRo0
MGzN6GdIwSLXZ5/pTNGgz7Xm0NCZXHyOZpv0bpoGkh3P1TqOuKOWgC+lXO+J
/IzRlLh6NRrvbL/Z6fCB2J+y9n3tYitEsTVL7/s+0sD8nvNbXs+36Nqy/Z+j
swQf8gffHXyQje0yfnBEfKbBNjrz3wtZLVja7N6BP1+IehFpjnmpEjOULR69
8JUGxk/EZDYEq/FvMedTpd+IfWwbqm7Wqsf6NX8uC8wT/uj61V+yIxtHS9xz
eLhA4P36U4SWNLFfVq48Hv9B7KOrIXJvHxXjL/s9Y9Aike+Dx/6sdQfhqgaG
d3FLNLiZUu1zPKwe72jxqmdcJvQqkp+lYNSJ321nHrn6mwbT88ICH3y68ZmD
7vM1K0ReiFe3/pPtxPcPszD/t0qDXVGs1dzy1XjK3J/P9y8NilRpcf78z7Bz
JpPkp39Evq+JGLDV9eEUGZ8T6us0YPzPQw/+deFLdzjOp2wQ/nFqXSn+wQCW
uBd0YysjHUYbSv9eYWjGBpd3ullvogMp9j9P65YmvLnpWWgrEx3Ekqb6Olab
sWcHe7IkCx38j3NVXd3Xim+9CSsL2kwHaYhbCf87iqftebrmWengJNsuL3Z6
ACsuhHw4y0aH2f/u9pcyGeKNXP7VnK106Ktb1Oe92opcd0Vs59pGh2mdBz7M
L2vQnM6egw4cdLA3jza67jSBooWjZPq202E3w6BNxaMJdMdI8PRRTjqUen7r
T341jurDI6+82EkH3ky/zg6pPhTLIuC4sosOTWwvV5pMJ1HF03g/o910iIos
KXH9NoAyEw7ElnDTwe25QEXP9R5ka53wbi8vHWqHtOrHvftQy3nhBhc+Oizu
UNcvne5DwVYJI2P8dBg5JxG0Zb4aLUweWDi+l+jv494kRv9ixG6ayhwnQIc9
RrUMVeNdqE9EhJ9RkA4uPs1JJbvH0DXNDMmrQnQ4p6h/NuRkL2oel1CqEaaD
cSdX7HubMqT0JOf8oQN08Dj9gzRs74sXflKtfQ7SQXAL82Xa4xz0MTvb7eMh
Ohi1u8kNva9Ae26SwtRE6FD5uaxqWaEEpQhkJyeL0oEyZuj1urIauaTJlLOJ
02FZ8r3dT/NK9EinqOvGYTp885yQeZhUi3yuyHxskaBDzd+X+YF3m1CXU8Hq
EUk6nKzvNX/n2Io+rsvtCJKiw/A2ynWx9Vo0dQYfnCfRQb945XbFWhVSOiV3
7CyFDuVqZgEFuX2o3rfsdA6VDrJrQztSvubjYikV0110Yh4T4tpmtYnYqbDW
8Y40HUTmPPQyWDtwcb6yf+9RYn6VskFevQ3YnL0mVvoYHR4IX4sJ/DCKzTnU
c5/L0gE5zzKJ8/Tgca36ht9ydIg/43f1OaUL/2HXHDVUoEOrirg2qu0k9Na2
UKxIh+4kNyY7vQLMa6zNshfR4cLGywzrwgr87b9Ofhegw8OPglWZbZm4ve2M
1NgJOnTYSW1x4qnEs9ydSseV6bC9M8/9XXQlZlfUM3ilQofjucEdc+lhOPBf
jzXDSTpcoZBzi9/XYyvGc+6magQ+DRf6H6jU4bI/A2HV6nTwWWLKwJaVKDHS
MOWgJh1yFu/u1Pj8BktuDJd7n6LDTqnlYZlfVZjGbNz94TQdGO9G7TQ5l4et
dox/PKlFB4VffLmiVhVYwujy3yRtYn7JC0Wzvv34166xHWw6dFAXb764LNiK
a4pMDt3QpcONt3u920eqsFvS1LGWcwR+pi38PhuteHi75Zkj+nQwTX1TGPTk
Bpo8Nm0aeJ4OMU+VxHbHx+NOR6u73w2IeZkoJK671KHNM5/8tY3osBTGOLlL
qRwzO1q/yr5AB2Dhpof29+Kx+k+5Oy/SQetU3B6L1jb8ZuBmo/0lOmwj3ewm
z1fhK2rfR3tM6BD89ihjGVsnNn59+wf9Ch1+/kkJTY6rxX7jP1mem9Lh8aYd
1r5/2/BXOds9v6/S4ZrQLtPfx9twiP+ClKE5HQwLDDYGzPIxbeaOcrEFHdQ+
vT54gVyOg+uWDfZco4PJA6vElNdteJjL6eYDKzp43/jy4QxKwHX/VtxHr9PB
T26CM3okFrV8dAlXtCb4NXI+z76yDCXWr6XE3qRD0JfcQd6uBnzwzcOKjVvE
/dp8e0t7LJFpLEPPFRs6POqSoqG6LuTp4vGpypbQj+O5Hk2/frQ6senfAXs6
6IRxjsGfZmTd6MXpfYcOqt0rsls0utFmJZb/PjjQ4c+4qpRwxBTqqfCWPXmX
DpcdPfnjOQdQuhKrVtI9OvAbG9qYcvajzTGPr25xJuaxOlv75+4giubfdu/6
fTpE+E2ijheD6MxsQEDzAzpINtpyv7tSiJY5dsRJPCT86NOekq9Bz3Eva1De
E1fC384LxAhEFKBC5u1N39wIvr4ifz6uGY6yPEPGtDyI+Zzosff2r0CCZlw/
szwJ/B+eswl1q8A31Z5v3ulNBwGrtfIDkrk46jj3XnsfOmQqP2tX2tyN9zyO
IPX4Evz22EXa86ARG8jvUaE/pkND0dSF2rtFuOxctGG4Hx00PBR/HL9RgScN
BG8t+xP6jgwxuRHeiOnbYzwMnhB45TWlOqlX4as79j0vCqRDNv+T48cX+vHW
E3Gp/MF0WNu+GNB0qQRvmRLC90Po8HLJatbyRRl+WxPXM/KUDv11euyDP6ux
3vZDswqhdOBWN+SbsY5HlaeS/sWE0SGX/vx2xYsAtHhTfOdGOKHnI9Pirlpx
eK0k9b8rLwi+Zpb5Kfhkov7GI3JVEXRw8Hc79Fe4Bd16kqF1IIoOY4q3d79R
7UULKkfMvKLp8Mm0AjRwK+KQzbz3/iUxv9FUiTWPftRzjPxENZbIL4+vRbaf
J9CadnZc4is6vLkjjOQuTKN5W2o+azzBnwTvg9fyGxDT+4Imq9d0OGzx1pzn
ZABSzZYeb3pD4H9C5GugYz4+y1rw8/BbOqT02t1s2uaD/pnIsz5JJObPkF+g
WdyJHuiX7f2WRIcMwUSJ5cJSRBuTJWul0KG49Wt6+UQPcvpRoZKVSocQ8+yn
P6e7EX8yGHGmE/qrV/v2y6ENSchX3LLLIPys8oBj46UGdAiDZ3cmHeafz0SX
h8Tgvy9rn9OyiXq1td3ylgpwdZlSWlgOHTbeuwUPdxfj85H1+Nc7OgSuXjzj
cbYBpRme7D2fR8xzXujtY+tmtMe3ebYwn+DjNmIfvRyFnn/VXOMrpAOnT5bP
fL4vOifetvN+ER0c/+xp1NKIx5NjWiIjxXT4d/+8/PiuHPTDsl1OoZTgY+xi
8RPrbHxxh7Z2TBmhz4eNB2i6CdjrQafZejnhB+pRDx9/qMO3v+s6XcZ0+NCi
+bJ5XxVW4O55UllJ8PPoy6Zceg2uDjgfv7+a4M+rwB4j+VTcudqf71lDh7i4
3Cds823Yd5Nx80wtHW55aOrYTLfju6eHxlXqif1ic0vLode5eOn+pcW3DXSw
lGnzX3yWiryOTrCyNtGBvqXWa1S+Ctm2mghYNdMh6Rtn0u+oRlyyMEluaqGD
VZeMaJVdEzbIvqp6uI0O8hqXhixv5+Cs+x+MAtoJf7c2Viy/PIgnD1y7/bWD
4P+3lQWaxBDmHP3geaaLDl4tDhG1N8axzcq1F5ndBJ8dk7J9905jJ4PZtB29
dPgbtkleoW4aN32+XmnbR/DHnXldhnESP/g719vVT4eKz2yuH40m8Qb37c/U
QYIfkhd1hz1H8Ys/82uhQwR/v/uTeLdk4X/P7Xb9GqaDuUTHLwenPCTKtihy
fpQOtinrOa7X+tCJYAf5wjE6SEmIbk/+lo8qfZe1+SaIfIh5nOZqU4nSCxzN
nSfp8FEmoNxzrAgvbF11Gp6iw3lvU/g3VYMPCTgHys8Qfvg85ZluSDEO/bga
//I9sQ9u+Km6RxWiNFuXgrUPRJ7E2RcxymLkZrXebPKJDt/d5b18bleiZQeP
CTxL8Ff/xrthuUH0LWHTkvAXgp93mKsk3jUhk6eeWzzn6ED+72t63ftidApY
9s18pQNXGJtKlFYRou/ypqh8J/A6xMic6tWKtpzbfPLtPB1oRvfmih90IYfU
xxc2/6DDoYJ3B9wfTiJDAXabaz/pEO2wvD28vw1x8vl7NS7S4V35wNMCgR4k
e3BbhPgvOnCoDj45wdqO+DQC0/2X6RAw/taUan0NPZDgrJr7TeTNh2cvS46U
IW+7kL7Tfwi+cZodOfUpF8U+4/qSsUqHiWssnsW2ptivIGx9+z86sH37I6b8
vBvdvM7NZbtGh86uw1dsD7Qhkcnnol3rdLhLulJ1+r4Biv3Fr0BlkIY7N4Va
iiNbUehc9NlQRmm4QXE5+LehGyV+F7BY2iQNLcL+m8xC2tBI00tnfWZpIGmt
5Brsq0QRXIJBBSzSEH1VVPYYw12cjF+95mWVBqFIRfJYSD3OMhIudNoiDdfH
/XuCEptxpFpCyxCbNHyOE1d8MluLP24WmZRjJ7b5NHXu08URCM+9XYreJg3u
pllrUaXRaH5chG2NQxo0Jjq1N5RD8IdDyftMdkhDSsnuaZYsVXwvQIKKOaUh
e8norqdhO7omm35SeJc0LLLwCdZa1aGOb5LGHlzSsK1sReOxKrGvVmTYTO+W
BvHrX70mJ8rQmCTFW5lHGlLDzfQ3dHoQHMyJSOCVBsFwq8pkzgY00UnPYOGX
BtEkZ8Sc14XYvuVWWe6RBr961Yi/w4XovZxMf8NeaUi67Kax/Wov0uUv+iK2
TxosjmXtOHI0BU1+kdvwE5QGnrvDJJPthSj3bQnXnJA07FzJ99zj24JPcSmK
nd4vDR0eT+wTFjpwX0SFQsYBaTgSwKaPbTux4QvQ2X5IGs4KBzT/XijAkz2V
Fjb/ScNvnvPCt/ybcejCifudItJwQIjp6K/LXbjya3UQRUwamJTzVS6tN2Gl
apU3z8SlwePTzMZxpiG851lD4eJhaXB7U2S9bjeABWbVWvWOSMPLPnMzffkc
LJXXNJkvKQ1XAztcyTef4whfzV88JGnodlxbPPamCZ90bWVzIkvDsdbv990C
GzHPHi3BIYo0NBlH7OdzKcQV8R1UOZo0qOx7LMDX/w4P3DqrFk2XhscBvnmo
8tn/FV13PJbfG0ZKyipSRmaDNETvFOdOSaiIlEoZifqSkJIoImVlZ++99x4d
e+8R2VktIlml9Ht+fz6f8z7POfd1X+M+f73Y07Prxh8SCWr3k+v0mXyw6Q4t
i5sUEhjLJB724OnFXHnvX76jkkDu/q7U3P2NePDH1RBhOgl+dDavnr5fhiL2
f8hwlCPBvkcBincvJqIl5mvVH0+SYL7IZUsumwfesjD8XlGBwPvB/kb28mx0
wkz3WxwigbMN36DSpTqc0D72j/kUCaBZ+ZlzUTyi8uvxGCuS4HeBVsgTu1Kc
YDIu0XCa6Afj4ZYb/2rxy4jb8hJKJLghEsUrXFGHH3JMX3I7S4L7zPYOLeIV
SH/OyPirMgnOnWyO2tITgklHPz1VUyEBXUV0l8x6Id5Iu+edrkrgye5oaTEQ
jWe8v8Wxnyf4Znru0aaiXGQ09F+x+QUSJMueN7+R54vtNuZaOy6SwMgtK2Y0
vghbSZl/lNYgQSbTcOTn+i5ce31+2fcSwfctY5xbz3bihkHLbT81SRCsI6ni
3eaOMm4vCl2+TIIQ8uQVzQs+uLrrkWyBNglYmSXkM7RL8OVbK8q8V0lw9/3h
gUR6IIqMfaJro0PUn+czJagcjW4trVkMXCPBhYU9w79tGtCCt50L7QZxHuuf
7MxlTajC/k9IqC4Jht1/k+Lna1GcyrPM9Zsk2DL5w08juhRZ3WGo0dUjQWww
57wdVzuyP+DYX6FP4N1VF6hR0IciVplmhQyJ7/mwn0hs6kGPZ18yON4mwT96
2e/I4AFEl96866MRCf6wsguu+7ailm8ukorGJFgWUb475d6DVntYFOJMSPBy
XMV+rLAe3T7qrsl8jwQmr/uSu8bqkeX7bSZ3/iPBg+DQqIm+etSZ5mlXb0rw
1bYscz7UE2/7yuFz8D4Jemwfc6Q7NeOGa97xrubEeaUOjhfnxeGLCVwlXx4Q
35sXKmR5k4Wme3zbVC1JMKBw8I1idiVuDeOZSLMigcTwvc8qrbkoeNPbFTZr
EtB2/BorbypGknO7t5s/ItZ/+H5h0qxDZcbBwh2PSTB1oezUoaUgfFKe/4T0
ExI0NNbGpTzMwUNvws752pJgcvq09YNt7Xh2RfDm4lMScCbF/gwnV6OvjlGW
WvYksODxXNzBXI/IoSKv8p+RgOvvZQdesQTUvCc2dJcDCa4V7O/ZI5KHvhze
l/XYkQSffWY+7/SJxv+ZJNT0vyBB8Qm6s4VCGYpMPDBAdSbB8dcOZeM6VUhH
JGk25CUJAmMcbT601yKtMxKM6y4kGJJ1XamX7kNXulJ26b4m/OFpnvzXnnbk
VCt1qMKVOL9qM9+RgTaENTMVhNwJvmw7HNtdXonebxzTcvAggdclZ53nM334
q0GOybgnUT/TtwJGWiMuunHc/pQXCVzEu+Qd5nuxlmu+T6w3sR/zVjX28V5s
Z3kiYZMvCWIcwySotFbcPVVQYuRH+IX8gM+F9Eosc4TaXudPAmnWgYNGqX7Y
7H3xxIG3JHjV0MKQwViOChfoq68DSdDZf2PgPKclfspfvv1LEKG3e+GcZkX+
+Ji/vIhqCFFvvsAtw92pKKv+3Ym0UBIgDsfO9INN6MgYqLCF/78f2Rv2e9+h
5qM1N+9HkGCvmLSiZxxG4atnrNojSYBpE5c9t7cjeZO6V8eiSeD37dx3v/Fe
5MaqHOYTQwJRKY76lLhk9LuhMetHLJEXlnef9j7uQMKmKrWa8SRIfzZ98Pzb
bmT/r3kgL4HIPz21G9niRWhT/IU5niQSHH3U+HNXoQtymWhjfJxM5Ne+5VGG
u9HY8IUGb38KCeo/RGdbUJvx1qCuQ9Q0gu9x2QlsXz/ggSwtFJJOghPnZ2KN
tg/jM5y9Wr8ziH5kRTjVWYzhtfNX7t7IIvBOsRvZQ+nF9jz99uXZhF88unPi
a243rrlwzXdvLgniOqfSBjbe4ZHIwYTneSSwHCn3t/ZvxF7+N0rH8klgO2Vd
8G0lHzt9G2mHQkKP6vLb01/XYr1GvcmYIhLoqsli28BO/M5hfJWphASRsGLU
ZdiO40UM2YxKCT2uXwztDMvEt/knRerKCH/zf1MRPO+BdN2MSAcqSDBybM8P
FbY6FMHySeX1OxIkSIXbOocXoodBJrc+YxJ4x40UWDnlItmZz1YqVSQ4QDpv
ZPxfGv7obPo6tZoEf8dYFRZL8vHS3dmw7bUE/x7z/BfpEoPNuc2zzepIoHSJ
H/t+j8an9eZr2+pJsPZJLkisqA7Pe1t+ONpIApYVuZgRw2rsd2FxzruJBHP3
ms/cuVyBG3ysmX40k+Cp4vPnJ2rysBh5hVezlQRl65xp54SqcaaxjVReGwnK
NTWlJVmrMQfXL8TTQYLCvTHHpre544xV28uPOol5yP/ja2HyW+S6c/3u+y4S
vI7jY1KZqcIxgfbPKD2EPsyT3W/+6ESi6399g3uJ9/cLGdop9qJVA4fEX30k
+KAk7f5buA3pejGWXe8ngUh68mBvVgOy4XLuKBsgwbjE/TXfLWXY5CnzlOAg
kceuO7tdn3ugY+4ua8+GiLx4w1aEFLrR7q8s7GPDhB+7x+90Hif0m+gmCqMk
yD+mYnXcoQl5520jx4yRYN0w+1FEeD7qeuahyvSR2H+TdaPcqVqUIc+hd3uC
BGlBuw9X8dWilBGvh7WThF/8su3SuPkcwQMu1/3TJHgiv/C9pqURFd/yC381
Q8x/nCO03yEt6J8Ed86nTwSeMpqO721q0WTI27pzX4h89zZyP2IxgPIVeAdT
vhL+9itKyk21H3U5BH/fNkuC0/PfjCn1Q2jWnW+T2Rzh5zbPmyVS6tBIceju
tu+EPzw/+S5euhud0BI8fHSBBDs/neU95TeCXgZGgPcPEvAPX8kcbh1Gh+jC
2guLhH6O8I3nbx9HlLHoe5eWiH6vaysV2/YjeU2x57nLRB7oO9B3/NeHkEuc
H/cqCbY5ers9lO5ACXX7k6zXSKBa88Ho6sdqdKYusazvF6Gv7fY57j9akSCj
RCd5nZhfU/WzxO/7oNMNKVNBf4j5M0NudVNTEf5Fk/q19peYj9jMyt1na3Fl
STr79X/E+fp9E2wcirBA4lGxMgYyaGWluP/3sRQ9lsgmCzKRYeGGD1WuthWF
BRxXe7aJDFEHnJxKPXPw7NE8vVFmMuxZ6XUztHuPuw+SrNEWMmzBD4r1Wbpx
8v1C12gWYl2S8e/JshZcIUGNYGQlw+Ztb1/dLarCIuwlOYbbiPW/q0eyLEbx
AWG5+prtZPB6aa+iZj6G1aLLBvexk8F1gSb6RWUY/7suP+/CQYZKJRlVesYA
Xn+EN33iJIOxHtuFM/AB06Zgz7kdZMh2il377jKOK8OqD6fsJEPqerXltz0t
eJ/0mVPbeMgg01Tdwru7G4v+qNU23UUGa+ff6YnnerDiceX/WnnJcJd/xPhK
VyV+7974/MgeMuRz/7iYpNOEz/ip+HvxkWGyquFWvFgnzghoSZrnJwN3QZV7
p38Ljjp9vlxDkAwnBW6q0rhqcPul9s6cvWToCTOR4zAMxzxYfXqnMBlKrv10
KN5WheavdP16KEIGodP5x0IveGL/O5ocfaJkyLWDbPXBOsQ/1iNGFifD3mrr
GRHjdpR5XJsStI8MjXFpm8gna7C6Ub/a2n4ydDdl0Ld/TkDfvuroXztIhuH5
kIRYci960vTBulSCDFwl22VKYzuQ/ssbbgKHyLDdd96m5mEtEtwyEmEvRYbo
D3cctJ81odicW7kjh8kg+aZVfPJLNzLXGq9XOEoGf+2ox5aSGNGEDYeijpHh
4J+EcyE3OhFz2uQ8w3EyMHZ0PrNnz8bqX42YDWXIkFaQFfPtfCXOPTCzp0aW
DDHDGbelCb+OWTM5so9E9JMzrYnjdx4O0/hyyoVMhoY8YcN6oypMNfjvygyF
DK8uz2Q9KvRHSb6z/ynTyBCgd1Jg78tmtJx+3yGZTobE8O6QVchDfu7z/qwn
ySAg8h6OJ1ai/25bJP8nT4bq5+SDl77no8Q7i+UtCkS9Tvv9E1MKEJewdddh
IIODlZhHrGMiYjixPP3mFBlUvPJMVtKjMQ3Z/P6uSIbwAhmPvxWtSFFhjUPj
DBnaWdtVXlTHYaFFW/EcJTLYMZexZCuVYXHjdcpOZTLEW/hF1vTl4/UQ+/MP
zxH8Ety++BkGMXq8od+rQoaZ1KV+eaUirMft+IikRoZ/ygesVWxuIy1TRvfA
82TI2Xp+cY/YW+Rk5hS5eoEMfaoDggcrMxFvEXOejjoZfJfeDHf3FWABc5eG
Eg0yKG/7O8mkWITWMMswvybxPCmmIbqRjiQjXBfstMiAXkhtH3jpjI+wbds8
cpkMcarB++zWa9CGpCefwhWCv9dPTRqLxiERGfajUVcJvlWJUy331aLHoV6K
DNfIoCDMa2y7swZ9rea6anCd4A+zuyyHaTdyEvUzrb5Bhls+On9EpIqQtTW3
o/hNMsh/0fPuKypC7sffBry8RYYLgWzMV193ojPZvCnTemRo+Td7pWitDLF0
BlWcNSDDZXvB9j1b6hCq5OtOMiTD8o7w7QYR7mhmKnRmqxEZHteztha3peGH
boLr9+6QwYnvTeRXpipkuBbB2WJM1PNcVUTybBnKzhfed/gu4UePK2yLekqQ
zvYY6pt7ZLgZileHIjpRorXYhe//kaH24snyAno/clqOM1A3I8P8bOrKO5Fy
5Ld3/+Ps+8T7P1jqWevaUfa1JPcdD8jw1cokWdmtHz15KhFlZUHgb/DdEw+1
o6iclLweS+L3XfLhIZkNSCxeqvHEQ8IfHDhmrQ3SMPtU+vBbazIEy367r70j
Hr9yOvpj5RFRzxPzyvTqLlxCyd6sY0MGloiALRytTXhs+jh/yRMyxDKarzWU
9eCB3tyj/E8Jvnyfzgyi1OD6xBOn7ezI8C1CaW50ogiXCRZeHbYn+GF9fVrd
uQhfd6OYyT8n9g8+IzNiEYNDzpc4RjoQ/NcbUXGwLkAjN+hv/zmSgWfb+eGc
PVlIebwsRd+JDHWu1leChKvRAS/5d1XOhP+M9q50bpThKF7cLeZCBvHYVWH8
IAdRBuCT8ysy0HqN548UliFns+r1qddkWHn05rtFky+auXGa66wb0b+zU7tk
H7RgW+m6fUnuxP7/poMetDbjJdeztK2eZNDN0rjmrtmLLdcbLtx7QwYqX0VO
HqUfay2pGDZ7kSGUtvxv1aIDS2q3PJbyIUNpt7P3zx2DuHP0vIenLxnUNi4m
9j/qxdlm7VFzfmSwHdn1bK9jPcYx6vkXA8igt7KLweRIBv5O72rMekv4WfLv
i4eiS1Ahs9YIVxAZnCvRB/eoHpTi0vvDMpgMYWqsfpnsncg3Tpu4RpNhfHtX
c2h7LVY73c9/IoyoL+u5WPDWaPwsTufY23Ay1KRZvPxj0oQn1z6cXokgw+zN
4lm2kE4s++6GztUoMpxJ2f5n404rnr0zYlYcTeSX8PRL7cMlmC/21gu+WDK8
Kz0tZb29Eef9G3v7NI4MSdRe0oBtD04LMUgdiicD3VbsBNPNFsy8e/LdyUSC
P58uTJxQyMJln4x6IpIIvGjHDForwvHyrZlPG8mEXybsTMyM9UUpXiZ/9FLJ
UCDr+MJvbxCKlP/CVZVG+NkWk8PnOItQBavpfrEMMjgKXjcVny7Hl2Nmac6Z
RL6/XoiKiW3HFRX3L05lkSEh9qfVQ+5mzHNp3lAphwyZLIZnH6qXYUNeS5vE
XMJPtGONmR0KUNvhRQ+WfDIo1XII+Z1uQwOs1tF3C8iwfvPvrPbzHLSWu5zf
VEiGH1hRUnamBdHyHzcdKibDF7md8oLa1egLrI14lJDBIKza3XGAmOfSbRdn
S8kgmjDh2/f3LVbRXN9ysZwMPvlckuvxBUigy14gq4IMnV3FTQbK1miz9MYx
LkzkTcxJl2GXSlTS53DGspLo37mNW0cGRpGnAeO17ioymNNIMRmfBtG/Jqf7
sjVE3piJ3no5+BG5ajM7BdSSoffYcQE9tQm0sPlV4HIdMR987G7ZkjCB5N+y
pF1pIPLfw6xqimECFW644qJGMhxVTvJ2+tyLFJ5s693TTOAfEsL2imEUqX/0
+GzbQobkRu/eMu4hJKLK/newlQwP5qpedat1IPM5rx0n28nQ1KfW+eNeNBKI
5ToQ0UGGh89fW7haVKK5AV/6RidRb7XtP3eVIFRdwK2u100Gdp6eMga1BnTw
8tvblT3E+0ODfOOxxH3ZlPeJaB+Rh8vP6pXks7DVxWBPp/dkkCo/k/xdrh3/
LOeLmewnQ6uQW0B/SjJWZw0rOPOB4Kv+LsXhxS6c90KwOWGQDFA82NY5i7Hm
l4jRLcNE/85IWN66jvELW+GfJiNkEByZu3FlrRRLXIthaRolwyX6LBeDaQdu
CBYTPDRO5Ef4odesuT341bF4aY+PZCgumHMoIu7b/Yv7lWYnyPBm6VyPZnY4
ZtyddO3CFNF/e+09/TKluCpKwjxzmgwahQuKVc3ZqNwo1YnzExlOVySkju63
w2d8pIIsPhP6PZCgYP0nGqluyUjr+kIGko2cz1IYRpXzRytlvhH8++k07P+1
HE1Cdq//LBn4zB899NFwx9v8j39ZmiMD0z33bhPWOFQvk/dXe54Mp5hKAuzU
S5FcwomdRQtkKFeMya6hNiN2l8IDexaJfoY+dHpyswvxZFHkbH+SYePF5hc9
L6LwDvMS9cElYp7rv8NdQanC3zrpRnIrRB5q+6hPM5WiymvlT8JXCfy8J97/
984VK6bJv/m7Rvj9wN9l3ahIxH8Vx9z6TfBbkbEhtzQaF7OcKsTrhD8o2rl5
Vbvh5jvVzSJ/iXnkfmnip715+PLK6bEXG4Qe/56bMHzRjQ3P1/2c+EfkXUWf
9Ak0jJNazm49w0iBB+lGIX5ZQ3j1YqNgAhMFytyVsz+zDmCpzarHtzBTIC4/
9eM7rhH817NFyWQzBZQ3Tu0aF/qA33Wcv964hQJFj5c2VZ0YwMUm7eaSWylg
v6/I7i/DAM6ZVHd2Z6XAzO6lQ94CPTjativo2zYKfD9ZfCViczcmHdBKP89G
gT15Yr4dSVXYMqW3MoOdAifv1PEPLSbj2jntPg5OCuxa3FU641eHm0z7vzzg
ooAu8wln/cAa3Duts9G5gwJGUpULpq/i8eeYwZ0y3BT45vj7rlByA5qX0D3o
z0OBviETV2PSAHJ5NiK3tIsCP0M/j3UbNaAubj0N7d0U4Kl+Zf9HtheRAseN
CvdQwN9BIr50qRY92m1ou5ufqCd5k/H51jCcmDD55okABe4dcBVwDS/Bxkp3
Yj8IUoD+ZCLgE+dz/Nl1ppAuRHwv28IzwL4eMey92xImTAFW9WW+99MYFbd+
GfsjQuAd6UGa2tWJCpRNl26KUYDUL2oWcjsLq03MbsXiFLByrI16yPcOG5iY
7xXZT+Dbu2t2aLIeaXyYP/7iAAWO77XdtE11AL00tTw7cZAC01oJtMs6g+hg
+eL105IEfuJzUwOfJtDZS9YP4g9RYE5YkYXbYBhl5C47bz5MgSrb+iGnlDKE
ztgEGx+hgNm6oMHow2x0vGYtveEogafew8J+33a89dbTKglpAk8D5tgqg3ic
ubje53acAts+zPwnKm2HD9x99vWrDIGHU9cdid9J2CRlY0PtBAWC7pLOZE82
ovNXHbkzSBRojfJaXm/uRe2rjBIcFArcrHhh/oOzA6UaOp98QKXAGLuiTc7d
YHSxlPlSJ40COfn0PhafUvTN6NWd43IUmA+i3pmnRCC33yxP/U5SoMfNNdX/
fh7SVXfz+ilPAXJJZtXr6m50pW5b3GVEAZFWZxETcjWWDvAsKgAKTH3gmE9n
7MSquzlaeRUJPngK+Cvd80Y8jt7jNqcp8Nf9uJc/XzX6K7RjeeAMBV5Yf+NR
YG9Gd3T9WOlnKbBwwnvsvEs2YuTkEQpTpsBlIdFnm7vj8BvLtzJ/zlHgk9a2
qTibanxLZLfyTVUK+PUFCveP12NX0+Ab79QooD/vZLw5LBPnrfBZCF8gnoOr
w7B2NBq5E/bS8SIFaEso9MfZQiz7RzDkozoFeN1v5b8v9sZW4ZEZipf+z5c8
UoHZY3x6j0h1nCbB3w6DYW7eYsz6LOY982UKBFawx/zJfop02cW/3dGmQAAX
2y2yUSr+FBL/r/4KBbQec6vNaFbgB8IHeCR0KKB9St8m6XMlfleZJOF2jQJf
NxnbpXvEY1sxSfmv1ykQquKu/lOgAKnFp15S06UAX/2hs7EaBXh172Hj9JvE
+Tsvt/G9aEJuDRlP2fUoIBoqsyc+cAAFqhzzNtenwNo6RVriZA86FJcd12FA
Ae+c5ulY41bkKSZTLH2bApuvePqcy6tHfXV5rb5GFDBg0M2faqtHR6ikj4t3
CH7Vyzru0KtEYjmFy1omFJDuFKmcW3yHhK5QtxXcpcCfvT5KJf5p6Na3EiHe
/yggnvOXXLVUhBbuyMnamFLgfKLLe6m4Qmw/Xa48YEYBrrdv6LHWyajXSEGX
Zk6BWM++ttMcmWhrIbYIfUDopxW87KO88WmdUy7rFhQ4dXKnFdOrTixRUR2i
a0XwebqgSI3ejZNPncmseEjoxayt4M/9DMIf66uFHlHg3cETb3Lu1mKqjnK/
w2OiP2nccg9G/DB5sfHbuA2ht3l/7dzjLdj3P1UGRVsKKKSnTUoO9OK60Rae
uKcUePVHNuf//+8weuuCJLM9gZ/123T8uhPPfG6Xv/OM6I+a8cE/Xo3Y0khD
s/450Z8tHXKhEsR9eKLL+KAj4Z/tH/VLZoqxVbCWnesLgi/LCh5cAhgfZe/z
/uJEAQ2v5lG11HJ8yfRKvOpLCgikKG37rFaG2X/0F6e5UEA4L6hHzz0NXUq+
1sb2mgJ6h7h7Et5mI2bRoY/3XSnQ9cZs+ld4EBp8rLvS7ka873TI+d7PGizO
MrpN2oMCI/zDd62TO3BSop6wrycFNr4sVu7c24d/iX6UXXxD+EeE3xbbuG6c
XWJ4Tsub6JdLoI9TcT+e45vSzfehQHPQpzDBlGwMwXcsd/lR4LWeFcd1Ak+H
w59cHvtT4IkXR1xsQzM2y7gb2h9AgZVWIUY2wVx0RPVrJjWQAksNWwsFhYtw
c4NpTUgQBSx8L23l607AqrS5/t/BFHjqI7jARYlEv0rNZ2+EUsBcf8mOt6kO
dR5bYKgII+p7P1sgqOCH5IotdwlFUOClcGLExbYQtFnmp6RDJAWcRjJ2Fl80
QuyZ1grjUUR+CdKeybO2oukjK5qnYoj6xrhv5FZ2o51DNiaxsRT4Yc3c82G5
A2Vf/GW3KZ7g28WPofsFKhF38VMfowTC33LDXuSn9SLZW3/i6xIJ/LhlTcWu
9qGgr89KDiQTfGc9/OTTkffI6NK/ttcpFODkY336QWACWTQ7TnxOJfz03Gj3
t6pRZHyVaVUlnQIngh1aHwuMII9fztvTMijQpvnL6EdaA5p8uFmELYsCs74U
EpNYHhr48erE/WzCH/56Ptj8sRS5Xdmq0p5DAecDAWm/ytPRyEe3m8fyiHpv
Mn0K/9uNFl5st/LJJ/ZT+SPkrVOGylnevPpRQIHPNyq4Y1jb0ClfjjDNIgq4
j96RXN3bgvp5fLLyign8FkOkSgy60YT/jlqeUgowWickeKt1I/9d/gOPyijw
5iTlekZ4PRqK4Zl7X058X8TzXLt0J6rfEshIfUfohU+CzrBRhZJSd/OGYMKv
uDNuVVVXI3POkEO/Kwn9p0hnvHLIQsJZ/OhGNQUGziGbraF+6PXucK3yGsJP
z2kO/v0dgwPf7L27t47ohx9dPn+qBOfKRtk/r6fA4Cnf6aWcWqwdKeI71kDw
7+RsDp9HKW6mxyZAE5F//0Sfx6UF4ztp4qUxzQSeKlu4jy+8w0yHE9qZWok8
cj3QvZrdjdPfHZi83UbUz2b5vkl3BFMlkldr2wk/8Ek7wtbajQ8WSLId6KQA
i6+5o39oHVagpom87qJAYin5o81gNR5pP0z63E0Bx2cyylluXfjG2UwVlV4K
mFw5OXX4ZSqSHDl2K7WPAvsdZMc1fmRgVeUcq+39FMjb7aqpRWnDnR0yr80G
CD4/OPjc8kQPXrmVH9b2gQKrr7cc4DvWgDP7SdlHhygwWqysdm2mErsqFtV6
DxP+Y79ubG1QhesaqB8WRiiwRUObJfV0MpZXK527NEaBf6WNfFzXXRDjihxT
3jgFov+U82qtFKBF6wpengkKdGxclv99tBEfG1OQejRJzCPmVZN3nXrwYcdK
9H6KAtRheYOp0BTc++3UZcoMBdR2aFiEOlXhVtOau8GfiLzU3H2S6+AAlp4+
8+zXZwrs7do2fP1NH2bwqPe9/pUCUmf0Nxp8uvGLFeXEsm8UkJsZZ88ejMUz
Hk2lgnMUaBdsCXicHYhM2NQ6nn2nwAXj2f7Vv1FoLrJ1cnSeAtaJiFF1IgK/
2XNxDf2ggPygaMBtij3+Z9/BFrNI+NudW6ppykFoWfySKNMSBSiOki0uqgGI
w7mbdHuZAh9exOZ8V21CV7ZeVq1dIeY5N+mGpyyt6Nmbvlv71wi/HfrKrGHS
hiqkrj589YvwT62sqgr2QXS8cOD1p98U2B52b0a+vRftJ10PP/eHAuM5rCWL
dt3oQ8FQdspfwu9dwiY3RltRg8DNum3/iHw98FFcUa4KhVaPfjBloMJK1MZd
TaYSpHpY/3srIxWqN3zc2nYF4dXaj0xHN1Hh+QNYdvpbgNbQ7d3ezFRQj3yd
pz39FDXkTUktbKaCzxGr099kw3DFKWO4xEKFa2S7J8MZpTi68tPl3K1UGC3k
zGaTi8Ua1+7d495GBWXXkkBnvk78dfzrM+vtVHgQ8YPlFzRj5/Nmfn1sVFjg
XlZ0uxiPU7rnEskcVKjrVbyHI1Pws3MPyoI4qdCwlfPvwq8aHPpxoWONiwqr
RzkmQ3hrkaWJ1dS1nVTYm90VKOPSjOY6f66VclNhq9zNJgfbauRh+IhdcBcV
XFrTvDfdeYTQlxXRZ7xUkF/6s/MAisetj56QR3dTQSI986gHUkGk6V+qiI94
NjQpErtD+LeVnV40P1Hva5MHpuHvUM/Kn4eMglQ4yQcaF1VKEduT566Ge6kg
oqT/uflHH/rKwBBRI0QFriO/sqwVitD4oxc5+0SoULVxxXiavwXlbDDVu4hS
4VLJ9deHb1chPv+XgzNiVIh1Vkzi905FBwS2zCvvo8LFb3HPbk03In+v15tS
9lNBOPehfoRwKObgZt2z7SAVTgUujH3sqMbYw/2wqQQVjhd5maf8KUTi4myn
WiWpMB9SIPa0shd9CXijfUSKCpVWC9a9qbGYX4TzP6/DVPCuVi6JkUxCbpk+
z+ePUMHN5/WJGwr5KJu201/jGFH/+/de/TtyEUucf1KONBWui1y5S3N4gs9S
d5XvlKHCTNXxmMnDCehzRWDnQ1kqWLOZDiWc0cce1D3TvSeoIHPA5ozAixyc
Wxvyi0SmQtCau0i9C0b3LgpwBFGocMyPwpH8tQzv7AwXW6MS+BUzp14R7sR7
LwhRrtGpYLfnp1uiUy4ebI1SK5Wjghpty35Xkh9+pC2qLyBP8HW8ImsPqQi9
qo+1tleggiFfYS9HwgcUcGWf2wiigg3J++NdgR7U0pwQoXCKqHe979weyU7E
q30wN0qRCuTjDz59OdqLDswl1zOcIfhg9v0C//5a9M7s0JCBEhWKd1+9XjBU
gLZ8TZuvPkvU9+WugJ1lHtK3OsK87xwV9h0j+/4U7URvZzL3uKhQoTNcdea5
YA36ZyV9ZEaVCporHvP5C/7Y83vOKeXzVHjvJbaXWdMNa1nKXkm+QIX6QmHF
PR/K8ZPF/P9Y1amgGvX34pmvfbjGkezwnwYV+vBb/QsG47iBodi/5RIVvjFr
bZ5aa8BbnWnJh7Wo8KeTYfNg9DAGprLyN5epwHBqzsbv6HusF3qy67s2FeCi
6ek1xjaczPZuWv0qlZjPC0WrM9pxjjv6na1D6PFvZZROZD22Fazi2HmdCg6u
+fEs+bU4NFxR/OENoh7YdO4DvQPzStRSenUJ/v0JiBcq+oAr45XOk24R+23V
H+i0Gcfc0g36gXoEXkLCP8/adGK+pHOPVvWpYDUg+Sx4qR37Sje76RhSQUFo
1ShEKAdZpahFltwm+PvQ8Pj2njLcdqQtl/8OFRi103U4SxLQu3cXG+yMqSDN
sSmpcaIT0RQ6h4ZNCP3Tn524sjMP2VVcWpC/R4UnoodSVLSS8D7oYY76j/ie
BLer9IcuNNx9mY/BjAqDT5u5mqZy0CaN90cM7hP6erRkw+hbgXsaripWm1Mh
48bHT/mZNfjRmQ9XxC2oYHE99yq/RAkaH7tu+tKSCuMH9w1lpXQix8vDDtNW
hJ/913b1xMcGxPb5ZsBZayqIb6R/+c3diSp1x5KTHhH4yZ9lkJnIQMGD+hVb
baiQ11tyL4+/BjMbT3Tde0KF83p88deX23DR8u2ZZltCH78YlfjFa7CA+fRv
KTsq8AuM/BeDc5HZF2PON/ZEPchObOl+A4p8/ln8+zMqjFjNtuzv6ER1C/eo
6g5EPUy1e01XepHKo2/nsx2p0JK5I+FvZjXa89fMYIcTwTelMV2preWIx/77
IytnKkgOOAyv2dnj+j8P3HteUmH/Qx7TycxsdMbpR+SJV1Q4xFkZreScimw3
Pcx7+5oKRdK1frYzpfhA0FLDiitx3keRBkkD1fg/9sfDV92J33c53HIMCEZs
b1cXij2oYFIf+Tx1czl22We7mf8NoS9pD3P8qQUfTPzNZ+dFha6CfbGvUgvQ
oJj90WFvKhTkPt3H/qEQ9cb/VZT3pcIuxWjZRjcHHCfjcDXSjwo9rEXPO2fy
8I48BrN//lRQSnDgqwpsQB5HnRz131KB2mVmtLC7DZ3N3fS2KpAK5dRDYeGW
HUj5hEuKWDAVTkTp+CbklqLU8i3vnEOooHFHefXVsT7ko+LaPRVKhT3/PLss
OvqQVTPrJ6VwIm+KG1YMU0fQ43Me64kRxP5TYdkev5vQq2Y2rq1RVCgTObJT
wbwOWWh47bsXTYXe1BksvacRSbRz0ppj/u8PaRfG/gwjXi3fC1JxVFhOZ/t9
0mgM1QzsNPSMJ/LJQnjZ98kAmrsX8HgugQoCh8JN5/s70I3hXR4Xk4jfJ3U7
qje2oJLbQVFZyUQ+psjKynz3w2FLe/K5UqlQs3FJYPViBaowDW20TKPCi8nn
SV3mNdj0p8BIdzoV/NOb3ofpNOCbzyN+yGYS/WVekC/ubUcMm4S3vM2iAm/9
JUOT6BD86HE0/0o2sZ4jauqW4oJzN4sdu5pLhas8nwWUKquwsEPc6eI8KlAO
qcnsDujD6lv36/AVUGEpw5vb41APvuSaaPa0kAr5xs7CL91rcQSrxIuhIsKP
hV+pt6i34DWPlLcnS6hgsJdybwtPEe7llkqNKKWCnAAp7fZoB9b2TX+3UUaF
x1tPByfd78LGu4/26FVQYZEzR1NV4AMuCc36VPmOCoGPRQ00IrvxU4njf0Qr
qbBBJKTY2nuMEnO5nKuo8DrkgP0vyjDmP3Zi/1Q1FXKaOjmXfvfg3vQCmlIt
FYI7xiWPuXZi2gnKxcQ64vulwgY/F/pxQW6xIUsDFYxf1C1N2fTjG2S6zd1G
Qu+3a9gkNTrx9eoyj6Ymot8fXnMkWxPPqvLRh1qIPCbTs7rCS1By5bt8j1Yq
WKolS46WFKMtKtA020b8PvPNY8+xaMzzvmrkQgcV5lbPmjrWp+IHqqcXMzuJ
/PLouE/tCkDeHbVbuLoJ/yh8IEYj7s/fDc4KWPZQ4cASVnr7thPfHGs41t1L
hSmjWxcNnNpxt67KGdn3VPjxt+UhDqnEN7826wT0E/tL3rl2SNEQNfx3/v7y
AJFH+XN21tLSWOtz24srg1ToP3vbkbSzBnmbqgcWDRH+IBOO2eZK0OOVztQ9
I1SY1AqaipsvQMrmmth2lMj7y9kT9Z8TkMK/np7BMcKP6/XvfF/BqO6p9me5
jwS+awy3OkudETD0/wmfoILR/UsXrlTk4PrnOjs2JqlwC+dea7WpRHJbBvfr
TVPBqaY0Ph+1oB9eN+iVM1Rw1Mhfj77yAs3wjlwU/UwFT8pe90C3Zygr/NZt
py/EfJTYrMPK2oJe8Y/bTH6lQuZdBzvPl1XIPtbA88ws4R+nPtNMhDDKPDgZ
nTBHhaPKD3ydEnqRWJpRwZZ5Au8z6xdSXw4gxQMzTSYLxPz1SN9dOLEemSSa
jDb+oIJz7L/N8zoD6OLBL4uSPwm//t7Y5WdYh3wy/2PxWKJCAimwqrSwCPmS
ZwVml6kQnpH/iCkxG6eW3Je+sEoF2srnK1P66uj3yfkzmWvE89vIw5m5dfhV
mcU1zt+En+1wZbl2NwtlweJ9i3UqbCu3b/+uXYo+1zx06vpDBZ7TvbwHJKvw
Q83lQJkNQg8LuzIp4cM4s/Vxmv8/KoxdXqXSvQLQ2Pk1vMRAg79ClxTEnzQi
tj7bXm0mGlDO3K04vbsC1V1b/1y4iQZOi8atIcYVyGnI/u/uzTTgmd+jfe1w
DjYx2Nhhu4UGkNBIu2ZXg3SmHQ4MstAgxUgl8oJfHxozY5STY6WByvjsAVfv
FnR22Uk9fBsNzllXDvl8a0SfzJmN/m6nwWhHVIeidgPyXnR5coudBgI7r3Jd
f1GF7j1keYM5aLBo0f6l7GQuqmFyixHhosFtr33r71jbMIvztsIXO2jwdfV+
t1FaN77K4tk8sZMG+TfFI6Q7enHzK/ax0zw0yAjRVNn6JQ0ZcHn/jN9Fg1Dv
YH92cS8U+4Zr65bdNFi7YheF6zLx2g4/QZM9NLg0WHC1ga0Vm0ZwH2/ko0HF
hRu1TUPJmLrnrZKkAA3s5hRIHeyRyCGa97q7IA1+2G+fu1BYgBv3BZt/20sD
2+xhGdPFJPQ9js/5vDANwvW1xLia4lH9wbCgDBEanE/Pfv/t5UvsnCuYziFG
g3gZnbEJiMYFhyMrH4jTgH7kiWp8bhAyyRbu69xHgyvHnPW1ZaPRD9mYL8cP
0KC0c28HHTXhK6ViG34HaZAQj0flGQvwOsTvXJKgQR9fgYkrbzTua9h/UPsQ
DfxMeoYWyuuw2fkkuUIpGtyV9qGd/dGGm7okNHYfocEBndIZ3vu1OPViqtGT
ozRw9mLyKNUpQV/bpWw/HCPqvXTJdHGqBHVeznhDP06De1dCSo54FeLv40dj
w2RocNPxgfdiGXH/1s8u/CNLA7amH45MW4uR7ufjLTdJNKgN3v3L/3YeVjfM
G3tHJurX4kmkpmbj3d9PLAlTie+5j/12pOXhH6aFW1/QaND6Z9DmoEUNWlyk
7J2gE+8XXfZREq9EUo9Ljp8+SYOFEWMT/qlSlP+HfjZengbWPbdzrkgHI7Mn
5dc3Ixo44Isst0dC0PIf+QfGQIMHdiMqnwzz8OBz7Nxwigaum8L/dufkoMPb
TgVLnCbw4H9Cv7G/CoNXdbrbGRo0iPgO8wr24TDuM1VflWgQ9XI9ssOtDmf7
1/WpKdPg8+OJvBCXNjzAq/w1/RwN1NgY7iucKsVCwY0b7Ko0GDjkDuyMXbhD
TJX7gRoNZsfSbnJSQtFYVMvBzvM0aJ7un5b1y8VTUhdOHr9II+6DX2yrHN9h
vvR2DT91Qj8yRQ67dw7jXcc07vzUoMHpdZvTAwbd2Diry/ayJg2e/tEUCOLs
wieltbwKtGggurRdbq9HOUbFvbG82jQYMYJ9qlsacdypK0U2V2gwvFOI6YNm
Nzat7G8ZuEqDCVrGp3arj7ji3LVx2jUabC3KIj1SHMSdjYNLoddpoGR0sSTX
bApHquuy/rlB8C11t5DYO+I83SN7b94k9s861216oBazX9KTeXeLBjhgS1zm
YCtm6R0/K6xPg6MlL84ycb3HKdcMbzga0KBkXn20yr8R3x2ZfPDRkAZJ536u
M/IFoxsmd14qGhF86wqqTX/Wh6Q+zwTH3aHBqrjMo7MKY6jH5G4GswkNNLab
2v7e3Ydqv32punOXBskff+xL/TmCOKxM39ffo8GugAWGiFtTKG1l9utBUwLP
E7mFHCnjKP6J+T9XMxpYqFXcT+KaQIz/5rm/3ifWLfxmObzG0ZCDpYTaAxqc
vMDpNKgxhOQ3/TyZbkGDwoW4Yffu90jK3foSuxXhJ6vXUNumj2iGdeWO+UMa
vIx6WMUk2IGYvWyedljTwDPqucaf171oO+8vL+nHxPmun+T7EdyITEOfxvna
0CDWnsFgX3sWbuL/U7T4hAbKMUe8IoWCkG7ss1atpzRg/id65L/gYGx14N94
vh2xrq8rleRVhTyTHJd3PaPBz6YF6vrTGHToMNM2m+eEn4UHnNg4nosf5DoL
DTjQoKvmCUnhWAFKPLFZlvaCBreyPg3IHc1HNYWvlEOdaODYWP7U614fEqBu
1V13pgGHlgqJa9MAKq50s9B1ocHBMY2y5rsDSPjUdpeKVzTod7r9/JSxPxqu
8QwRcqWB5Kcsx1MR8Vj4AkemgxsN5ossNVyNjRBfm3f1uDsNuBtzeMi8PdhH
Y0f/KU+Cj2Pa26XFOvGOAb9vsW8IvTDytwzpDuKdujwMzN40SOs85PDfr3wc
9uEtzx0fGhhuEWfXqk3Frrd2S9b7EvUfzk9LasrBVR+D5Q/60+DFWyd11oQ6
nHGPX9M1gAbvI9PM3ZeDsc5cmPGXtzQw580vPO/di+ss99qpBhH+QXl3xHr0
A279GemdFkyDnSqJAn2Dg1jcWiSeLZQG/7i+Cu1xeY+Tf8cU3w+jAV/9qY3m
B7W42FG8rT2cBl6Ms84t7nVYe3PCx2ORNLCs+fVIrLUW87geWPGJosHV0vDT
6b5dWJMtedtiNA1E1Ob2nBqqxzs9JYW1Ygn/2cLHMv4tFr/hTpPNjyP8hsFq
15RBHi7wP3xuVwINLkrtp4qMVuL2XZm6jxNpkCsSaHPrWBPijTxm2Z9EA6Eu
pSPXr/lgHuEcF2oKDULGx1OqGOvwiXiZ0JBUGtRd6ije2Z6Aj+/Pz/ydRgOb
xpDf2m+KED2bVHMjgwaZgTrhIlfC8H9Hi/rLMwk/6V0yUBFIwafzqbN7s2nw
+BuzM+PzbDRDLmVwyKHBB6UymeX3VXhfhdyu8Vwa7FUxK1gRvY0fnK6QPJVP
8PvpdhmFjShEr1dQiC0g/NfGfXYotB67nqnU3FREg6F2n8G4mU5c13TKxKiY
BkYv3nH+xzOGb2nW2NWV0OCJ7zPLO46D+FvfGZ8DZUR9xy823evpw9o69fGv
y4m8yitb/cXVhdVHlEs+VxD9nH5zVlQ7Bx/WbWpTwTTYds07u7DSGp0dU51I
raRBh9/Q3qqAFLTzXuvK9mqC3y9KSj4/GUHqny9sv19D6CXITn+isgkhsw7h
9loaPHO9nhV6qQrFLmmcOFZPAy7r1p7TL1zxEevucz4NNNiIzRTREq7Dzcta
N380EvOFTKzCuGQKVrHrs9RspkHVEQ2vxaPZKPjflVd5LTR483NsSb8kGQe+
GgjlaaPBfomGjAiPNHx22/WsR+00mFJ5vEdePAc5uA/VvO+ggQvPxnPus37I
l+PmAKWL8P/v5xxvlhH69BudDe4m8NDe/EIirw1l7tZn/N1Dg8GmFs7pgRJE
ifi460Yf4U+P+nZa2veixL23D5W/J+YBL9EYxW9taF/clMLeAWI+c5CSY0vu
RKckjLWef6ABTUZuKW+hAJllfDIZG6RBQfOh790qDcj8yD17GKaBzkSY2eqO
BqSe+9UnZoQGWV9/qaBttfgJ2SyBaYyYhwR9ScdTY1B4yVzJ7XEavJK5e6bA
LAnFyz1or/1I8GdWl6N7Vxm6VrswsX+SBk11TwvJa2XopJLV6qspGmx+YGRl
4WSJF+t/bv88TfjNrh332cNT0IbqIxGVT0Q+2j/9T+hPNL7cs3Ii9TMNtIqK
PD1689DZq09Utn+lwdL5kV7kXITl+3/dNPtG6D13JH7hSzKOvGln1TZL9Fti
033Jm/7Y4eOfV0e/E/OGYAdjSFQVPm78PMx7nvAfq8AWimQ25vn6L2thgQaB
/AVFwzoBOOX+i9pLi8T81/MkeyKvGPl/Z/qQ+5MGkzU+TFp9Tei69cs57mUa
lAWkaIqMxKP8X5uZHq3QIGwqbMtu9npkYPua9/0qof/I0vRcSj06y8AqRflF
A9nC56HZDztQrIs7Cv5NzIsDU9ZSCl3o61a2y7/WaaAeZ5/FS2tCKZ5v7l7/
S8xjsykC8rwxeHA757OyDWI+ILO91hhPRODr4yvIQIciQuqxwzZIlHdn4jNG
OoSpGsbOCNSioBD/0lEmOrT4b+huPReJngvsIkKIDm/7bq5szXqOHGIDJ6M3
0+GM0l+nuvvd2PPAnjVGFjp8z73d479vHHsmhbDd3kqHHT+/uKUb1uGwIwKi
tax0OBd+R7touQ415oWT9m+nw7FLCzYU6wLsJiuk+oqNDukCsmYnlcuwbWnU
rU/sdBjge90spleOXeiiD89x0oHMqDCBTZpwKo59ncJFB2+9lEDxzbU4XWlf
+LaddBBO1j55/0YVftCYkG3KTYdM4698paU12PviwbpWHjr8VOEMzVROwIEd
yR+O8NKhVDLg3EBbKjqvdei712466EX4fGfTrURMA2lMC3uI/X8dwqEqvZj7
5pHdl/jp4Ct+eLZkpBUvj2RK5QrQoYdfWvbhVAe2MpAG7r10MM48kTPa0oif
Tedcthaiw6G1b+HNfX5Y/57svT5hYr8uvebNma04by7/GVmUDo8cUm1ptB58
1ZrsFyRG4OP021Ikrgy/XSlKXBOnQ6H6eNN1qTRc9oRWdm0/HcqCA6pGiPl1
G0NZR+kBOuwcUZd1mi3Fh1+enBKQoMNVWW+2oN9N+DzLuzV7STpwvk3hnGyp
QfqvEfvoITpYpuWzHvrZjxTZqkTRYTqwib5rPi3UjfK9FcnRR+iwf9s2tS7u
FjTCU6vKeIwOL0c3CXQdqULdIUp6htJ0kJa/qm13pAWzCTY8rDlOh9zmZZd9
6X34fMw5132ydFgfMfOkkd/j8n3N4S4n6PCxx5IhlmECs6eo5cyQ6JA3uK7B
2zKGlQ+11SlT6GDgd2j6g3k/9sm6OJhMpYOqgJKroX4pZjnR+Z2VTuzHzfJr
WaoaWxVf2mQqR4cTDAYtLz1bcAmtZ3frSTrsM9HZGhDkjgorLh8+okAH82y9
4uihAnRW6T14ITqcFVzjMy54h5wbrmrPAx0E9Q7VVDS1IzO1D/c0FOnwYt/4
utNsMdrUdv15zmlifztT1eO3G/BtzWG/nUp0CPl3/r5iQTVy6ruZ9PAsHbhV
zPkzCxoR67Wxsl5lOjwJOzoefLITLY/qd5JUiPoTFV+dcy5HubcnpgJV6VCh
XylrJV6LeqZv/1pVo4MdVJobdlZhy3vT7Ncu0CElRUlR5GkW+vrdWKz0Ih2K
mfW63440IrLVZ7KABh0u5P4nsLLag4xX7qnZX6IDrfhYLj9vOzJ/8k1vRJMO
cVOsLZ7FLShgw8xa4TIdtnNs1CgkU7GUw3fXKG1Cf8aLQTLVQXgHs0UEw1U6
VIqT4vdaZaPbbj9yDHQIvepEuwzIRKIytof11dfokChyOYrXyAnv8FkaFL9B
hzevqTvCcSQq4Xk8/1KX6PcdLl2W9nr0MHB108xNOlg0123+FVyFpvba7lHW
o4Opu9SqUnIm1o3+fThZnw7f9sRLjc4XYa/99qdYDeng+Kr8fOXvWPQs6a/2
f7fp8Mq14terfV1I7rDDfy1GdKCHjU0VHetFvRkMDoeNCT0VcU77NzWiTFkn
/zcmRP/1FgJDxKvRp8JNyd/v0mGy1PLoj/k29EDOpVz9PzrIBd+85JpTg+rx
lq5sUzqI+515932gC8medp3ecZ/gm97BZB6WWCTUyPrbypwO8vKez9XS6pCV
mgdH7wM6ZBlyT+gtFyH5djZxkiUd3LaO3Bw9W4DyNLwogVZ0KMmoOV0p3oMM
eznPrz6kw8x+mr/NsWbUdt1XX+cRHZ73r2nIzMfj38M7H5U8poOa0HXRJ3yZ
uN8wwI24+oGs7EFJrZQQ9HB6V6SdLeG/DFeyQ5hjUdW9oNzhp3R44CQoyGAR
g17N7WmQt6fDphkZv0cf4vBNi9ChyGd0MPodeXZvTRwKWBZY+Pec6L+x+Hl+
hgas9ySC2cCR0Heeh3WFXze+uy7EV/2C4I/v6i3tjRp81TH6iLgzHcqnMwXb
b3biWSYxxZcv6TC1/2CY7sFOLOsad2Xahej3Fi/PH17jWIBtv+nZ13RgKP3t
d/zsJHb1SXRIcqXD+MwlhofZQ3idRyJgqzvhh3StrwJs45ganJJ8z4MOj000
+R1kRvAQn1RFsyfRX7GL7ucj2jBHVHqXlBdR3zaH+c9iI3hU/OiMpzcdgkOa
N+v8acNPE7N+z/nQoVveSyMbBaAKqeOc6n50mF7p2rmlLB49ycgVz/angybr
ybtoohWzypyg7nhL5NHs2r6nO+qxS1HBeatAOrCQTrk05w7hu3IUg54ggo8z
6xxMH1rwyrviRydC6KCgq+g5KpSHpRXp7m9D6RDQo3nzan0w4qgri1wJo8PT
lQHR11eacOI5+byrEYR+lv9dVu2sRQpt7xqKI4n+PTgobdFThe5owDBfNB38
1xSifOy6EWdv1cLTGDpIHFaoYitJQh7XTm8ejqXD5n2OHmrn83H4cC2ffDyh
T3aWIib7RnxZ/+zRyARivbtGwmJXMBaZalD8l0iHIPXvvX8d21GmicpV/WQ6
2DcNScG+QNT0rdm0KoWo7+gV3RblPHza4ryjWBodnkWEJk1lVuP2pbYA53Q6
bCs+1xVztw5NPVZPmcqgQ/TSK+bHTk2If72zQimLDlyr/pyS97qRq4Nmd2I2
Hfa2sDQov6tGOzf3zrDk0kG0z3TwcFwPCn6tvX43jw46vky7f7LWozC2fs7m
fEL/7OmXfu8uRKd8dPZJFdJB3XSbqpB5DxrmHqR6FtFB44upO/vLYSQUeOPC
XDEd5iIvhHgYjqNegRGDi6V0iHw7fXzH9V70L+rW46wyOjCOHu41z+xAq6Lj
7lwVdBBLvXVt9k4bKk4wiLJ8R4cMaSuZDq0u9EpyMq8bE/1m0WTPkKxF1zKN
GmWr6DD8UOwOh30PmpSZGQ6opkMd7+27PeG1yLXQ5MdyDeEPp4QDmMyaUTjt
y+ardXS4K8Hw8Mmv9yi64j/+4no6XO7hPkNmb0bDirNH+RrpsPY5Un3Pjiq0
vf7+6adNdHBZWPfi/dmEWlTnrw4108Fa9sCVU7rNWL/VwuxkKx1un37VbqHV
i6U0Fx0j2uhgZqDduD28CRu9f/h2o50OQ1l88nTjRvzz6nKKXifBZ9JuXueo
Ztw0/PhdZRfx/uUdBq9bgtAz/bVu0R7CD+R2y0+yJeDkadtPTr10KBiMfRPO
44We31tfn+yjQ+3JPCZjiVbsP2fPpdRP6Hm58FMlfwM2sNjYlzhA4H9Db/Jw
VyS2XHKgsQzSYUWOsUYvrxAvPGG8eHeI4M+BSBDTrccr606GTcN0+KssxKmz
XIh3ODDbHBqlw/ESVZ4tFgnoLfMrD48xOmQv2UZSmbOQritL9Ow4HZhX69l2
nM/DsN0t/8IEHZr4++WuJdTiGz7bmjIn6TBm1HL9tVoUtub2HOGcpkNEzZtt
m3Y3I89A9kWLGWK+IoGuErUKPeP33tL9iQ7v9znMwO42FBHJJSD7hegXNXmm
0aQVhYr5HQv4SswLd0aOzml2IYZE7jPL3+ggmebrKhQai9cl3+pcmSPyJDug
zt23Dr3N5L1f9J0OPF19+xdtGhFFJvjFngU6/JBDcjwCPeh/9XVlrQ==
       "]],
      FontFamily->"Arial"]}, {{}, {}}},
   AspectRatio->NCache[
     Rational[1, 4], 0.25],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"Log[x]\"", TraditionalForm], 
     FormBox["\"noise\"", TraditionalForm]},
   AxesOrigin->{0., -0.5},
   BaseStyle->{FontFamily -> "Arial"},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{Automatic, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{506.6651041666542, Automatic},
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0., 26.937873935372604`}, {-0.8256062838242961, 
    0.7112410860823793}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]],ExpressionUUID->
  "cd8aae04-5208-451b-ba1e-86f46d2a5358"],
 "\n3) NMinimize could be uses to fit coefficients ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["b", "1"], ",", 
     SubscriptBox["b", "2"], ",", "..."}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c2926f95-0d85-4511-9a34-82488abee7a7"],
 "} of approx formulas. \[LineSeparator]And simple check for extrapolation \
shows correctness of the formula.\n4) Good PrimePi approximation (Riemann) is \
based on LogIntegral function. \n",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"li", "[", "x", "]"}], "=", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "x"], 
      RowBox[{
       FractionBox["1", 
        RowBox[{"Log", "[", "t", "]"}]], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "DisplayFormula"], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "992049a0-275f-4f6b-a0f0-eefd73b4205d"],
 "\[LineSeparator]How can one come to the idea of estimating ",
 StyleBox["|\[Pi][x] - li[x]|", "InlineFormula"],
 "? It is poorly covered on the Internet.\n\[LineSeparator]It looks like\n",
 StyleBox["\n", "DisplayFormula"],
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{"\[Pi]", "[", "x", "]"}], "InlineFormula"], "=", " ", 
   RowBox[{
    RowBox[{"li", "[", "x", "]"}], "+", 
    RowBox[{
     FractionBox[
      SqrtBox["x"], 
      RowBox[{"Log", "[", "x", "]"}]], "noise"}]}]}]],ExpressionUUID->
  "67adf881-8be3-4f9d-9d17-ec34e76bcdd1"],
 "\nbut more precise fact (not proven here) is\n\n",
 Cell[BoxData[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"\[Pi]", "[", "x", "]"}], "InlineFormula"], "=", " ", 
    RowBox[{
     RowBox[{"R", "[", "x", "]"}], "+", " ", 
     RowBox[{"\[Eta]", "[", "x", "]"}], " ", "+", 
     RowBox[{
      FractionBox[
       SqrtBox["x"], 
       RowBox[{"Log", "[", "x", "]"}]], "noise"}]}]}], ",", 
   "\[IndentingNewLine]", "where"}], "\[IndentingNewLine]", 
  RowBox[{"    ", 
   RowBox[{
    RowBox[{
     RowBox[{"R", "[", "x", "]"}], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"li", "[", "x", "]"}], "-", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"li", "[", 
         SuperscriptBox["x", 
          RowBox[{"1", "/", "2"}]], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "3"], 
        RowBox[{"li", "[", 
         SuperscriptBox["x", 
          RowBox[{"1", "/", "3"}]], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "5"], 
        RowBox[{"li", "[", 
         SuperscriptBox["x", 
          RowBox[{"1", "/", "5"}]], "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "6"], 
        RowBox[{"li", "[", 
         SuperscriptBox["x", 
          RowBox[{"1", "/", "6"}]], "]"}]}], "+"}], ".."}]}], 
    ";"}]}], "\[IndentingNewLine]", 
  RowBox[{"    ", 
   RowBox[{
    RowBox[{"\[Eta]", "[", "x", "]"}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "\[Pi]"], "arctan", 
       RowBox[{"(", 
        FractionBox["\[Pi]", 
         RowBox[{"Log", "[", "x", "]"}]], ")"}]}], "-", 
      FractionBox["1", 
       RowBox[{"Log", "[", "x", "]"}]]}], "=", 
     RowBox[{
      RowBox[{"O", "[", 
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]], "]"}], "."}]}]}]}]}],
  ExpressionUUID->"59d2ef31-589c-45fb-a5f9-a5940f0ac9c1"],
 "\n\n5)  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    FractionBox[
     SqrtBox["x"], 
     RowBox[{"Log", "[", "x", "]"}]], "noise"}], "<", 
   RowBox[{"C", 
    SqrtBox[
     RowBox[{"x", " "}]], 
    RowBox[{"Log", "[", "x", "]"}]}]}]],ExpressionUUID->
  "529329fb-b204-45a7-8c6a-801a06707f14"],
 " is equivalent to Riemann hypothesis.\n\n",
 Cell[BoxData[
  RowBox[{"noise", "<", 
   RowBox[{"C", " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], "2"]}]}]],ExpressionUUID->
  "3d8eb07f-fdbc-40c3-be62-3faa2292a84e"],
 "\n\nRiemann hypothesis == non trivial zeros of \[Zeta]-function lay on line \
Re[z]==1/2.\n\[Zeta][z] := analytic continuation of ",
 StyleBox["\[Zeta][z]=", "InlineFormula"],
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "\[Infinity]"], 
    FractionBox["1", 
     SuperscriptBox["k", "z"]]}], TraditionalForm]], "InlineFormula",
  FormatType->"TraditionalForm",ExpressionUUID->
  "8f11e676-29ee-4fd2-a1de-1a816387bf69"], "InlineFormula"],
 "."
}], "Text",
 CellChangeTimes->{{3.8837335002356167`*^9, 3.883733684433182*^9}, {
  3.883734548530205*^9, 3.883734692244089*^9}, {3.883734763615947*^9, 
  3.88373479670918*^9}, {3.883735174951387*^9, 3.8837357330724487`*^9}, {
  3.8837360511604548`*^9, 3.883736051787888*^9}, {3.883736095045452*^9, 
  3.8837362303964376`*^9}, {3.883736301360775*^9, 3.883736362032982*^9}, {
  3.883736395796009*^9, 3.8837365326858377`*^9}, {3.883741934752293*^9, 
  3.883741946685759*^9}, {3.8837419900730753`*^9, 3.883742059857435*^9}, {
  3.883742112629978*^9, 3.8837424216711483`*^9}, {3.883742453603653*^9, 
  3.883742734954108*^9}, {3.8838109753548193`*^9, 3.883811008934155*^9}, {
  3.8838110466605597`*^9, 3.883811058302621*^9}, {3.883811088679941*^9, 
  3.8838110907681828`*^9}, {3.883811163798788*^9, 3.883811163799582*^9}, {
  3.8838112212048283`*^9, 3.88381124912017*^9}, {3.88381171942035*^9, 
  3.883811719420808*^9}},ExpressionUUID->"9c3fb034-587b-4d7a-b5f9-\
3073f0202f3b"]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{1324, 747},
WindowMargins->{{6, Automatic}, {Automatic, 0}},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{595, 842}},
TaggingRules->{"NewCellStyle" -> "Text"},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"e1143d48-4675-43f4-83d6-4f59e0740e52"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 528, 12, 116, "Input",ExpressionUUID->"14eef8f1-fbb0-4156-b457-e5e0efcea88a"],
Cell[1089, 34, 333, 7, 62, "Text",ExpressionUUID->"caff141d-4d47-4a0c-b6d6-0bd7ee3ad78a"],
Cell[CellGroupData[{
Cell[1447, 45, 163, 3, 64, "Subsection",ExpressionUUID->"9a279c80-4e6b-4f64-bf0b-08e811ef49d0"],
Cell[1613, 50, 291, 5, 76, "Input",ExpressionUUID->"6d7489d2-eedb-4820-94f1-37cf403848b5"],
Cell[1907, 57, 208, 4, 76, "Input",ExpressionUUID->"cf299a75-e7e8-4297-9986-9f1b5fe10848"],
Cell[2118, 63, 280, 5, 76, "Input",ExpressionUUID->"bade8a74-fd9e-4870-a021-00052005a540"],
Cell[2401, 70, 293, 6, 76, "Input",ExpressionUUID->"43341a82-526d-4bf6-b388-9e32bb8aa9d6"],
Cell[2697, 78, 268, 7, 81, "Input",ExpressionUUID->"401bf8e5-0242-4dcb-a2f5-8fa0148cac0c"],
Cell[2968, 87, 373, 9, 81, "Input",ExpressionUUID->"e00133e1-da97-4485-8fec-31cc6d57b5cf"],
Cell[3344, 98, 395, 10, 81, "Input",ExpressionUUID->"2efe29fc-fe1f-4a61-83ac-6eb309f49c74"],
Cell[3742, 110, 269, 7, 81, "Input",ExpressionUUID->"88e11c56-3402-4c04-85d9-ae646d69ab2f"],
Cell[4014, 119, 373, 9, 81, "Input",ExpressionUUID->"b728b110-a793-47b1-8ece-b3ae34370256"],
Cell[4390, 130, 342, 7, 81, "Input",ExpressionUUID->"5a55e75d-2698-4850-b7c1-422a0b7632fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4769, 142, 233, 4, 64, "Subsection",ExpressionUUID->"74b37c91-21ad-4d7e-b314-38d0de826c66"],
Cell[5005, 148, 229, 4, 62, "Text",ExpressionUUID->"77182b41-cfbb-42e4-8002-1837de77f9e5"],
Cell[5237, 154, 288, 6, 76, "Input",ExpressionUUID->"9530998e-99f2-470f-83b1-3ed410306ea3"],
Cell[5528, 162, 672, 15, 124, "Input",ExpressionUUID->"08d711f9-e9ad-4f00-8fc9-6026efb20e07"],
Cell[6203, 179, 705, 15, 120, "Input",ExpressionUUID->"e8a0fab8-7874-43c4-b854-4d960a0f6548"],
Cell[6911, 196, 195, 3, 62, "Text",ExpressionUUID->"3ff8c933-6cf0-49f8-ab70-f2467ca3f2a1"],
Cell[7109, 201, 338, 7, 76, "Input",ExpressionUUID->"bed177d1-25fa-4def-b4a2-fb7296fc0a94"],
Cell[7450, 210, 337, 8, 76, "Input",ExpressionUUID->"f5b41c9a-7e63-441d-9dd5-3a79c27e02a2"],
Cell[7790, 220, 316, 5, 76, "Input",ExpressionUUID->"490fecf6-a815-4334-b052-237644fa8f81"],
Cell[8109, 227, 526, 11, 76, "Input",ExpressionUUID->"2a8d0dc0-f7bf-4cb6-af1e-650a2df8b65c"],
Cell[8638, 240, 226, 4, 76, "Input",ExpressionUUID->"09e7127c-5632-4883-af17-095cf2a9c03b"],
Cell[8867, 246, 813, 17, 76, "Input",ExpressionUUID->"d1e33a72-aad4-42ab-a393-da4cb0089cf0"],
Cell[9683, 265, 184, 3, 62, "Text",ExpressionUUID->"9356bffa-c434-4b89-b311-fa51b2a2409c"],
Cell[9870, 270, 765, 18, 147, "Input",ExpressionUUID->"e5419a7a-7ea2-4ce2-9abc-baf909e2bf2e"],
Cell[10638, 290, 946, 20, 154, "Input",ExpressionUUID->"4c6e63dd-5771-4de6-9644-0094fdb67084"],
Cell[11587, 312, 489, 13, 91, "Text",ExpressionUUID->"4e1012ad-90cb-4475-990e-99bbdc8f0ab1"],
Cell[12079, 327, 523, 16, 105, "Input",ExpressionUUID->"9b8436fa-3aa7-4cf3-a80a-7875104c96f7"],
Cell[12605, 345, 1309, 32, 264, "Input",ExpressionUUID->"01627fb6-af97-4af8-b561-a66f5dd0f4f0"],
Cell[13917, 379, 2038, 52, 379, "Input",ExpressionUUID->"d88722cd-6ea0-41e3-8984-70888a7241ef"],
Cell[15958, 433, 1521, 43, 369, "Input",ExpressionUUID->"bfd0a284-7d5f-42fd-ae45-10b44e1bb64b"],
Cell[17482, 478, 129, 3, 76, "Input",ExpressionUUID->"30a6fb02-f317-4c60-83c8-8a202176e48c"],
Cell[17614, 483, 1608, 44, 369, "Input",ExpressionUUID->"61805677-9554-4567-8e1a-507f9d135558"],
Cell[19225, 529, 661, 17, 118, "Input",ExpressionUUID->"bb5224e1-ac47-4c54-ba1e-30743726c81a"],
Cell[19889, 548, 746, 19, 206, "Input",ExpressionUUID->"0ee35c42-d396-4f13-92ba-94bb03a687af"],
Cell[20638, 569, 33856, 561, 107, "Text",ExpressionUUID->"607b4c38-642a-4192-8125-f0c293f56603"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54531, 1135, 155, 3, 64, "Subsection",ExpressionUUID->"9b72f3bd-4309-46ff-a24d-92c32fd2185d"],
Cell[54689, 1140, 1174, 29, 233, "Input",ExpressionUUID->"3e08dc37-26a3-4d00-9795-3d9eac333115"],
Cell[55866, 1171, 346, 7, 76, "Input",ExpressionUUID->"c7ac5e1e-46d2-49f6-98aa-10ba4c8195cc"],
Cell[56215, 1180, 855, 19, 116, "Input",ExpressionUUID->"e9759762-3e18-4507-99bb-fc3bee7a1ee5"],
Cell[57073, 1201, 1497, 41, 116, "Input",ExpressionUUID->"8d0fc5dc-cbf9-42d3-bf84-c0b7976878fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58607, 1247, 237, 4, 64, "Subsection",ExpressionUUID->"e0e3b1bf-16f1-4bb9-8d02-45d48d371d64"],
Cell[58847, 1253, 563, 17, 107, "Input",ExpressionUUID->"cbee257c-8d37-464a-aa2f-3aef81cbd772"],
Cell[59413, 1272, 529, 11, 116, "Input",ExpressionUUID->"c57293c3-49eb-48d6-9f47-548e7a114a0b"],
Cell[59945, 1285, 1117, 25, 138, "Input",ExpressionUUID->"5fb63ffe-73b2-4aef-ab68-e3ca021480b1"],
Cell[61065, 1312, 1629, 42, 315, "Input",ExpressionUUID->"a71d5036-d874-4059-b3e2-1587fb790edf"],
Cell[62697, 1356, 640, 16, 116, "Input",ExpressionUUID->"b0c9238d-c4d7-43c9-8cdb-a36e8801a6a2"],
Cell[63340, 1374, 1206, 27, 116, "Input",ExpressionUUID->"a2f7b596-5a73-4b82-99e4-dee3a1f056ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64583, 1406, 237, 4, 64, "Subsection",ExpressionUUID->"be37d909-f3d7-4d5d-97da-f91c92ecd9b8"],
Cell[64823, 1412, 567, 18, 107, "Input",ExpressionUUID->"4bcb5b1f-4e33-4258-b521-62c7e0145787"],
Cell[65393, 1432, 790, 22, 120, "Input",ExpressionUUID->"cc590864-5410-4afc-a0e9-2f655a47058a"],
Cell[66186, 1456, 529, 11, 116, "Input",ExpressionUUID->"19153aaa-a73a-4189-a03a-44148d3cc663"],
Cell[66718, 1469, 1283, 30, 142, "Input",ExpressionUUID->"c89bf456-8c8e-44a0-81dc-d435d2b99536"],
Cell[68004, 1501, 1624, 42, 315, "Input",ExpressionUUID->"0fe62716-4c35-4f24-ad8f-fd8c41384f9b"],
Cell[69631, 1545, 640, 16, 116, "Input",ExpressionUUID->"f8357aaa-c4e3-4ff5-a496-af7a093e1606"],
Cell[70274, 1563, 1256, 28, 116, "Input",ExpressionUUID->"348fdf11-826a-4765-8f8c-8e8b4af1e086"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71567, 1596, 237, 4, 64, "Subsection",ExpressionUUID->"39712268-7638-4a96-88ca-a31403f8fa27"],
Cell[71807, 1602, 1837, 45, 122, "Input",ExpressionUUID->"1bad4099-dca2-4f8e-8d2a-3c624a19e4ca"],
Cell[73647, 1649, 517, 10, 116, "Input",ExpressionUUID->"bef33e7a-33f3-445f-8c35-100b9d30fb88"],
Cell[74167, 1661, 2312, 49, 143, "Input",ExpressionUUID->"229c39fb-7b25-4e33-abf6-4fff7bd4009f"],
Cell[76482, 1712, 3102, 63, 315, "Input",ExpressionUUID->"2116f859-6cf6-435b-b3de-7c785dc7715d"],
Cell[79587, 1777, 640, 16, 116, "Input",ExpressionUUID->"908cf7e9-a8aa-4198-b22e-23991ec3420d"],
Cell[80230, 1795, 1674, 40, 176, "Input",ExpressionUUID->"a15cc90c-788a-481d-a9f0-216778f9b0a2"],
Cell[81907, 1837, 986, 29, 176, "Input",ExpressionUUID->"a9a1f153-1869-4c13-9d3b-68d69ff4983b"],
Cell[82896, 1868, 872, 26, 155, "Input",ExpressionUUID->"e5437824-9330-4510-8a23-add3dc97c26b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83805, 1899, 282, 4, 64, "Subsection",ExpressionUUID->"44f7b482-8ac2-4e22-8d24-6721c7f1f707"],
Cell[84090, 1905, 1841, 46, 122, "Input",ExpressionUUID->"eed20764-27b7-4b47-bce5-74fa2e824cb2"],
Cell[85934, 1953, 1642, 43, 205, "Input",ExpressionUUID->"3f6ddb08-ce91-4fdc-ab3c-2d096d8745c6"],
Cell[87579, 1998, 517, 10, 116, "Input",ExpressionUUID->"0d1b4285-d96c-4b2d-baea-7049f9b87ef3"],
Cell[88099, 2010, 2887, 56, 288, "Input",ExpressionUUID->"aa6189c9-de1a-4da7-aad3-ef0878f83c19"],
Cell[90989, 2068, 3432, 57, 276, "Input",ExpressionUUID->"6ab68bcc-6f72-48d0-8c1f-036147d74939"],
Cell[94424, 2127, 640, 16, 116, "Input",ExpressionUUID->"78ffa743-ab8d-4f83-a423-ce9e4c6ce935"],
Cell[95067, 2145, 1543, 34, 233, "Input",ExpressionUUID->"f71a6ea4-b64e-4a8b-a212-f23adfe8d3be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96647, 2184, 455, 7, 64, "Subsection",ExpressionUUID->"ad6d7460-3df0-4ea7-acb5-6d9935bf6f2d"],
Cell[97105, 2193, 337, 8, 110, "Input",ExpressionUUID->"d88ffdf0-3d10-4076-b114-5c2c6a1bb9e9"],
Cell[97445, 2203, 494, 13, 110, "Input",ExpressionUUID->"ab8ece0d-dd8a-4128-8a3c-5982cffcecc2"],
Cell[97942, 2218, 631, 16, 116, "Input",ExpressionUUID->"46fa27e0-cd86-42c3-aeb4-916b07b5d866"],
Cell[98576, 2236, 609, 16, 116, "Input",ExpressionUUID->"ff6bd80f-4bed-4b92-91bb-48cb120d3c22"],
Cell[99188, 2254, 658, 18, 116, "Input",ExpressionUUID->"d696d651-66c4-474c-9082-7009049b98d3"],
Cell[99849, 2274, 145, 3, 97, "Input",ExpressionUUID->"25fdb65a-d520-4890-ba49-933d7d69567d"],
Cell[99997, 2279, 2399, 67, 482, "Input",ExpressionUUID->"557eeeb4-3bcb-4678-95ba-0bf11cca3852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102433, 2351, 292, 4, 64, "Subsection",ExpressionUUID->"c0ef21bc-5552-420e-88a7-33bc42b1b078"],
Cell[102728, 2357, 637, 19, 142, "Input",ExpressionUUID->"474a6624-6390-4488-97ca-f7bee72df1f9"],
Cell[103368, 2378, 327, 7, 97, "Input",ExpressionUUID->"d9eb5e62-c9c1-46fc-9274-352fd92c99b6"],
Cell[103698, 2387, 612, 17, 131, "Input",ExpressionUUID->"3a70a301-3f86-4de9-8cf9-19e71c5fc7d6"],
Cell[104313, 2406, 649, 19, 178, "Input",ExpressionUUID->"021f34bf-810c-477a-b51f-afbab5f07643"],
Cell[104965, 2427, 2130, 56, 461, "Input",ExpressionUUID->"0544e4a7-a1ac-41f1-b0ea-fef781e6730a"],
Cell[107098, 2485, 145, 3, 97, "Input",ExpressionUUID->"2e6f7d0e-4b05-438c-88ce-254232fa5aa7"],
Cell[107246, 2490, 1065, 30, 289, "Input",ExpressionUUID->"4b47926e-f7cd-4635-8895-885bf21d8679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108348, 2525, 159, 3, 64, "Subsection",ExpressionUUID->"17fe2165-752a-4ad1-9645-e32f503fe464"],
Cell[108510, 2530, 97837, 1735, 1590, "Text",ExpressionUUID->"9c3fb034-587b-4d7a-b5f9-3073f0202f3b"]
}, Open  ]]
}
]
*)

